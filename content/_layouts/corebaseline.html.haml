---
layout: developersection
---

:ruby
    oldest_weekly = site._generated[:core_tiers].weeklyCores[0]

    # For this file, assume that the the entries are in increasing order and get the second column (which is the last pre-split version)
    # TODO Figure out a way to obtain this content differently, this is terrible
    split_versions = open('https://raw.githubusercontent.com/jenkinsci/jenkins/master/core/src/main/resources/jenkins/split-plugins.txt').read.lines.select { |l| l.strip.length > 0 && !(l.strip =~ /^#/) }.map { |l| l.split(' ')[1] }
    latest_split = split_versions[-1]

    lts = site._generated[:core_tiers].stableCores
    oldest_lts = lts[0]
    all_lts = site._generated[:lts_releases].results.map { |v| v.version }

    next_lts_1 = all_lts.select { |v| v =~ /[.]1$/ }[0]
    # We assume that lts will contain at least one release of the previous LTS line, which is reasonable.
    # Surely there's going to be at least one plugin depending on the old .1 by the time the next .1 is available.
    previous_lts_highs = lts.map { |v| v[0...-1] }.uniq[0...-1].map { |l| all_lts.select { |v| v.start_with?(l) }[0] }

= page.content.gsub('PLACEHOLDER_NEWER_LTS_POINT_ONE', next_lts_1).gsub('PLACEHOLDER_RECENT_LTS_POINT_HIGHS', previous_lts_highs[-2...].join(' and ')).gsub('PLACEHOLDER_OLDER_LTS_POINT_HIGHS', previous_lts_highs[0...-2].join(' and ')).gsub('PLACEHOLDER_OLDEST_LTS', oldest_lts).gsub('PLACEHOLDER_OLDEST_WEEKLY', oldest_weekly).gsub('PLACEHOLDER_LATEST_SPLIT', latest_split)
