---
layout: default
---

:ruby
  chapter_key = File.basename(File.dirname(page.source_path))
  index = site.handbook.chapters.index { |c| c.key == chapter_key }
  chapter = site.handbook.chapters[index]

  previous_chapter = nil
  next_chapter = nil
  next_is_section = false

  if index > 0
    previous_chapter = site.handbook.chapters[index - 1]
  end

  if chapter.sections && chapter.sections.size > 0
    next_chapter = chapter.sections.first
    next_is_section = true
  elsif index < site.handbook.chapters.size
    next_chapter = site.handbook.chapters[index + 1]
  end


.container
  .row.body

    .section_nav.pagination-links
      - if previous_chapter
        %a.prev.page-link{:href =>  File.join('..', previous_chapter.key)}
          ⇐ #{previous_chapter.title}

      %a.index.page-link{:href => '..'}
        Index

      - if next_chapter
        - if next_is_section
          %a.next.page-link{:href =>  next_chapter.key}
            #{next_chapter.title} ⇒
        - else
          %a.next.page-link{:href =>  File.join('..', next_chapter.key)}
            #{next_chapter.title} ⇒




    .section
      %h1
        = page.title

      - if chapter.sections && chapter.sections.size > 0
        #subsections
          .toc
            #toc-title
              Chapter Sub-Sections
            %ul
              - chapter.sections.each do |section|
                %li
                  %a{:href => section.key}
                    = section.title


      = content


    .section_nav.pagination-links
      - if previous_chapter
        %a.prev.page-link{:href =>  File.join('..', previous_chapter.key)}
          ⇐ #{previous_chapter.title}

      %a.index.page-link{:href => '..'}
        Index

      - if next_is_section
        %a.next.page-link{:href =>  next_chapter.key}
          #{next_chapter.title} ⇒
      - elsif next_chapter
        %a.next.page-link{:href =>  File.join('..', next_chapter.key)}
          #{next_chapter.title} ⇒
