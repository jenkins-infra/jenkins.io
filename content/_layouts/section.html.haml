---
layout: default
---

.container
  .row.body
    %h1
      = page.title

    = content


  :ruby
    section_key = File.basename(page.source_path, File.extname(page.source_path))
    chapter_key = File.basename(File.dirname(page.source_path))
    chapter = site.handbook.chapter_for_path(chapter_key)

    our_index = chapter.sections.find_index { |s| s.key == section_key }
    total = chapter.sections.size

    # We need to do all this silly arithmetic in order to determine what the
    # indices for the previous and/or next sections in this chapter would be
    prev_section = nil
    if our_index > 0
      prev_section = our_index - 1
    end

    next_section = nil
    if our_index < (total - 1)
      next_section = our_index + 1
    end


  %div.section_nav
    - unless prev_section.nil?
      - section = chapter.sections[prev_section]
      %a.prev{:href => File.join('..', section.key)}
        Previous (#{section.title})


    %a.up{:href => '../'}
      Up to
      = chapter.title


    - unless next_section.nil?
      - section = chapter.sections[next_section]
      %a.next{:href => File.join('..', section.key)}
        Next (#{section.title})
