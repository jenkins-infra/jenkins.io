---
layout: simplepage
section: security
notitle: true
---

:ruby
  require 'asciidoctor'

  plugins = page.issues.collect { |issue| issue.plugins }.flatten.uniq.keep_if { |p| p }.sort { |x,y| (site._generated[:update_center].plugins[x.name]&.title&.downcase || x.name&.downcase) <=> (site._generated[:update_center].plugins[y.name]&.title&.downcase || y.name&.downcase) }
  credits = page.issues.reduce({}) do |issues, issue|
    if issue.has_key?("reporter")
      if !issues.has_key?(issue.reporter)
        issues[issue.reporter] = []
      end
      if !issues[issue.reporter].include?(issue.id)
        issues[issue.reporter] << issue.id
      end
    end
    issues
  end
  credits = credits.sort_by { |k,v| k }

  versions = page.issues.collect { |issue| issue.plugins }.flatten

  fixed_plugins = plugins.dup.keep_if { |p| p.fixed }
  unfixed_plugins = plugins.dup.keep_if { |p| !p.fixed }

%p
  %a{:href => '../../advisories'}
    Security Advisories
  &raquo;
  = page.title

%h1
  = page.title

%p
  This advisory announces vulnerabilities in the following Jenkins deliverables:

%p
  %ul
    - if page.core
      %li
        Jenkins (core)
    - plugins.each do | plugin |
      %li
        - if site._generated[:update_center].plugins[plugin.name]
          %a{:href => 'https://plugins.jenkins.io/' + plugin.name }
            = site._generated[:update_center].plugins[plugin.name].title
            Plugin
        - else
          = plugin.title || plugin.name
          Plugin


- described_issues = page.issues.dup.keep_if { |i| i.title && i.description }
- if described_issues.size > 0
  %h2
    Descriptions
  - described_issues.each do | issue |
    %h3{:id => issue.id}
      = issue.title
    %strong
      = issue.id
      - if issue.cve
        \/
        = issue.cve
    = Asciidoctor.convert issue.description, safe: :safe
- else
  - # If there is any content, it's the issue descriptions -- but only show if there are none in the data
  = content

%h2
  Severity

%ul
  - page.issues.each do | issue |
    %li
      = "#{issue.id}:"
      - if issue.cvss.vector.start_with? "CVSS:3.0"
        %a{ :href => 'http://www.first.org/cvss/calculator/3.0#' + issue.cvss.vector }
          = issue.cvss.severity
      - else
        = issue.cvss.severity

%h2
  Affected Versions
%ul
  - if page.core&.weekly&.previous
    %li
      Jenkins weekly up to and including
      = page.core.weekly&.previous
  - if page.core&.lts&.previous
    %li
      Jenkins LTS up to and including
      = page.core.lts&.previous
  - plugins.each do | plugin |
    %li
      %strong
        = site._generated[:update_center].plugins[plugin.name]&.title || plugin.title || plugin.name
        Plugin
      - if plugin.previous
        up to and including
        = plugin.previous
      - else
        (all versions)

%h2
  Fix
- if fixed_plugins.length > 0 || page.core&.weekly&.fixed || page.core&.lts&.fixed
  %ul
    - if page.core&.weekly&.fixed
      %li
        Jenkins weekly should be updated to version
        = page.core.weekly&.fixed
    - if page.core&.lts&.fixed
      %li
        Jenkins LTS should be updated to version
        = page.core.lts&.fixed
    - fixed_plugins.each do | plugin |
      %li
        %strong
          = site._generated[:update_center].plugins[plugin.name]&.title || plugin.title || plugin.name
          Plugin
        should be updated to version
        = plugin.fixed
  %p
    These versions include fixes to the vulnerabilities described above. All prior versions are considered to be affected by these vulnerabilities unless otherwise indicated.

- if unfixed_plugins.length > 0
  - # TODO layout does not support unfixed core releases
  %p
    As of publication of this advisory, no fixes are available for the following plugins:
  %ul
    - unfixed_plugins.each do | plugin |
      %li
        = site._generated[:update_center].plugins[plugin.name]&.title || plugin.title || plugin.name
        Plugin


- if credits.length > 0
  %h2
    Credit

  %p
    The Jenkins project would like to thank the reporters for discovering and
    %a{:href => expand_link('security/#reporting-vulnerabilities')}
      reporting
    these vulnerabilities:

    %ul
      - credits.each do | reporter, issues |
        %li
          %strong
            = reporter
          for
          = issues.join(", ")

- if page.resources && page.resources.length > 0
  %h2
    Other Resources

  %ul
    - page.resources.each do | resource |
      %li
        %a{:href => resource.url}
          = resource.title
