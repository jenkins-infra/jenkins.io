---
layout: solution
title: "Jenkins and Python"
---
:markdown
  Unlike compiled languages, Python doesn't need a "build" per se. Python
  projects can still benefit greatly from using Jenkins for continuous
  integration and delivery.

  In the Python ecosystem there are tools which can be integrated into Jenkins
  for testing/reporting such as:
  
  * [nose2](https://github.com/nose-devs/nose2) for executing unit tests and
    generating JUnit-compatible XML test reports _and_
    [Cobertura](https://wiki.jenkins-ci.org/display/JENKINS/Cobertura+Plugin)-compatible
    code coverage reports.

%center
  %img{:src => '/images/solution-images/jenkins-chart-nosetests.png'}/

:markdown
  * [pylint](http://www.pylint.org/) for generating code quality reports which
    can be integrated directly into Jenkins for trending and reporting purposes.

%center
  %img{:src => '/images/solution-images/jenkins-chart-pylint.png'}/

:markdown
  (_images courtesy of [Alex Conrad](http://www.alexconrad.org/2011/10/jenkins-and-python.html)_)

  ## Resources

  Below are a collection of miscellaneous resources for working with Python on
  top of Jenkins. If you believe something is missing, please click the link at
  the lower right ("Improve this page") and submit a pull request!

  ### Templates

    * [Jenkins job template for a Python-based project using Nose](https://github.com/bobuss/python-jenkins-template)

  ### Using the Jenkins API
    * [Jenkins API - Python client library for Jenkin's API](http://pythonhosted.org/jenkinsapi/)
    * [Python-Jenkins : Python Wrapper for Jenkins REST API](https://python-jenkins.readthedocs.org/en/latest/)
