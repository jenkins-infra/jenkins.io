!!! XML

<?xml version='1.0' encoding='utf-8' ?>

%feed{ 'xml:lang'=>'en-US', :xmlns=>'http://www.w3.org/2005/Atom' }
  %id= "#{page.content_url}/"
  %title= escape_once( page.title )
  - if ( not site.author.nil? )
    %author
      - if ( defined?( site.author.name ) )
        %name= site.author.name
        - if ( site.author.email )
          %email= site.author.email
      - else
        %name= site.author
  - unless page.entries.empty?
    %updated= page.entries.first.input_mtime.xmlschema
    <link rel="self" type="application/atom+xml" href="#{absolute_link(page.url)}" />
    <link rel="alternate" type="text/html" href="#{page.content_url}/" />
    - for entry in page.entries
      - # See https://issues.jenkins.io/browse/WEBSITE-135
      - # To preserve some permalinks, we may have what are considered "pages"
      - # in the blog/ namespace. In order to prevent those redirect templates from
      - # being included in the RSS feed, we'll skip anythinig that isn't
      - # implicitly a blog "post"
      - next unless entry.layout == 'post'
      %entry
        %id #{absolute_link(entry.url)}
        %title= escape_once( entry.title )
        %updated= entry.input_mtime.xmlschema
        %published= entry.date.xmlschema
        <link rel="alternate" type="text/html" href="#{absolute_link(entry.url)}" />
        - if ( not entry.author.nil? )
          %author
            - if ( defined?( entry.author.name ) )
              %name= entry.author.name
              - if ( entry.author.email )
                %email= entry.author.email
            - else
              %name= entry.author
        - if ( not entry.tags.nil? )
          - for tag in entry.tags
            %category{:term=>"#{tag}"}
        %summary
          #{summarize( html_to_text( entry.content ).strip, 100 )}
        %content{:type=>'html'}
          = clean_html( html_escape( fully_qualify_urls( site.base_url, find_and_preserve( entry.content ) ) ) )
