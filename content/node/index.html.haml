---
layout: default
title: 'Jenkins Community Blog'
section: blog
---

:ruby
  page_index = page.posts.current_page_index
  page_count = page.posts.pages.size
  linked_pages = Array.new
  linked_pages << 0
  linked_pages << 1
  linked_pages << 2
  linked_pages << page_index
  linked_pages << page_index - 1
  linked_pages << page_index - 2
  linked_pages << page_index + 1
  linked_pages << page_index + 2
  linked_pages << page_count - 1
  linked_pages << page_count - 2
  linked_pages << page_count - 3

%div.container.blog-post
  .row.body
    %div#content.col-md-8{:class => 'main-content with-sidebar'}
      %div#content-top
        %h2
          = page.title

      .blogintro
        The Jenkins project has a lot going on between core/plugin development,
        events and other open source automation related activities. To keep up with
        it subscribe to our

        %a{:href => 'https://feeds.feedburner.com/ContinuousBlog/'}
          RSS feed

        or

        %a{:href => 'https://twitter.com/jenkinsci'}
          follow us on Twitter

      = partial('blogcardlist.html.haml', :posts => page.posts)

      %div
        %nav
          %ul.pagination
            %li.page-item{:class => (page.posts.previous_page or 'disabled')}
              %a.page-link{:href => (page.posts.previous_page and expand_link(page.posts.previous_page.url))}
                &laquo;
            - previous_visible = false
            - page.posts.pages.each_index do |index|
              - # The url changed depending on if we are on the first page or later pages.
              - # These must be relative links to handle pagination of tags.
              - # First page on blog or tags:
              - # https://jenkins.io/node/
              - # https://jenkins.io/node/tags/pipeline/
              - # Other pages on blog or tags:
              - # https://jenkins.io/node/page/4.html
              - # https://jenkins.io/node/tags/pipeline/page/4.html
              - if page_index == 0
                - if index == 0
                  - # link to first page from first page
                  - link_url = '.'
                - else
                  - # link to other page from first page
                  - link_url = "./page/#{index + 1}.html"
              - else
                - if index == 0
                  - # link to first page from other page
                  - link_url = '..'
                - else
                  - # link to other page from other page
                  - link_url = "../page/#{index + 1}.html"

              - # whatever the link url, the text is the same
              - if index == 0
                %li.page-item{:class => ((page_index == index) and 'active')}
                  %a.page-link{:href => link_url}
                    1
              - elsif linked_pages.include?(index) or (linked_pages.include?(index - 1) and linked_pages.include?(index + 1))
                - # page is defined to be linked, or is surrounded by linked pages -- i.e. no gaps of just 1 page
                - previous_visible = true
                %li.page-item{:class => ((page_index == index) and 'active')}
                  %a.page-link{:href => link_url}
                    = index + 1
              - else
                - if previous_visible
                  %li.page-item.disabled
                    %a.page-link{:href => '#'}
                      \...
                  - previous_visible = false
            %li.page-item{:class => (page.posts.next_page or 'disabled')}
              %a.page-link{:href => (page.posts.next_page and expand_link(page.posts.next_page.url))}
                &raquo;


    .col-md-4.events.vertical
      .content
        = partial('events.html.haml')
