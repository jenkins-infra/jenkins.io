---
layout: simplepage
title: "Jenkins Handbook"
---


%div

- require 'asciidoctor'
- # Let's find all our document sections and parse them up!
- book_dir = File.expand_path(File.dirname(__FILE__) + '/book')
- # Create a map of all our page objects by their source path so we can easily
- # find all of the book pages in our directory
- pages_map = site.pages.group_by { |p| p.source_path }
- puts adoc_toc_for(book_dir, site.pages)
%ul
  - Dir[File.join(book_dir, '*.adoc')].each do |book_section|
    - # Since we use #group_by above, our Hash has values which are all
    - # single-element arrays
    - page = pages_map[book_section].first
    - section_doc =  Asciidoctor.load(page.raw_content)
    %li
      - section_doc.sections.each do |subsection|
        - next unless subsection.level == 1
        %strong
          %a{:href => page.url}
            = subsection.title
        (
        %code
          = book_section
        )
        %ul
          - subsection.sections.each do |subsub|
            - next unless subsection.level == 1
            %li
              - sep = section_doc.attributes['idseparator'] || '-'
              - base_id = %(#{section_doc.attributes['idprefix'] || ''}#{subsub.title.downcase.gsub(Asciidoctor::InvalidSectionIdCharsRx, sep).tr_s(sep, sep).chomp(sep)})
              %a{:href => "#{page.url}##{base_id}"}
                = subsub.title

