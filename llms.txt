# www.jenkins.io llms-full.txt

[Back to blog](/blog/)

# Hudson 1.347 Released [Anchor](\#hudson-1-347-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 22, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.347+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F22%2Fhudson-1-347-released%2F)

The release of Hudson 1.347 last friday, February 19th, was a relatively "minor" one insofar that it contained an assortment of smaller fixes instead of fixes to major regressions (they weren’t any to be fixed) or major features added. There were however some notable commits in this release cycle that didn’t make the changelog just yet, for example [godin](https://twitter.com/<em>godin</em>) committed an [ebuild](https://en.wikipedia.org/wiki/Ebuild) which will allow for a native package of Hudson for [Gentoo Linux](https://en.wikipedia.org/wiki/Gentoo%20Linux), joining the ranks of the existing packages for Debian/Ubuntu, FreeBSD, OpenSolaris, openSUSE and RedHat/Fedora Linux. The bundled Subversion plugin was updated and thanks to [sogabe](https://twitter.com/ssogabe) and [wyukawa](https://twitter.com/wyukawa) the Japanese translations for Hudson got some updates as well.

For Hudson developers, both plugin and core, this release contains some notable changes from [mindless](https://blogs.sun.com/mindless) (a.k.a Alan Harder), a number of calls which have been deprecated for over **two years** have finally been pruned from the code base:

- `Hudson.addListener(JobListener)`, `Hudson.removeListener(JobListener)`

- Entire `listeners.JobListener` class (replaced by `ItemListener`)

- One form of `DirectoryBrowser` constructor

- One form of `Descriptor.configure()` (with `HttpServletRequest` param)

- `Descriptor.convert(Map)` and 4 implementations of this method, and code calling it in `Descriptor.readResolve()` (this code called `save()` whenever updating data, so there should be no remaining cases out there)


Alan’s quest for removing deprecated code will likely continue for a while, but this is a good step in the right direction, keeping Hudson’s internals in good working order. Worth mentioning, the influx of plugin releases in the [This Week in Plugins](/content/week-plugins-0) from a couple weeks ago, was driven largely by Alan, rummaging through the code of older plugins, updating plugins left and right.
Now the breakdown for this release:

### Bugs fixed [Anchor](\#bugs-fixed)

- Fix javascript problem showing test failure detail for test name with a quote character. ( [issue 1544](https://issues.jenkins.io/browse/JENKINS-1544))

- Hudson can incorrectly configure labels for the controller when bleeding edge EC2 plugin is used.

- Fixed the regression wrt the whitespace trimming caused by 1.346. ( [issue 5633](https://issues.jenkins.io/browse/JENKINS-5633))

- Under some circumstances, Hudson can incorrectly delete the temporary directory itself. ( [issue 5642](https://issues.jenkins.io/browse/JENKINS-5642))

- Newlines in MAVEN\_OPTS environment variable can cause problems in other contexts. ( [issue 5651](https://issues.jenkins.io/browse/JENKINS-5651))


### Enhancements [Anchor](\#enhancements)

- Improved the form validation mechanism to support multiple controls. ( [issue 5610](https://issues.jenkins.io/browse/JENKINS-5610))

- Added message to agent log when it has successfully come online. ( [issue 5630](https://issues.jenkins.io/browse/JENKINS-5630))


### Contributors [Anchor](\#contributors)

This release of Hudson contained 36 commits from **7** different contributors to "core":

- [abayer](https://twitter.com/abayer)

- [godin](https://twitter.com/<em>godin</em>)

- [huybrechts](https://www.linkedin.com/in/thuybrechts)

- [kohsuke](https://twitter.com/kohsukekawa)

- [mindless](https://blogs.sun.com/mindless)

- [sogabe](https://twitter.com/ssogabe)

- [wyukawa](https://twitter.com/wyukawa)


As usual, you can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Breaking! Hudson 1.345 Released! [Anchor](\#breaking-hudson-1-345-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=Breaking%21+Hudson+1.345+Released%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F08%2Fbreaking-hudson-1-345-released%2F)

As I mentioned in the footer of the post on the [Hudson 1.344 release](/blog/2010/02/08/hudson-1-344-released/), there were a couple big regressions in the 1.344 release that were causing a number of users issues (such as [issue 5536](https://issues.jenkins.io/browse/JENKINS-5536) and [issue 5546](https://issues.jenkins.io/browse/JENKINS-5546)).

As a result, Kohsuke and the team have quickly pushed out a hot-fix release: 1.345. Here’s the break down:

#### Bugs fixed: [Anchor](\#bugs-fixed)

- Update center retrieval, "build now" link, and real-time console update was broken in 1.344 ( [issue 5536](https://issues.jenkins.io/browse/JENKINS-5536))

- Fixed the backward incompatibility introduced in HUDSON-5391 fix in 1.344. ( [issue 5391](https://issues.jenkins.io/browse/JENKINS-5391))


If you have already updated to 1.344, your "Update Center" is most likely busted and you’ll need to download the `hudson.war` file manually.

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Sonatype freeing projects from java.net's Maven repo [Anchor](\#sonatype-freeing-projects-from-java-nets-maven-repo)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 25, 2010
[Tweet](https://twitter.com/intent/tweet?text=Sonatype+freeing+projects+from+java.net%27s+Maven+repo&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F25%2Fsonatype-freeing-projects-from-java-nets-maven-repo%2F)

Are you working on a project which uses java.net’s [Maven](https://en.wikipedia.org/wiki/Apache%20Maven) repository for deploying its artifacts?

Well, if so, there’s a great opportunity opening up for you to get off that problematic repository: [Sonatype](https://www.sonatype.com/) is [helping java.net projects move to Sonatype’s hosted OSS Nexus repository](https://www.sonatype.com/people/2010/02/java-net-maven-repository-rescue-mission-on-march-5th/), starting March 5th. We’re looking into moving Hudson over but for most smaller projects, this should be a no-brainer. Problems with the java.net Maven repository are legendary and Sonatype’s OSS Nexus repository is a great alternative.

Take a look and see if this can work for you.

* * *

**Editor’s Note:** Andrew Bayer ( `abayer`) has been a contributor to Hudson since early 2009, contributing to the ClearCase plugin, Hudson’s core and a small number of other plugins. Andrew also helps Kohsuke with a lot of Hudson’s project infrastructure, most notably the migration from Bugzilla on Java.net to JIRA running at [issues.hudson-ci.org](https://issues.hudson-ci.org).

- [core](/blog/tags/core/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Screencast: Python on Hudson (Part 1) [Anchor](\#screencast-python-on-hudson-part-1)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 31, 2010
[Tweet](https://twitter.com/intent/tweet?text=Screencast%3A+Python+on+Hudson+%28Part+1%29&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F31%2Fscreencast-python-on-hudson-part-1%2F)

After Hudson got some major publicity [at PyCon Atlanta 2010](/content/hudson-pycon) I haven’t been as quick as I would have liked with Python-related posts and tutorials. I use Hudson to build and test a number of pure Python modules and C extensions across numerous Python versions (covering 2.4 - 3.1). For most beginners, or those simply looking to get started with Python on Hudson, starting with my job configurations is too much at once, so instead I wanted to start at the "beginning" so to speak.

The trouble with getting people started with Hudson, given how simple and visual it is to use, is that articles with sample configurations are not particularly useful; a screencast however is a good medium for visually walking somebody through Hudson. The screencast below ( [also on YouTube](https://www.youtube.com/watch?v=5d-P4j5n_No)) is the _first_ in a series of screencasts I’ll be doing, not only for Python on Hudson, but for Hudson overall. It is just over four minutes long, and covers setting up a simple continuous integration job for the [Eventlet](https://eventlet.net) library (which is hosted [on Bitbucket](https://bitbucket.org/which_linden/eventlet/))

</param></param></param></embed>

* * *

- [general](/blog/tags/general/)
- [jobs](/blog/tags/jobs/)
- [news](/blog/tags/news/)
- [screencast](/blog/tags/screencast/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# HudsonMobi 2.0 hits the Android Market [Anchor](\#hudsonmobi-2-0-hits-the-android-market)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
August 16, 2010
[Tweet](https://twitter.com/intent/tweet?text=HudsonMobi+2.0+hits+the+Android+Market&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F16%2Fhudsonmobi-2-0-hits-the-android-market%2F)

The folks over at [LMT Software](https://web.archive.org/web/20140106081207/http://lmitsoftware.com/) just released their HudsonMobi **2.0** to the Android market. This release of HudsonMobi brings a lot of the features to Android that iPhone/iPad users of HudsonMobi have enjoyed for some time.

![hudsonmobi v2 0 android1](/sites/default/files/hudsonmobi-v2-0-android1.png)

Features unleashed to Android users in this revision of the app are:

- Full Android user-experience with Menu and back controls

- **Embedded artifact viewer!** For archived build artifacts that are text-based, you can view them directly on your handset.

- Access to the build history and changes for a job.

- Quick and easy access to a job’s last build\

- Restyled and updated user-experience, making HudsonMobi "feel better" on an Android device


![hudsonmobi qr 0](/sites/default/files/hudsonmobi-qr_0.png)

If you want to get HudsonMobi for **free** from the Android Market, whip our your phone and take a picture of its QR code:

- [general](/blog/tags/general/)
- [news](/blog/tags/news/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Spotlight on: SpringSource [Anchor](\#spotlight-on-springsource)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 25, 2010
[Tweet](https://twitter.com/intent/tweet?text=Spotlight+on%3A+SpringSource&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F25%2Fspotlight-on-springsource%2F)

For this week’s user spotlight segment, I’m talking with [Doug MacEachern](https://twitter.com/dougmaceachern) of [Hyperic](https://www.crunchbase.com/company/hyperic), part of [SpringSource](https://www.crunchbase.com/company/springsource), a division of VMware, hoping I got that dependency chain correct. Hyperic builds enterprise systems monitoring and management software and also contributes to a number of open source projects, many of which are built with Hudson.

To date I must say that Doug’s use of Hudson is one of the largest and more impressive installations I’ve seen. I don’t want to spoil the interview, but they’re testing on platforms that don’t even run _Java_. Madness! If you think you can out-do him, you can find my email information at the bottom of the interview, I’d love to hear about it!

Without further ado, Doug from SpringSource.

**Doug** We started using Hudson in early 2008 to automate the build and testing of our [SIGAR library](https://sigar.hyperic.com/). The SIGAR API implements a portable interface in C for gathering system information related to memory, processors, file systems, network interfaces, network connection tables, the process table and more. We support dozens of OS + version + architecture combinations, along with several language bindings. SIGAR is a key component of the Hyperic HQ agent and is used in other projects including [Hypertable](https://en.wikipedia.org/wiki/Hypertable), [Terracotta](https://www.crunchbase.com/company/terracota), [GridGain](https://www.gridgain.com/) and MySQL enterprise.

**Hudson** Was SpringSource using continuous integration before Hudson? If so, what caused you guys to switch?

**Doug** The SIGAR project actually started back in late 2002 and our initial CI system for the project was a good old-fashioned Perl script / ssh for-loop. It was good enough to get by in the early years, but a proper replacement was long overdue. We were (and still are) using [Bamboo](https://www.atlassian.com/software/bamboo/) to build and test Hyperic HQ. We looked at using Bamboo for SIGAR, but at the time the "Remote Agent" feature was new to Bamboo and was not in the version we were running. Rather than disrupt HQ’s CI along with taking on an additional licensing cost, we gave Hudson a shot and haven’t looked back.

**Hudson** Might be a bit of personal bias, but I think you guys made the right choice there! Checking out the [public Hudson server](https://hudson.hyperic.com), I see that SpringSource is building/testing products on AIX, the BSDs, various flavors of Linux, Solaris, Windows and Mac OS X, what kinds of languages/build systems are being built by Hudson? How varied are the environments that Hudson executes jobs in?

**Doug** And HP-UX! The matrix of SIGAR’s supported OS + kernel version + architecture + distribution is north of 100 combinations. So, Hudson is covering a very heterogeneous collection of systems with most jobs tied to a specific node. Our primary focus has been the C API and Java JNI bindings, using an Ant based build system and a JUnit test suite. SIGAR also has language bindings for Perl, Ruby, Python, Erlang, PHP, C# and Lua. So, Hudson is also driving each language’s extension build system of choice, respectively: MakeMaker, Rake, distutils, emake, phpize, Nant and autotools.

**Hudson** What do you consider to be noteworthy about your Hudson implementation? Besides, clearly, that you’re running Hudson agents on just about every OS that will run Java :)

**Doug**

The majority of our x86/x64 nodes are virtualized on VMware ESX and VMware Server. We also have a fine collection of PPC, PA-RISC and Sparc hardware in house, with IA-64 and s390x hosted elsewhere by third parties. Some of these systems are too old to support Java 1.5 and/or Git. As a simple work-around, the nodes share an NFS workspace where the agent node takes care of 'SCM' and 'Post-build Actions', but the 'Build' step in between is invoked via ssh.

The SIGAR distribution includes about two dozen native binaries that are compatible with most of the supported platform matrix. There’s a Hudson job for each Git branch that rolls these binaries into a release bundle. Another job flavor uses the Hudson URL SCM plugin to download and unit test the binary releases on the rest of the platform matrix. This is key to testing binary compatibility. Similar for the [collectd](https://collectd.org) project, each Git branch has a job that runs automake, autoconf, etc. and 'make dist' into the collectd release flavor tarball. So a push to git.verplant.org by octo in Germany triggers an update of the collectd release artifact, which in turn triggers the URL SCM jobs to download the tarball, unpack and build over here at our west coast locations.

We have four Hudson servers in different locations, three of which are managing most of the jobs behind firewalls. Select jobs use the Build Publisher plugin to post the job and its artifacts to our [public Hudson server](https://hudson.hyperic.com). This makes it easy for us to provide platform specific bug fixes in binary form, share build logs with external projects and host a central repository of artifacts reachable by all of the URL SCM based jobs. Our public Hudson server also provides CI for the HQApi project and jobs to build HQ plugins, again making it easier to distribute patch fixes in binary form between releases.
</td></tr>

**Hudson** I’ve very impressed! I’m glad the fact that Java won’t run on some of the platforms you want to support hasn’t stopped you from testing anyways. Clearly you folks have written some addition tools behind the scenes, mind discussing them a bit?

**Doug** Other than some Hudson plugin tweaks and additions, the Perl script I mentioned earlier was converted to generate the majority of our Hudson jobs and includes a simple templating system. The same script generates jobs to build collectd and a few other projects. We’ve outgrown this flavor of the script and have started working on integrating [Opscode Chef](https://www.opscode.com/chef) to automate our Hudson configuration along with the systems we build and test on. And of course, we’re using Hyperic HQ to monitor our Hudson server instances, agent and node machines.

**Hudson** But of course, I’d say [dog-fooding](https://en.wikipedia.org/wiki/Eating%20one%27s%20own%20dog%20food) is an important part of any continuous testing set up. It appears that SpringSource has bought in pretty deeply to a Hudson-oriented workflow, given the amount of time and resources you all have invested in getting the massive farm set up that you have. That said, on a scale from 1-10, how important would you rate Hudson to your day-to-day workflow?

**Doug** I’d say at least an 8, although my daily workflow doesn’t always directly involve Hudson. Most of those points go to Hudson for automating what otherwise would be interrupting my workflow on a daily basis.

</table>

```
I'd like to thank Doug again for giving us a peek behind the curtains at SpringSource and how they're using Hudson. If you would like to discuss your organization or company's use of Hudson for Continuous Blog, you can contact me at `tyler` at `linux.com`
```

**Editor’s note:** Doug was the primary author of [mod\_perl](https://en.wikipedia.org/wiki/Mod%20perl) for many years until he was tricked into "helping out" with a new project. This project turned into Hyperic HQ which shifted his focus to systems and application management for the past ~7 years and counting. He occasionally rambles on Twitter as [@dougmaceachern](https://twitter.com/dougmaceachern).

- [general](/blog/tags/general/)
- [feedback](/blog/tags/feedback/)
- [interview](/blog/tags/interview/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 7, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F07%2Fthis-week-in-plugins%2F)

A little late, but this past week we released **19** plugins including one new release, the [Libvirt Slaves](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin).

- **Feb 28th**



- [Accurev plugin](https://wiki.jenkins.io/display/JENKINS/Accurev+Plugin) 0.6.10


- **Mar 1st**



- [Subversion Release Manager plugin](https://wiki.jenkins.io/display/JENKINS/Subversion+Release+Manager) 1.1

- [Clover plugin](https://wiki.jenkins.io/display/JENKINS/Clover+Plugin) 2.6.3

- [SCTMExecutor](https://wiki.jenkins.io/display/JENKINS/SCTMExecutor) 1.5

- [global-build-stats plugin](https://wiki.jenkins.io/display/JENKINS/Global+Build+Stats+Plugin) 0.1-alpha3


- **Mar 2nd**



- [ClearCase UCM Baseline Plug-in](https://wiki.jenkins.io/display/JENKINS/ClearCase+UCM+Baseline+Plugin) 1.4

- [Accurev plugin](https://wiki.jenkins.io/display/JENKINS/Accurev+Plugin) 0.6.11

- [JIRA plugin](https://wiki.jenkins.io/display/JENKINS/JIRA+Plugin) 1.20


- **Mar 3rd**



- [NAnt Plugin](https://wiki.jenkins.io/display/JENKINS/NAnt+Plugin) 1.4.1

- [Edgewall Trac plugin](https://wiki.jenkins.io/display/JENKINS/Trac+Plugin) 1.10

- [NCover plugin](https://wiki.jenkins.io/display/JENKINS/NCover+Plugin) 0.3

- [nabaztag](https://wiki.jenkins.io/display/JENKINS/Nabaztag+Plugin) 1.7

- [Mozmill Plugin](https://wiki.jenkins.io/display/JENKINS/Mozmill+Plugin) 1.3

- [Mantis plugin](https://wiki.jenkins.io/display/JENKINS/Mantis+Plugin) 0.9

- [Harvest SCM](https://wiki.jenkins.io/display/JENKINS/Harvest+Plugin) 0.3

- [Subversion Plug-in](https://wiki.jenkins.io/display/JENKINS/Subversion+Plugin) 1.12


- **Mar 4th**



- [Performance Publisher plugin](https://wiki.jenkins.io/display/JENKINS/PerfPublisher+Plugin) 7.96

- [Artifactory Plugin](https://wiki.jenkins.io/display/JENKINS/Artifactory+Plugin) 1.0.7


- **Mar 5th**



- [Perforce Plugin](https://wiki.jenkins.io/display/JENKINS/Perforce+Plugin) 1.0.23


- **Mar 6th**



- [SCTMExecutor](https://wiki.jenkins.io/display/JENKINS/SCTMExecutor) 1.5.1


- **Mar 7th**



- [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) 1.0

- [Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) 1.13


- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-03-04 [Anchor](\#links-for-2010-03-04)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 5, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-03-04&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F05%2Flinks-for-2010-03-04%2F)

Since I’ve been a bit pre-occupied with non-Hudson related activities lately, I have missed a few days of link rollups, I suppose it’s fitting to get a couple days worth of links in one post.

While The Build Doctor has the time to follow the continuous integration world and post links on a daily basis, I haven’t found the same quantity of Hudson links on a day-to-day basis. Therefore, I will be posting a link-rollup every few days. Do let me know if this is too infrequent. That said, here’s some interesting links!

- [That feels better — Cocoa, Hudson and running green](https://manicwave.com/blog/2010/03/01/that-feels-better-cocoa-hudson-and-running-green/)



- Indie iPhone app developer [Jeff Schilling](https://twitter.com/JeffSchilling) writes about working more efficient with Hudson and Cocoa for developing iPhone apps, he covers [OCUnit](https://developer.apple.com/tools/unittest.html) integration and code coverage with [gcovr](https://software.sandia.gov/trac/fast/wiki/Documentation/gcovr), a good read for iPhone and Mac developers alike.


- [Add CI Build Stability to your Sonar Dashboard](https://sonar.codehaus.org/add-ci-build-stability-to-your-sonar-dashboard/)



- Hudson contributor [godin](https://twitter.com/<em>godin</em>) (also known as Evgeny Mandrikov) has released a Sonar plugin to report build stability back into [Sonar](https://sonar.codehaus.org/).


- [How to get logged-in username in Hudson?](https://kannan.jumbledthoughts.com/index.php/how-to-get-logged-in-username-in-hudson/)

- [Switching from CruiseControl to Hudson](https://www.amaxus.com/cms-blog/from-cruisecontrol-to-hudson-ci)



- The developers over at [Amaxus](https://www.amaxus.com/) wax poetic on reducing their " [bus factor](https://en.wikipedia.org/wiki/Bus%20factor)" by switching from CruiseControl to Hudson


- [Integrating Selenium tests with Hudson CI](https://blog.infostretch.com/?p=328)



- The folks at [InfoStretch](https://infostretch.com) have written up a nice, short-and-sweet, overview of getting higher level integration tests built with [Selenium](https://seleniumhq.org/) to play with Hudson


- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-03-19 [Anchor](\#links-for-2010-03-19)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 19, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-03-19&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F19%2Flinks-for-2010-03-19%2F)

It’s been quite a busy week, preparing for the [Bay Area Hudson hackathon/meetup](/content/meet-and-hack-alongside-kohsuke-and-co) which starts today, receiving requests for [crazy-awesome Hudson stickers](/content/want-some-hudson-stickers) and my [day job](https://apture.com). Regardless, I’ve stumbled across a few links to share in this links roll-up.

- [John Ferguson Smart](https://twitter.com/wakaleo) discusses some of the gotchas with **[migrating Hudson build jobs from one server to another](http://www.wakaleo.com/blog/261-migrating-hudson-build-jobs-from-one-server-to-another)**

- Learned a bit about how [Kim Moir](https://twitter.com/Kim_Moir) and the Eclipse Foundation are **["building better" with Hudson](https://relengofthenerds.blogspot.com/2010/03/better-builds-with-hudson-hardware-and.html)**

- [dbaktiar](https://twitter.com/dbaktiar) gave a quick overview of **[installing Hudson on Ubuntu Karma Koala](https://dbaktiar.wordpress.com/2010/03/17/installation-of-hudson-in-karmic-koala-ubuntu-9-10/)**


Looking forward even more interesting things to read next week after the hackathon and meetup here in California.

* * *

- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.346 Released [Anchor](\#hudson-1-346-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 15, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.346+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F15%2Fhudson-1-346-released%2F)

After some scrambling earlier in the week to get [1.345 out the door](/blog/2010/02/08/breaking-hudson-1-345-released/), correcting some regressions in 1.344, the Hudson team still rolled out a 1.346 release last Friday, February 12th, 2010. Similar to the past couple releases, 1.346 had a good number of bug fixes, including a a performance fix when dealing with larger build submissions and a substantial revision of the SCM polling code to fix a long-standing issue with the quiet period blocking the build from running ( [issue 2180](https://issues.jenkins.io/browse/JENKINS-2180)), there were also some additionally memory improvements made to [Jelly](https://en.wikipedia.org/wiki/Apache%20Jelly), the library with which the majority of Hudson’s web interface is rendered, that Kohsuke will detail in a later post.

Here’s the breakdown:

### Bugs fixed [Anchor](\#bugs-fixed)

- Maven modules should not be buildable when the parent project is disabled. ( [issue 1375](https://issues.jenkins.io/browse/JENKINS-1375))

- Fixed the broken quiet period implementation when polling interval is shorter than the quiet period. (Changes in SCM impls are needed for this to take effect.) ( [issue 2180](https://issues.jenkins.io/browse/JENKINS-2180))

- Escape username in URLs in case it contains special characters such as "#". ( [issue 2610](https://issues.jenkins.io/browse/JENKINS-2610))

- Fix sidepanel link for People to be visible and show view-specific info when appropriate. ( [issue 5443](https://issues.jenkins.io/browse/JENKINS-5443))

- Improved HTML rendering, not using closing tags that do not exist in HTML. ( [issue 5458](https://issues.jenkins.io/browse/JENKINS-5458))

- Show better error message for missing view type selection when creating a view. ( [issue 5469](https://issues.jenkins.io/browse/JENKINS-5469))

- Hudson wasn’t properly streaming a large external build submission, which can result in OOME and unresponsiveness. </ul>

# Enhancements



- Use fixed-width font in text area for shell/batch build steps. ( [issue 5471](https://issues.jenkins.io/browse/JENKINS-5471))

- Use user selected icon size on People page. ( [issue 5447](https://issues.jenkins.io/browse/JENKINS-5447))

- Speed/footprint improvement in the HTML rendering.



# Contributors This release of Hudson contained 37 commits from 3 different contributors to "core": \* [kohsuke](https://twitter.com/kohsukekawa) \\* [mindless](https://blogs.sun.com/mindless) \\* [sogabe](https://twitter.com/ssogabe)


As usual, you can go grab the \[latest .war file\]( [http://mirrors.jenkins.io/war-stable/latest/jenkins.war](http://mirrors.jenkins.io/war-stable/latest/jenkins.war)) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade. ---- **Updated:** Added the "official" changelog notes


- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Monitor Hudson from your Android [Anchor](\#monitor-hudson-from-your-android)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 13, 2010
[Tweet](https://twitter.com/intent/tweet?text=Monitor+Hudson+from+your+Android&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F13%2Fmonitor-hudson-from-your-android%2F)

![mood widget good](/sites/default/files/mood_widget-good.png) So you’ve got your fancy Android cell phone and you’re thinking to yourself "besides feeling smugly superior to iPhone users, what can I do with this thing?" Perhaps you should be considering using it as a _phone_ but if that’s too boring, check out the new and improved **_[Hudson Mood widget for Android](https://wiki.jenkins.io/display/JENKINS/Hudson+Mood+widget+for+Android)_**! The latest release brings support for multiple servers and fancier graphics.

If you’re interested in installing the widget, search for "Hudson Mood" in the Android Market, and be sure to thank [Siarhei Dudzin](https://sdudzin.blogspot.com/) for creating the widget!

![mood widget settings](/sites/default/files/mood_widget-settings.png)

- [general](/blog/tags/general/)
- [just for fun](/blog/tags/just for fun/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Would you run Hudson in the cloud? [Anchor](\#would-you-run-hudson-in-the-cloud)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 23, 2010
[Tweet](https://twitter.com/intent/tweet?text=Would+you+run+Hudson+in+the+cloud%3F&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F23%2Fwould-you-run-hudson-in-the-cloud%2F)

One of my favorite bloggers on the subject of continuous integration, [The Build Doctor](https://twitter.com/builddoctor), posed this question in [a recent post](https://www.build-doctor.com/2010/02/23/continuous-integration-in-the-cloud-good-idea/):

> Continuous Integration in the cloud: good idea?

The topic of running a CI server in a virtualized environment, such as with [Amazon’s EC2 service](https://en.wikipedia.org/wiki/Amazon%20Elastic%20Compute%20Cloud), is an interesting issue, particularly in the Hudson community. About 10 months ago Kohsuke [announced the Hudson EC2 plugin](https://weblogs.java.net/blog/2009/05/18/hudson-ec2-plugin) which has seen slow, but steady development since then, including support for the [Ubuntu Enterprise Cloud](https://www.ubuntu.com/cloud/private) which was added to the plugin in a release last Monday.

As The Build Doctor and his readers point out, continuous integration is a difficult task to offload into the cloud because of the immense hardware demands constant building and testing presents. That said, Hudson _does_ very effectively manage spinning agents up and down on demand if you’ve configured it as such. Implication being: running Hudson in the cloud may be more efficient to meet peak demands without needing to run a large farm of machines.![hudson in the cloud](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/hudson_in_the_cloud.png)

If you’re interested in trying out the [EC2 plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Plugin), check out [Sonatype’s](https://www.sonatype.com/) post on [Nexus Open Source and Hudson on EC2](https://www.sonatype.com/people/2009/06/nexus-open-source-and-hudson-on-ec2/) might be a good start.

Would you run Hudson in the cloud?

- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 27, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F27%2Fthis-week-in-plugins%2F)

I apologize for the lack of posts this week, I’ve been quite pre-occupied and a quirk in the [twipFromSvn.py](https://github.com/rtyler/continuous-blog-tools/blob/master/twipFromSvn.py) script prevented the generation of this post’s contents earlier; thanks to [rpetti](https://twitter.com/rpetti) it works again!

This week was an interesting week in plugin development, a slight regression in the release of [Jabber notifier plugin](https://wiki.jenkins.io/display/JENKINS/Jabber+Plugin) 1.7 resulted in the rapid release of a 1.8 release by `kutzi`. The [Fitnesse plugin](https://wiki.jenkins.io/display/JENKINS/Fitnesse+Plugin) saw multiple releases again this week, along with the [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) which has seen an amazing number of releases since it burst onto the plugin scene [two weeks ago](/content/week-plugins-4).

There were a few new and notable plugins released this week such as the [iPhoneView plugin](https://wiki.jenkins.io/display/JENKINS/iPhoneView+Plugin) which adds a fancy view to make checking Hudson all that prettier on an iPhone or iPod Touch, the [cross-platform shell plugin](https://wiki.jenkins.io/display/JENKINS/XShell+Plugin) was released, aiming to solve the problem of running a job on both Windows and Unix agents. My favorite new plugin release this week has to be the [Gerrit plugin](https://wiki.jenkins.io/display/JENKINS/Gerrit+Plugin) which made its debut and shows a lot of potential to enable the "pre-tested commit" workflow with Git and [Gerrit](https://code.google.com/p/gerrit/)

- Mar 20, 2010



- [Fitnesse plugin](https://wiki.jenkins.io/display/JENKINS/Fitnesse+Plugin) 1.2

- [Labeled Test Groups Publisher](https://wiki.jenkins.io/display/JENKINS/LabeledTestGroupsPublisher+Plugin) 1.2.6

- [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) 1.3

- [Monitoring](https://wiki.jenkins.io/display/JENKINS/Monitoring) 1.13.0

- [Perforce Plugin](https://wiki.jenkins.io/display/JENKINS/Perforce+Plugin) 1.0.25

- [iPhoneView plugin](https://wiki.jenkins.io/display/JENKINS/iPhoneView+Plugin) 0.1

- [instant-messaging plugin](https://wiki.jenkins.io/display/JENKINS/Instant+Messaging+Plugin) 1.6


- Mar 21, 2010



- [Fitnesse plugin](https://wiki.jenkins.io/display/JENKINS/Fitnesse+Plugin) 1.3

- [Ivy plugin](https://wiki.jenkins.io/display/JENKINS/Ivy+Plugin) 1.4


- Mar 22, 2010



- [Buckminster](https://wiki.jenkins.io/display/JENKINS/Buckminster+PlugIn) 0.9.4

- [Cobertura plugin](https://wiki.jenkins.io/display/JENKINS/Cobertura+Plugin) 0.8.11

- [Fitnesse plugin](https://wiki.jenkins.io/display/JENKINS/Fitnesse+Plugin) 1.3.1

- [Gerrit plugin](https://wiki.jenkins.io/display/JENKINS/Gerrit+Plugin) 0.1

- [JIRA plugin](https://wiki.jenkins.io/display/JENKINS/JIRA+Plugin) 1.21

- Maven Release Plug-in nexus helper 0.0.3

- [Nested View Plugin](https://wiki.jenkins.io/display/JENKINS/Nested+View+Plugin) 1.1

- [Performance plugin](https://wiki.jenkins.io/display/JENKINS/Performance+Plugin) 1.2

- [Sonar Plugin](https://wiki.jenkins.io/display/JENKINS/Sonar+Plugin) 1.5

- [Subversion Plug-in](https://wiki.jenkins.io/display/JENKINS/Subversion+Plugin) 1.15

- [Translation Assistance plugin](https://wiki.jenkins.io/display/JENKINS/Translation+Assistance+Plugin) 1.4


- Mar 23, 2010



- [Subversion Plug-in](https://wiki.jenkins.io/display/JENKINS/Subversion+Plugin) 1.16

- [nabaztag](https://wiki.jenkins.io/display/JENKINS/Nabaztag+Plugin) 1.9


- Mar 24, 2010



- [Buckminster](https://wiki.jenkins.io/display/JENKINS/Buckminster+PlugIn) 0.9.5

- [Jabber notifier plugin](https://wiki.jenkins.io/display/JENKINS/Jabber+Plugin) 1.8


- Mar 25, 2010



- [https://www.collab.net/\[CollabNet\] Plugins](https://wiki.jenkins.io/display/JENKINS/CollabNet+Plugin) 1.1.4

- [CVS Plug-in](https://wiki.jenkins.io/display/JENKINS/CVS+Plugin) 1.1

- [Dashboard View](https://wiki.jenkins.io/display/JENKINS/Dashboard+View) 1.4

- [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) 1.4

- [Perforce Plugin](https://wiki.jenkins.io/display/JENKINS/Perforce+Plugin) 1.0.26


- Mar 26, 2010



- [CMake plugin](https://wiki.jenkins.io/display/JENKINS/cmakebuilder+Plugin) 1.2

- [GNAT plugin](https://wiki.jenkins.io/display/JENKINS/Gnat+Plugin) 0.2.2

- [Groovy Postbuild](https://wiki.jenkins.io/display/JENKINS/Groovy+Postbuild+Plugin) 1.2

- [cppunit plugin](https://wiki.jenkins.io/display/JENKINS/CppUnit+Plugin) 1.3

- [cross-platform shell plugin](https://wiki.jenkins.io/display/JENKINS/XShell+Plugin) 0.2


* * *

- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.368 Released! [Anchor](\#hudson-1-368-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 27, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.368+Released%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F27%2Fhudson-1-368-released%2F)

Regular readers will recognize that I’ve been slacking off quite a bit lately with my release announcements, my apologies. With the release of 1.368 on Sunday, which fixed a few fairly important bugs, I figured I’d dusty off my blogging fedora and give this a shot.

This release has three bug fixes in it which were causing some issues for some users, particularly those deploying Hudson inside the recently released [Tomcat 7.0](https://tomcat.apache.org/tomcat-7.0-doc/changelog.html) (see [issue 6738](https://issues.jenkins.io/browse/JENKINS-6738)).

Hudson users utilizing the [JDK auto-installation](https://wiki.jenkins.io/display/JENKINS/Tool+Auto-Installation) feature between different platforms may have been affected by [issue 6880](https://issues.jenkins.io/browse/JENKINS-6880) which was also fixed in this release.

Bringing up the rear is the fix to [issue 7004](https://issues.jenkins.io/browse/JENKINS-7004) which detailed a few discrepancies between the `/buildWithParameters` and the `/build` remote APIs.

If you’re not affected by these issues, you may want to wait for the soon-to-be-released 1.369 which has **even more** juicy bug fixes in it (with a dash of enhancements) to upgrade.
\-\-\-

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.368/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [news](/blog/tags/news/)
- [releases](/blog/tags/releases/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Would you like to, OK [Anchor](\#would-you-like-to-ok)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 14, 2010
[Tweet](https://twitter.com/intent/tweet?text=Would+you+like+to%2C+OK&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F14%2Fwould-you-like-to-ok%2F)

As Matt Brown pointed out on the `dev@` list, Hudson made a cameo on [The Daily WTF](https://thedailywtf.com) in their post [Nobulation Fail](https://thedailywtf.com/Articles/Nobulation-Fail.aspx).

![hudson install dailywtf](https://web.archive.org/web/*/https://agentdero.cachefly.net/scratch/hudson_install_dailywtf.png)

Kohsuke went on to mention on the mailing list:

> Looks like this one is already fixed back in October last year.

- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson Anonymous Usage Data [Anchor](\#hudson-anonymous-usage-data)

[Andrew Bayer](/blog/authors/abayer/)
August 17, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+Anonymous+Usage+Data&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F17%2Fhudson-anonymous-usage-data%2F)

In late 2008, the Hudson team released version 1.264 which added an anonymous reporting feature (you can opt-out in the "Manage Hudson" screen). The reporting feature has been sending information back to the Hudson team to help us understand how Hudson is used in aggregate; the info being reported includes the number of jobs configured, agent configurations, what plugins (and what versions of those plugins) are installed, and more. This data has not been available publicly until now! The raw data needed to be decrypted and scrubbed of any potentially identifying information, such as non-public plugin names or usernames in snapshot versions. We’ve finally scrubbed the data and are **making it available**!

The data is currently in monthly JSON bundles, organized by unique install key. We’ve filtered out reports of installations without any jobs configured, as well as any installations with only one report in a given month.

If you’d like access to the data, please send an email to [dev@hudson.dev.java.net](mailto:dev@hudson.dev.java.net) or jump onto the [IRC channel](https://hudson-labs.org/content/chat) and ask - we’ll send you the URL and a private username/password which you’ll need to access the info. We’re also planning to do more analysis of the data ourselves, for now feast your eyes on [this spreadsheet](https://bit.ly/aC6wIo), which shows the total number of unique installations seen per month and the number of unique installations of each publicly available plugin per month.

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [just for fun](/blog/tags/just for fun/)
- [meta](/blog/tags/meta/)
- [news](/blog/tags/news/)
- [plugins](/blog/tags/plugins/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

[Andrew Bayer](/blog/authors/abayer/)

Andrew was a core committer to Hudson and the author of numerous plugins.

- [GitHub](https://github.com/abayer)
- [Twitter](https://twitter.com/abayer)[Back to blog](/blog/)

# Dogfooding Hudson - We're Looking for Agents! [Anchor](\#dogfooding-hudson-were-looking-for-agents)

[Andrew Bayer](/blog/authors/abayer/)
August 2, 2010
[Tweet](https://twitter.com/intent/tweet?text=Dogfooding+Hudson+-+We%27re+Looking+for+Agents%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F02%2Fdogfooding-hudson-were-looking-for-slaves%2F)

As you may have noticed, thanks to the link on this and the other pages here at [hudson-labs.org](https://hudson-labs.org), the Hudson development community has recently introduced [ci.hudson-labs.org](https://ci.hudson-labs.org), the official Hudson-on-Hudson instance. We’re currently building [Hudson proper](https://ci.hudson-labs.org/job/hudson_main_trunk/), the [Hudson core RC branch](https://ci.hudson-labs.org/job/hudson_rc_branch/), individual builds for [the various Hudson plugins](https://ci.hudson-labs.org/view/Plugins/) and [Gerrit](https://ci.hudson-labs.org/job/gerrit_master/), as well as various [libraries](https://ci.hudson-labs.org/view/Libraries/) and [infrastructure jobs](https://ci.hudson-labs.org/view/Infrastructure/) Hudson depends on.

We’re currently running all those builds on a dedicated Linux agent, generously provided to the Hudson project by [Digg](https://digg.com), my employer. This has been great - except for the day when I’d just added all the individual plugin jobs for the first time, we haven’t had real problems with capacity. But we are limited in the environments we can run our tests on as a result of only having a Linux agent. We’re currently playing with a temporary Windows agent, but we’d really like to have at least one more permanent Windows agent, and a Mac agent as well, so that we can run Hudson’s core integration tests on those platforms as well. Since this is Hudson we’re talking about, we don’t need the agent to be in any given physical location - we just need it to be running the agent process and talking to our server. If you’re interested in helping us out with this, please contact me at andrew dot bayer at gmail dot com. Thanks!

- [infrastructure](/blog/tags/infrastructure/)
- [core](/blog/tags/core/)
- [meta](/blog/tags/meta/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

[Andrew Bayer](/blog/authors/abayer/)

Andrew was a core committer to Hudson and the author of numerous plugins.

- [GitHub](https://github.com/abayer)
- [Twitter](https://twitter.com/abayer)![](/images/fire-jenkins.svg)

### The page you requested could not be found.

[Back to homepage](/)

### Search for related pages

Search`` `K`[Back to blog](/blog/)

# Announcing the Hudson 2.0 Roadmap [Anchor](\#announcing-the-hudson-2-0-roadmap)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 1, 2010
[Tweet](https://twitter.com/intent/tweet?text=Announcing+the+Hudson+2.0+Roadmap&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F01%2Fannouncing-the-hudson-2-0-roadmap%2F)

![java evil edition](https://web.archive.org/web/<strong>/https://agentdero.cachefly.net/continuousblog/java-evil-edition.png)There have been numerous discussions on the [mailing lists](https://wiki.jenkins.io/display/JENKINS/Mailing%20List) over the past couple months regarding memory issues, speed regressions and a number of other issues regarding performance of Hudson, particularly under high load. In an effort to address these concerns, the Hudson core team has [announced](https://web.archive.org/web/</strong>/https://agentdero.cachefly.net/continuousblog/just-kidding.jpg) a roadmap for **Hudson 2.0**.

In a [message](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/just-kidding.jpg) to the `dev@` mailing list, Kohsuke said of Hudson 2.0:

> As it stands now Hudson 1.0 is a good proof of concept, it’s time to take the lessons learned and build a truly solid enterprise-ready continuous integration server
> Some notable points from Kohsuke’s announcement with regards to the Hudson 2.0 roadmap, which is expected to ship late Q4 2011, are:

- Implementation of `core` in portable C for greater speed and code readability

- Selection of a better license, namely the [WTFPL](https://en.wikipedia.org/wiki/WTFPL)

- Revamped storage architecture around the [Oracle 11g Database](https://www.oracle.com/database/standard_edition.html) to provide more optimal synergy over flat XML files.

- Embedding the Mono, Python, V8 and Lua engines allowing plugins to be written in C#, Python, JavaScript or Lua.

- Adoption of the Hudson [Eagle](https://randomfunnypicture.com/wp2/wp-content/uploads/2009/12/haters-gonna-hate-eagle.jpg) as a mascot instead of the butler

- "Social" support will be merged into `core`, integrating Hudson directly with Facebook so you can share test failures with your friends.


Hudson 2.0 is expected to follow in the intrepid footsteps of other major revamps such as [Netscape 5](https://en.wikipedia.org/wiki/Netscape_5) and [Perl 6](https://en.wikipedia.org/wiki/Perl%206) in its ambitiousness and innovation.

* * *

- [just for fun](/blog/tags/just for fun/)
- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Recap of Hackathon Part One [Anchor](\#recap-of-hackathon-part-one)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 19, 2010
[Tweet](https://twitter.com/intent/tweet?text=Recap+of+Hackathon+Part+One&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F19%2Frecap-of-hackathon-part-one%2F)

[Kohsuke](https://twitter.com/kohsukekawa) just posted a brief write-up on [his personal blog](https://weblogs.java.net/blog/kohsuke/archive/2010/03/19/hudson-hackathon-day-1) about the first day of the [Bay Area Hudson hackathon/meetup](https://wiki.jenkins.io/display/JENKINS/Hudson+Bay+Area+Hackathon+2.0). He writes:

> Total of 9 people came and we had a great time talking about infrastructure issues, possible enhancements, design discussions, exchanging tips and plugins that they’ve developed, and otherwise building personal relationships.

A number of folks joined us on the `#Hudson` IRC channel on [Freenode](https://freenode.net/) and the WebEx conference, participating remotely. Since day one was primarily intended for hacking on Hudson itself, we’re expecting more people tomorrow when we’ll have a good mix of folks hacking **on** Hudson, folks hacking **with** Hudson and plain old folks.

image:https://web.archive.org/web/\*/https://agentdero.cachefly.net/continuousblog/HackathonDay1.jpeg

- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)# Jenkins 2 Overview [Anchor](\#jenkins-2-overview)

Jenkins is an open source automation server with an unparalleled plugin
ecosystem to support practically every tool as part of your delivery
pipelines. Whether your goal is [continuous\\
integration](https://en.wikipedia.org/wiki/Continuous_integration),
[continuous delivery](https://en.wikipedia.org/wiki/Continuous_delivery) or
something else entirely, Jenkins can help automate it.

Jenkins 2 brings Pipeline as code, a new setup experience and other UI
improvements all while maintaining total backwards compatibility with
existing Jenkins installations.

## Highlights of Jenkins 2: [Anchor](\#highlights-of-jenkins-2)

**[Built-in support for delivery pipelines.](#pipelines)**
**[Improved usability.](#ux)**
**[Fully backwards compatible.](#compat)**

* * *

## Pipelines  [Anchor](\#pipelines)

### Problem [Anchor](\#problem)

As organizations of all types seek to deliver high quality software faster,
their use of Jenkins is extending beyond just continuous integration (CI) to
continuous delivery (CD). In order to implement continuous delivery, teams
need a flexible way to model, orchestrate and visualize their entire delivery
pipeline.

### Solution [Anchor](\#solution)

Jenkins 2 supports delivery pipelines as a first-class entity. The Pipeline
plugin introduces a domain-specific language (DSL) that helps Jenkins users to
model their software delivery pipelines as code, which can be checked in and
version-controlled along with the rest of their project's source code.

![](/images/hello-world-pipeline.png)

The expressive domain-specific language makes it easier and faster to create
a simple "build, test and deploy" pipeline or build advanced pipelines. The
end result is improved productivity for teams.
[Learn more about the Pipeline plugin.](/doc/pipeline)

### Key Features and Benefits of Pipelines [Anchor](\#key-features-and-benefits-of-pipelines)

#### Pipeline as Code [Anchor](\#pipeline-as-code)

- Easily define simple and complex pipelines through the DSL in a ` Jenkinsfile`.

- Pipeline as code provides a common language to help teams (e.g. Dev and Ops) work together.

- Easily share pipelines between teams by storing common "steps" in shared repositories.


#### Pipeline Stage View [Anchor](\#pipeline-stage-view)

- A new interface makes it easy to visualize the progress across an entire pipeline.


[![](/images/pipeline-stage-view.png)](/images/pipeline-stage-view.png)

#### Durable [Anchor](\#durable)

- Pipelines are long-lasting and can survive infrastructure outages.


#### Built-in support for Git, GitHub branches [Anchor](\#built-in-support-for-git-github-branches)

- Each feature branch can define its own delivery pipeline, which Jenkins can detect, automatically managing Pipelines when branches are created or deleted.


* * *

## Improved Usability  [Anchor](\#improved-usability)

### Problem [Anchor](\#problem-1)

The abundant plugin ecosystem means that new Jenkins users must navigate
through long lists of plugins to find the most suitable plugins to match
their needs. Without any "batteries included" to address the most common needs,
getting started with Jenkins can be an intimidating experience.

### Solution [Anchor](\#solution-1)

For new users, Jenkins 2 starts up with suggested plugins to get them
started with the right set of tools to use Jenkins effectively from day one.

There are a number of user interface improvements, such as the
improved job configuration page, to make configuring jobs easier.

### Key Features and Benefits of Improved Usability [Anchor](\#key-features-and-benefits-of-improved-usability)

#### New "Getting Started" experience [Anchor](\#new-getting-started-experience)

- Start with a set of suggested plugins that match the most common needs.

[![](/images/getting-started-setup.png)](/images/getting-started-setup.png)

#### Redesigned "Create Item" page [Anchor](\#redesigned-create-item-page)

- The "Create Item" page has been redesigned to include icons for job types.
Once you have a larger number of item types to choose from, the page will group item types by category.


[![](/images/2.0-create-item.png)](/images/2.0-create-item.png)

#### New Job Configuration page [Anchor](\#new-job-configuration-page)

- Tabs at the top of the job configuration page let you quickly jump to various sections on the form.
The redesigned form elements make it easy to tell which options are related.


[![](/images/2.0-config-dialog.png)](/images/2.0-config-dialog.png)

* * *

## Backward Compatible  [Anchor](\#backward-compatible)

Jenkins 2 is a drop-in replacement of the Jenkins 1.x series of releases
and fully backward compatible. There is practically no reason _not_ to
upgrade!

|     |     |
| --- | --- |
|  | Jenkins 2 now requires Servlet 3.1 to run. If you're not using the embedded Winstone-Jetty, make sure your container supports Servlet 3.1 (e.g. Tomcat 8) before upgrading. |

|     |     |
| --- | --- |
|  | Jenkins 2 no longer supports AJP with the embedded Winstone-Jetty container, so if you're using Jenkins with a reverse proxy, please make sure it uses HTTP before upgrading. |

## Give us feedback! [Anchor](\#give-us-feedback)

We're very interested in your feedback on what you think of Jenkins 2.

- If you use Twitter, you can leave us some feedback
[on Twitter.](https://twitter.com/intent/tweet?text=@jenkinsci%20I%20think%20%23jenkins2%20is%20)[Back to blog](/blog/)

# Kohsuke leaves Sun [Anchor](\#kohsuke-leaves-sun)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 7, 2010
[Tweet](https://twitter.com/intent/tweet?text=Kohsuke+leaves+Sun&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F07%2Fkohsuke-leaves-sun%2F)

[![2504160293 977ddbf22d m d](https://farm3.static.flickr.com/2040/2504160293_977ddbf22d_m_d.jpg)](https://www.flickr.com/photos/skrb/2504160293/)Those of you on the `users@` or `dev@` mailing lists have likely already read that Kohsuke ( _left in the photo_), the founder of the Hudson project, [is leaving Sun](https://weblogs.java.net/blog/kohsuke/archive/2010/04/05/good-bye-sunoracle). I say that he is leaving Sun, instead of leaving Oracle as Kohsuke worked at Sun for nine years and Oracle only a few months. In those nine years at Sun, Kohsuke has worked on some great products, the most notable of them being Hudson.

Per Kohsuke’s post:

> Where am I heading next? I’m actually starting my own company to take Hudson to the next stage.

What this means for Hudson still isn’t certain yet, fortunately it means that Hudson will continue to have at least one full-time developer. It remains to be seen where KohsukeCorp (the name has not yet been disclosed) will focus within the Hudson code-base. For the greater user-base of Hudson, this means that the schedule for releases may slow down during this transitional period, there are some logistics to work out with Oracle regarding some of the hardware Hudson has traditionally used to host [JIRA](https://www.crunchbase.com/product/atlassian), this blog, and a number of other machines helping support the Hudson project in one fashion or another.

The next couple of months will be interesting for the Hudson community; as per usual you’ll be able to get the latest updates from this blog or the [@hudsonci](https://twitter.com/hudsonci) twitter account. I’ll let Kohsuke finish this post off:

> And finally, big thank you to everyone in the Hudson community, and in a broader java.net community. I wouldn’t be here without you guys, and I feel very proud that I’m a part of it.

* * *

- [core](/blog/tags/core/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Big Security Fix! Hudson 1.371 Released [Anchor](\#big-security-fix-hudson-1-371-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
August 10, 2010
[Tweet](https://twitter.com/intent/tweet?text=Big+Security+Fix%21+Hudson+1.371+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F10%2Fbig-security-fix-hudson-1-371-released%2F)

Hot on the heels of Hudson 1.370, which was released last Friday, the Hudson team released 1.371 which addresses a **critical vulnerability** in **all** Hudson versions prior to 1.371. The vulnerability was disclosed by [InfraDNA](https://infradna.com) in the [following security advisory](https://infradna.com/content/security-advisory-2010-08-09), which details the issue:

> This critical vulnerability allows an attacker to use CLI commands that they are otherwise unauthorized for. CLI commands can perform various administrative operations.

It is advised that **all** Hudson instances be upgraded immediately to avoid data loss or other ill effects from this issue. If you’re upgrading from a version earlier than 1.370, you can consult the [changelog](/changelog) for details on the other bug fixes and enhancements covered by the upgrade of your version to 1.371.

If you run a Hudson instance, it is recommended that Hudson system admins subscribe to either the [security advisories RSS feed](https://feeds.feedburner.com/hudson-security-advisories) or the [advisories@ mailing list](/mailing-lists/#jenkinsci-advisories-googlegroups-com)
\-\-\-

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.371/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [news](/blog/tags/news/)
- [releases](/blog/tags/releases/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# CloudBees announce Hudson-as-a-Service [Anchor](\#cloudbees-announce-hudson-as-a-service)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
August 26, 2010
[Tweet](https://twitter.com/intent/tweet?text=CloudBees+announce+Hudson-as-a-Service&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F26%2Fcloudbees-announce-hudson-as-a-service%2F)

![image](https://hudson-labs.org/sites/default/files/usage-stats.gif)[CloudBees](https://cloudbees.com/) announced the beta availability of their new Hudson-as-a-service "HaaS" today. I see this as [yet](https://labs.creativecommons.org/2010/08/12/welcome-hudson-to-creative-commons/) [another](https://hudson-mobi.com/) [validation](https://about.digg.com/blog/digg-technical-talks-kohsuke-kawaguchi) to Hudson, and as such, I welcome this new addition to the community and wish them well! — more companies betting on Hudson means we’ll get more investment to the project, which is all goodness for Hudson users. It’s been 5 months since I left Oracle to start [InfraDNA](https://infradna.com/), and I was initially worried about a possible negative impact on adoption, but instead Hudson has shown with no sign of slowing down (see picture on the right, from Andrew’s report, which shows # of estimated active installations that participates to our usage stats survey). And [InfraDNA](https://infradna.com/) is going well too - we’ve helped [companies big and small](https://infradna.com/customers) to improve their Hudson usage/adoption, and [our commercial value-add Hudson distribution](https://infradna.com/ichci) is getting plenty of interest.

Hosted Hudson offers an interesting trade-off, compared to on-premises Hudson. On the plus side, given the current hourly pricing of public clouds like EC2 and Rackspace, you get a better pricing model, as CloudBees charge by minutes. You also get rid of machines and upfront cost, which is great for small business. On top of that, you can also expect them to gradually develop more value-adds and better integration to various other pieces, which can get really interesting.

On the down side, you have less control over the environment that runs the builds, and you do not have access back to your intranet environment (think databases that you need to talk to, for example.) Also, in the current pricing (8.5 cents/hour of EC2 vs 1 cent/minute of CB), if your build takes longer than 9 minutes, you’ll save more by just using Hudson EC2 plugin.

On a related note, I think one of the sweet spots is Hudson that’s well integrated with on-premises cloud solution. As you can see in [the discussion with Liferay Hudson setup](https://www.liferay.com/web/brian.chan/blog/-/blogs/improving-quality-with-100-hudson-test-servers), with sufficient load it gets cheaper to have your own hardware, and many companies need some degree of control to the build/test environment that matches with their production environment. Plus with those on-premises virtualized environments, you can do [snapshots and forks](https://www.cs.toronto.edu/~brudno/public/publication/2009-04-01_lagar2009snowflock/), which can be made to do **very** interesting things.

Finally, I think the part that everyone can agree on is that the elasticity of build environment is hugely useful to the CI environment, as [I discussed in my JavaOne 2009 talk](https://java.sun.com/javaone/2009/articles/gen_hudson.jsp) ( [slides](https://wiki.jenkins.io/download/attachments/37323793/Hudson+J1+2009.ppt?version=1&modificationDate=1244127211000).) I’m very happy to see that the foundation work we’ve made in Hudson for this is getting validated more and more, and I think the added elasticity will drive a lot more changes in Hudson and more broadly into the way we develop software. It is an exciting time!

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# What's going on with the Hudson's infrastructure [Anchor](\#whats-going-on-with-the-hudsons-infrastructure)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 9, 2010
[Tweet](https://twitter.com/intent/tweet?text=What%27s+going+on+with+the+Hudson%27s+infrastructure&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F09%2Fwhats-going-on-with-the-hudsons-infrastructure%2F)

A lot has changed in the Hudson development and distribution infrastructure since last summer - we’ve made a distinct effort to get the quality of our infrastructure to match the quality of Hudson itself. We owe a special thanks to the wonderful folks over at [Atlassian](https://atlassian.com/) \- we’re taking advantage of their generous [open source license](https://www.atlassian.com/opensource/) for our bug tracking ( [JIRA](https://www.atlassian.com/software/jira/)), wiki ( [Confluence](https://www.atlassian.com/software/confluence/)), and source repository browser ( [FishEye](https://www.atlassian.com/software/fisheye/)). Obviously, there’s a lot more we can improve going forward - I’ll have another post up soon, looking at some of the ideas we’re kicking around. But for now, take a look at what we’ve already done, below the fold.

The Hudson war and plugin downloads have all moved off of the unreliable java.net to our own \[hudson-ci.org\]( [https://hudson-ci.org](https://hudson-ci.org)) with the downloads being powered by the same system used for distributing Java, OpenSolaris, and NetBeans. Downloading Hudson and/or plugins is now easier and more reliable.

We’ve moved issue tracking from java.net’s system to our own JIRA instance, at \[issues.hudson-ci.org\]( [https://issues.hudson-ci.org](https://issues.hudson-ci.org)). As with moving downloads off java.net, we’ve made reporting and browsing Hudson’s issues much faster, easier and more reliable, while still using the same authentication on the back-end as our Subversion and Maven repositories. We’re still working out some kinks in the system but since we’re running our own issue tracker now, rather than using one we didn’t have control over, we’ve got the flexibility we need to adapt our tools to best serve the developer and user communities.

Speaking of tools we now run ourselves, we’ve put up our own FishEye instance at \[fisheye.hudson-ci.org\]( [https://fisheye.hudson-ci.org](https://fisheye.hudson-ci.org)) \- until that was in place, we’d been relying on Atlassian’s public FishEye instance, which has many other open source projects' repositories available. Getting our own server up means we don’t have to bug the generous folks over at Atlassian every time the java.net SVN server confuses FishEye into failing to update. It also opens the door for us to use [Crucible](https://www.atlassian.com/software/crucible/) for code review in the future.

Hudson’s moved onto Twitter more and more over the last 6-9 months - we’ve got the always fabulous [@hudsonci](https://twitter.com/hudsonci), tweeting new releases, Hudson-related tweets, and more, as well as the [#hudsonci](https://twitter.com/search?q=%23hudsonci) hashtag.

This may not strictly be infrastructure but it’s worth mentioning that we’ve now got native packages and distribution for Hudson for [Ubuntu/Debian](https://hudson-ci.org/debian/), [Red Hat/Fedora/CentOS](https://hudson-ci.org/redhat/), [openSUSE](https://hudson-ci.org/opensuse/), [OpenSolaris/Nevada](https://pkg.hudson-ci.org/), and [FreeBSD](https://www.freshports.org/www/hudson/).

This is all in addition to key parts of our infrastructure that haven’t changed: our [official wiki](https://wiki.jenkins.io/display/JENKINS/Home), our [user and developer mailing lists](https://wiki.jenkins.io/display/JENKINS/Mailing+List), our [Subversion repository](https://hudson.dev.java.net/svn/hudson/trunk/hudson/) (and a [Git mirror](https://github.com/kohsuke/hudson/) on GitHub) and our [IRC channel over on Freenode](https://wiki.jenkins.io/display/JENKINS/IRC+Channel).

Oh, and I hear there’s a blog now too.

* * *

**Editor’s Note: \*Andrew Bayer ( `abayer`) has been a contributor to Hudson since early 2009, contributing to the ClearCase plugin, Hudson’s core and a small number of other plugins. Andrew also helps Kohsuke with a lot of Hudson’s project infrastructure, most notably the migration from Bugzilla on Java.net to JIRA running at [issues.hudson-ci.org](https://issues.hudson-ci.org)**\*

- [development](/blog/tags/development/)
- [core](/blog/tags/core/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Want some Hudson stickers? [Anchor](\#want-some-hudson-stickers)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 12, 2010
[Tweet](https://twitter.com/intent/tweet?text=Want+some+Hudson+stickers%3F&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F12%2Fwant-some-hudson-stickers%2F)

![4425921960 a056d816f1 m](https://farm3.static.flickr.com/2743/4425921960_a056d816f1_m.jpg) Rarely do I ever get mail, let alone mail I like, so I was quite excited when a shipment of stickers from [Hudson HQ](https://tinyurl.com/SunSantaClaraCampus) arrived yesterday. I’m certain you’re thinking to yourself "what does this guy need hundreds of Hudson stickers for?" Fact is, I don’t! They’re not for me, they’re for you!

**I am willing to mail stickers vast distances to you** ( _with some conditions_)

#### Conferences [Anchor](\#conferences)

If you’re presenting at a conference or otherwise would like some Hudson stickers to go around, email me with a rough estimate of how many you need. The only condition being that you tell me all about the event and how Hudson was received after the fact (this may involve an interview).

#### User Groups [Anchor](\#user-groups)

If you email me requesting some stickers for a user group, I’ll need an estimate of how many folks attend meetings. Depending on supplies, I may send you a little more than requested to be shared.

#### Companies [Anchor](\#companies)

If your company wants some Hudson stickers, I’d be happy to oblige, and of course I always appreciate stickers, pens, branded bouncy balls, etc (see: [swag](https://en.wikipedia.org/wiki/Promotional%20item)) in return!

#### People who like stickers [Anchor](\#people-who-like-stickers)

If you’re just a fan of Hudson, stickers, or both, I’ll still gladly mail you a few stickers with the condition that you take pictures of where the stickers end up (and maybe of your Hudson install) and either email me some cool pictures or post them to [Flickr](https://www.crunchbase.com/company/flickr) (tagged: " [hudsonstickers](https://www.flickr.com/photos/agentdero/tags/hudsonstickers/)")

I will be stuffing envelopes in my free time, so there may be a slight delay. You can email me at `tyler` at `linux` dot `com` requesting stickers, I’ll need:

```
How many: (estimate)
What for: (conference|usergroup|company|iwantsomeokay)
Mailing Address:
```

- [core](/blog/tags/core/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# A new blog for Kohsuke [Anchor](\#a-new-blog-for-kohsuke)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 16, 2010
[Tweet](https://twitter.com/intent/tweet?text=A+new+blog+for+Kohsuke&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F16%2Fa-new-blog-for-kohsuke%2F)

Historically, our fearless leader Kohsuke has blogged [on Java.net](https://www.java.net/blog/kohsuke). The setup made a whole lot of sense when Kohsuke was employed by Sun, then Oracle, which sponsors and runs [Java.net](https://java.net). In a post earlier this week discussing [console markups](https://www.java.net/blog/kohsuke/archive/2010/04/14/hudson-console-markups), Kohsuke casually pointed out that he will be cross-posting to Java.net, and his personal blog located at [kohsuke.org](https://kohsuke.org). The [first post](https://kohsuke.org/2010/04/12/hello/) over on Kohsuke.org welcomes us:

> For the longest time I haven’t really done anything about kohsuke.org, but as I left Sun/Oracle, I decided to put a bit more effort into it. So this is the new home.
>
> For the time being, I plan to post my blogs both on java.net and here.

If you’re a reader of feeds, I recommend adding the [rss feed](https://kohsuke.org/feed/) for the blog to your list of interesting continuous integration/hacker feeds.

* * *

- [core](/blog/tags/core/)
- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# What new features do you want to see? [Anchor](\#what-new-features-do-you-want-to-see)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 2, 2010
[Tweet](https://twitter.com/intent/tweet?text=What+new+features+do+you+want+to+see%3F&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F02%2Fwhat-new-features-do-you-want-to-see%2F)

Michael Donohue, a Hudson developer who has taken on the role of master bug triage guy for Hudson, does something regularly which I’ve really come to appreciate as a Hudson developer myself: he sends out emails to the dev list with the top 10 voted issues at that time. This gives those of us in the Hudson development community a good sense of what’s really important to our users, which in turn helps us decide where to focus our efforts. If you’re interested, you can see [the top voted issues](https://issues.hudson-ci.org/secure/IssueNavigator.jspa?mode=hide&requestId=10045) over at [our JIRA server.](https://issues.hudson-ci.org)

A good number of those issues have been high on the list for a while - I’m actually in the early stages of work on a plugin to answer [HUDSON-682](https://issues.jenkins.io/browse/JENKINS-682), the current #1 most voted-for issue, two and a half years after it was opened. But I’m sure there are some equally useful features Hudson users would like to see added which aren’t on that list. So I’m asking you, dear readers: what are you looking for in Hudson that isn’t already there? Take a look around the existing issues - you may find a request that fits what you want lurking just out of the top 10, needing only your vote to push it into the spotlight. If no one’s yet created an issue requesting your desired feature, well, create one.

Or, better still, write a plugin or contribute a patch yourself!

* * *

**Editor’s Note:** If you’re interested in writing a plugin, you can check out [Hudson’s wiki](https://wiki.jenkins.io) and/or [this guide](https://wiki.jenkins.io/display/JENKINS/Plugin+tutorial) on the subject.

Andrew Bayer ( `abayer`) has been a contributor to Hudson since early 2009, contributing to the ClearCase plugin, Hudson’s core and a small number of other plugins. Andrew also helps Kohsuke with a lot of Hudson’s project infrastructure, most notably the migration from Bugzilla on Java.net to JIRA running at [issues.hudson-ci.org](https://issues.hudson-ci.org).

- [infrastructure](/blog/tags/infrastructure/)
- [development](/blog/tags/development/)
- [core](/blog/tags/core/)
- [just for fun](/blog/tags/just for fun/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Welcome to Continuous Blog! [Anchor](\#welcome-to-continuous-blog)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 2, 2010
[Tweet](https://twitter.com/intent/tweet?text=Welcome+to+Continuous+Blog%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F02%2Fwelcome-to-continuous-blog%2F)

Hello and welcome to "Continuous Blog", the official Hudson weblog! If you
don’t mind me saying so, I think its arrival is long overdue. Since Hudson
started in November of 2006, there hasn’t been a central "voice" for the
project. In just a few short years Hudson has grown into a substantial project
with **hundreds** of plugins and thousands of users around the world.
[Kohsuke](https://twitter.com/kohsukekawa)'s
nice Java-based extensible continuous integration server has grown up into
fantastic tool with a great community around it.

### Goals for this weblog [Anchor](\#goals-for-this-weblog)

I think it is important to set out a couple of goals for this weblog, some simple items that should help guide the content and discussion around Continuous Blog and its future.

Continuous Blog should:

- Help advocate the use of Hudson to the larger internet community

- Be a central source for tutorials and helpful information to Hudson users of all skill-levels

- Recognize the numerous contributors to the Hudson project for their efforts


### What to expect [Anchor](\#what-to-expect)

As Continuous Blog grows and matures, you can expect to see a variety of Hudson-related content. Overviews of the latest releases of Hudson and its plugins, interviews and discussions with the developers who have contributed to Hudson over the years, guest posts by power-users on how Hudson fits into their workflow and much much more (really).

If you look around the page you’ll already see a good amount of content, in the
sidebar to the right you’ll notice the "Recently Released" section which
aggregates recently released plugins via [this RSS\\
feed](https://hudson.dev.java.net/servlets/ProjectRSS?type=news) , the "Blogs"
section which is an aggregation of Hudson community blogs (from [this RSS\\
feed](https://feeds.feedburner.com/KohsukesHudsonBlogs)).

We’re just starting out so make sure you [subscribe to the RSS feed](https://feeds.feedburner.com/ContinuousBlog), we’ve got a lot to talk about here on Continuous Blog.

- [core](/blog/tags/core/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Incoming! More Translations [Anchor](\#incoming-more-translations)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=Incoming%21+More+Translations&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F08%2Fincoming-more-translations%2F)

As [Kohsuke](https://twitter.com/kohsukekawa) mentioned on the dev@ [mailing\\
list](https://wiki.jenkins.io/display/JENKINS/Mailing+List) on January 29th,
another series of community translations of Hudson have been committed
( [r26764](https://hudson-ci.org/commit/26764)) and have been released with the
Hudson 1.344 release.

The locales included in this update are:

- Czech

- Spanish

- Finnish

- French

- Hungarian

- Japanese

- Korean

- Lithuanian

- Norwegian

- Dutch

- Polish

- Brazilian Portuguese

- Russian

- Slovenian

- Swedish

- Chinese (Simplified/Traditional)


If you’re fluent in any of the locales above, check out the latest release of Hudson to verify that the translations are correct, if there’s translations that you feel are incorrect, you can report them in [JIRA](https://issues.hudson-ci.org).

The [internationalization](/doc/developer/internationalization/) project could always use some more help whether it be from patches or via the [Translation Assistance Plugin](https://plugins.jenkins.io/translation).

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Keeping your configuration and data in Subversion [Anchor](\#keeping-your-configuration-and-data-in-subversion)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 10, 2010
[Tweet](https://twitter.com/intent/tweet?text=Keeping+your+configuration+and+data+in+Subversion&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F10%2Fkeeping-your-configuration-and-data-in-subversion%2F)

We all know that keeping important files in version control is critical, as it ensures problematic changes can be reverted and can serve as a backup mechanism as well. Code and resources are often kept in version control, but it can be easy to forget your continuous integration (CI) server itself! If a disk were to die or fall victim to a [misplaced](https://twitter.com/progrium/status/7646048501) `rm -rf`, you could lose all the history and configuration associated with the jobs your CI server manages.

It’s pretty simple to create a repository, but it isn’t obvious which parts of your $HUDSON\_HOME you’ll want to backup. You’ll also want to have some automation so new projects get added to the repository, and deleted ones get removed. Luckily we have a great tool to handle this: Hudson!

We have a Hudson job which runs nightly, performs the appropriate SVN commands, and checks in. The high-level overview of this job is basically:

1. Add any new jobs, users, plugin configurations, et cetera: `svn add -q --parents .xml jobs//config.xml users//config.xml userContent/`

2. Remove anything from SVN that no longer exists (such as a deleted job): `svn status | grep '!' | awk '{print $2;}' | xargs -r svn rm`

3. Check it in! `svn ci --non-interactive --username=mrhudson -m "automated commit of Hudson configuration"`
You’ll want to make sure to use the `--non-interactive` option for any automated svn operations, as this ensures Subversion won’t hang asking a question but instead fail immediately. You may also need to provide your password with the `--password` option.


To make such a Hudson job, create a new job, tie it to the controller (since this is where the configuration files are), set it to build periodically (we use “@midnight”), and add an “Execute shell” build step. Here’s the full script we use, to put into the build step:

```
# Change into your HUDSON_HOME.
cd /opt/hudson
# Add any new conf files, jobs, users, and content.
svn add -q --parents *.xml jobs/*/config.xml users/*/config.xml userContent/*
# Ignore things in the root we don't care about.
echo -e "warnlogn*.logn*.tmpn*.oldn*.bakn*.jarn*.json" > myignores
svn propset svn:ignore -F myignores . && rm myignores
# Ignore things in jobs/* we don't care about.
echo -e "buildsnlast*nnext*n*.txtn*.lognworkspace*ncoberturanjavadocnhtmlreportsnncoverndoclinks" > myignores
svn propset svn:ignore -F myignores jobs/* && rm myignores
# Remove anything from SVN that no longer exists in Hudson.
svn status | grep '!' | awk '{print $2;}' | xargs -r svn rm
# And finally, check in of course, showing status before and after for logging.
svn st && svn ci --non-interactive --username=mrhudson -m "automated commit of Hudson configuration" && svn st
```

You’ll notice this does some extra things like set the svn:ignores property to provide a relatively clean `svn st` which it shows before and after the commit for logging purposes. One thing this job _doesn’t_ do is put the build results of your jobs in version control. Because historical build logs and artifacts will never change and are also potentially large, a periodic (daily or weekly) `cp` or `rsync` of the **jobs** directory will still give you restorability while keeping your repository lean.

Now you can sleep well at night knowing that your CI server is safe and sound. If you are doing a similar thing with Hudson or another CI system, let us know about your solution!

* * *

**Editor’s Note:** [Mike Rooney](https://twitter.com/MikeRooney) is a Software Engineer at [Genius.com](https://twitter.com/Genius_com), provider of real-time marketing automation software connecting marketing and sales. You can read more posts from Mike and other Geniuses at [eng.genius.com](https://eng.genius.com)

- [development](/blog/tags/development/)
- [guest post](/blog/tags/guest post/)
- [jobs](/blog/tags/jobs/)
- [just for fun](/blog/tags/just for fun/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.348 Released  [Anchor](\#hudson-1-348-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 1, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.348+Released+&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F01%2Fhudson-1-348-released%2F)

The latest release, 1.348 of Hudson was pushed out to the repositories on the 26th of Feb. This release is primarily a bugfix release containing a number of fixes (listed below) and a few localization corrections

### Bugs fixed [Anchor](\#bugs-fixed)

- Fixed a performance problem of the job/build top page when there are too many artifacts.

- Improved /etc/shadow permission checks.

- Disable auto-refresh in Groovy script console ( [issue 5729](https://issues.jenkins.io/browse/JENKINS-5729))


### Contributors [Anchor](\#contributors)

This release of Hudson contained 19 commits from **5** different contributors to "core":

- [godin](https://twitter.com/<em>godin</em>)

- [kohsuke](https://twitter.com/kohsukekawa)

- swiest

- manuel\_carrasco

- rseguy


As usual, you can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.355 Released [Anchor](\#hudson-1-355-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 24, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.355+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F24%2Fhudson-1-355-released%2F)

![hudson street](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/hudson_street.jpg) The release of 1.355 came out earlier this week but I hadn’t had the chance to write anything up about it. Of course, the work never stops on Hudson so we almost have 1.356 ready to roll out the door, but then Kohsuke tweeted this:

> Because of the data center migration going on, I won’t be able to release #hudsonci today.

I won’t go into details on some of the infrastructure changes we have lined up just yet, so here’s the breakdown of 1.355

#### Bugs fixed [Anchor](\#bugs-fixed)

- Colored ball image at top of build pages was broken for Hudson in some web containers (fixed by removing workaround for a Firefox bug fixed since 3.0.5/Dec2008). ( [issue 2341](https://issues.jenkins.io/browse/JENKINS-2341))

- Console page while build is running did not wrap lines when viewed in IE. ( [issue 5869](https://issues.jenkins.io/browse/JENKINS-5869))

- Fixed build history to indicate test failure for MavenBuild and MavenModuleSetBuild.

- Make `dropdownList` work in repeatable content, such as a build step.


#### Enhancements [Anchor](\#enhancements)

- Added the agent retention strategy based on a schedule.

- Added to configure charset option of Mailer.


* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Resurgence of Releng [Anchor](\#resurgence-of-releng)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 30, 2010
[Tweet](https://twitter.com/intent/tweet?text=Resurgence+of+Releng&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F30%2Fresurgence-of-releng%2F)

A few weeks ago I passed a job listing that I had found through one of my **many** Google Alerts for Hudson-related queries to Andrew ( `abayer`), following up on one of those job listings Andrew recently signed an offer to join the nice folks over at Digg to be their resident "build guy." On its own I thought "great for Andrew!" and nothing more, then I saw [this thread](https://www.reddit.com/r/programming/comments/bi58m/anyone_here_a_build_engineer_or_part_of_the_build/) on reddit which poses the question:

> Anyone here a build engineer, or part of the build team? Could you please share your experience?

It seems, to me at least, the notion of "release engineering" is making a come-back, particularly in the aging "Web 2.0" world where companies like Digg, Facebook, Reddit, Twitter, etc are anywhere from five to ten years old. As these companies have aged a couple of important things have happened, their code-base has aged increasing the possibility of bitrot, but they have also expanded in terms of headcount. Start-ups that might have once slighted larger corporations like Oracle, Cisco VMWare and IBM for their burdensome process and longer release schedules now find themselves ensnared with massive code bases, larger development teams and complicated deployments.

image:https://web.archive.org/web/\*/https://agentdero.cachefly.net/continuousblog/hudson\_vs\_buildbot.png

Over the past few months we’ve seen Hudson being used in a number of different contexts, it was [pitched at PyCon](/content/hudson-pycon) as part of a larger appeal to the Python community to get on the continuous integration bandwagon, we’ve seen a few posts from developers using Hudson for testing and packaging [Android](/content/getting-started-building-android-apps-hudson) and [iPhone apps](https://manicwave.com/blog/2010/03/01/that-feels-better-cocoa-hudson-and-running-green/), .NET developers are [jumping on board as well](https://bobcravens.com/2010/03/01/getting-started-with-ci-using-hudson-for-your-net-projects/). Across the board it feels like Hudson is being more and more widely used, it is no longer the mainstay of the Java shop’s toolkit, it’s become a must have for _all_ developers.

With the allure of [continuous deployment](https://timothyfitz.wordpress.com/2009/02/10/continuous-deployment-at-imvu-doing-the-impossible-fifty-times-a-day/) and Hudson’s lowered barrier to entry for testing, packaging and automating releases, is release engineering making a comeback?

* * *

- [guest post](/blog/tags/guest post/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Get excited and make things [Anchor](\#get-excited-and-make-things)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 19, 2010
[Tweet](https://twitter.com/intent/tweet?text=Get+excited+and+make+things&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F19%2Fget-excited-and-make-things%2F)

![Get excited and make things](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/getexcited.jpg)The day of hackery is upon us! Today is Day One of the [Bay Area Hudson hackathon/meetup](/content/meet-and-hack-alongside-kohsuke-and-co), the hacking will start at 10am today and continue until 5pm at the [Oracle Santa Clara campus](https://tinyurl.com/yznmdoo) in the "library" conference room of SCA7 "Mansion" building. The focus today will be largely on hacking Hudson itself.

### Can’t attend? [Anchor](\#cant-attend)

Not everybody lives in the Bay Area, fortunately all of you are on the internets! There’s two ways you can participate remotely in the hackathon:

- **WebEx:** [Meeting Number: 201 389 367, Password: hudson](https://cisco.webex.com/ciscosales/j.php?ED=136431942&UID=0&PW=NN2U2OTAwNzg0&RT=MiM0) (audio conference, app sharing, etc)

- **IRC** As always, there’s the `#hudson` IRC channel on the Freenode where you can participate via text chat


If you’re in the Bay Area, but busy at work today, come by for [Day Two](https://wiki.jenkins.io/display/JENKINS/Hudson+Bay+Area+Hackathon+2.0) of the hackathon/meetup tomorrow (Saturday) from 10am to 6pm at [Hacker Dojo](https://hackerdojo.pbworks.com/) in Mountain View!

### Friday Agenda [Anchor](\#friday-agenda)

Currently there is only one item on the agenda for Friday:

- **Improving Client-Side Code Quality with YUI 3:** A Proposal (by: [Benjamin Shine](https://twitter.com/bshine))


_Image courtesy of [blackbeltjones](https://www.flickr.com/photos/blackbeltjones/3365682994/)_

* * *

**Update**: The WebEx link for today has been corrected.

- [feedback](/blog/tags/feedback/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Pre-tested commits with Git [Anchor](\#pre-tested-commits-with-git)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 12, 2010
[Tweet](https://twitter.com/intent/tweet?text=Pre-tested+commits+with+Git&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F12%2Fpre-tested-commits-with-git%2F)

At the first [Bay Area Hackathon](https://wiki.jenkins.io/display/JENKINS/BayAreaMeetup) in mid-2009, the topic du jour was " [pre-tested commits](https://wiki.jenkins.io/display/JENKINS/Designing+pre-tested+commit)." As potential implementations of the concept were discussed over burgers from [Brickhouse](https://www.brickhousesf.com/) in downtown San Francisco, we realized as a group a few things: first, those burgers were _delicious_, but more importantly: pre-testing commits is very-SCM dependent and involves a lot of moving parts. One of the positive changes that came out shortly after the meet up was the support for "Concurrent Builds", allowing a job to be executed concurrently on different agents, a precursor to pre-tested commit support. Fervor for the pre-tested commit feature lowered as time went on, the feature being too dependent on the SCM itself was generally accepted as the reasoning behind the feature languishing.

Chances are the feature is in fact too large for Hudson to support alone. It requires Hudson, the SCM and likely a third tool to work in concert together to perform such a feat.

With Git, and the phenomenal code review tool [Gerrit](https://code.google.com/p/gerrit/), and the [Gerrit plugin](https://wiki.jenkins.io/display/JENKINS/Gerrit+Plugin) by intrepid plugin developer, [Jyrki Puttonen](https://twitter.com/jyrkiputtonen), pre-tested commits with Hudson, Git and Gerrit _are_ possible.
For Git users more familiar with the distributed Git workflows, working with Gerrit should seem familiar. Gerrit has [JGit](https://www.eclipse.org/jgit/), a Java implementation of Git embedded within it, along with an `sshd` stack, meaning Gerrit can masquerade as a "regular" Git remote repository. Developers can push and pull to the repository just as they can with any other Git repository (provided they have permissions of course). I won’t delve too much into using Gerrit specifically here, but the pre-tested workflow with Gerrit and Hudson would look something like this:

- Dev creates a topic branch to work on a change

- Code is written (and hopefully tested) and committed locally

- Dev pushes commit(s) to Gerrit

- Hudson job (set to Poll SCM) picks up the patch, runs the job and marks it as "+1 Verified" or "-1 Fails"

- If the job fails or is unstable, the change should be reworked or corrected (typically with [git-rebase(1)](https://www.kernel.org/pub/software/scm/git/docs/git-rebase.html))

- If Hudson says the change is good to go, it can be cherry-picked or pulled directly from Gerrit.


For example:

image:https://web.archive.org/web/\*/https://agentdero.cachefly.net/continuousblog/gerrit\_patch.png

To learn more about Gerrit, check out the [project page on Google Code](https://code.google.com/p/gerrit/); information on the Gerrit plugin can be [found on the wiki](https://wiki.jenkins.io/display/JENKINS/Gerrit+Plugin).

* * *

- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)
- [jobs](/blog/tags/jobs/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# A Python Love Story: Virtualenv and Hudson [Anchor](\#a-python-love-story-virtualenv-and-hudson)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=A+Python+Love+Story%3A+Virtualenv+and+Hudson&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F08%2Fa-python-love-story-virtualenv-and-hudson%2F)

Over the past year Hudson has grown tremendously, both within the Java community and outside of it. Partially thanks to ( [Titus Brown](https://twitter.com/ctitusbrown))'s PyCon 2010 Atlanta coverage of continuous integration for Python (which we’ve [covered before](/content/hudson-pycon)), Hudson has made great strides within the Python community as well. In my experience, the majority of Python developers are not using Hudson to **build** anything, unless they have C extensions, but rather to **test** their packages, which presents its own set of specific requirements for jobs. Jobs for testing Python code need to be able to reliaby reproduce an environment with the same set of dependencies from one run to the next in order to provide consistent testing. Unlike their Java counterparts, Python developers cannot rely on a powerful system like [Maven2](https://maven.apache.org/) for enumerating build/test targets or defining their project’s dependencies in their jobs; fortunately, w e can have something close: [virtualenv](https://pypi.python.org/pypi/virtualenv) and [pip](https://pypi.python.org/pypi/pip). Virtualenv does exactly what you might expect it to, it creates a "virtual environment" with custom `site-packages` directory, and modified `python` executable. Using virtualenv you can create a staged environment to use for running unit and integration tests. Adding pip alongside that and you have a **fantastic** Python package manager/installer to use with the virtual environment. Below, I’ve outlined the steps required to use virtualenv and pip to **automatically** manage a custom environment for your Python jobs.

### The Recipe [Anchor](\#the-recipe)

For this recipe to work, you should make sure that your agent machines all have `virtualenv` and `pip` installed and accessible from your agent agent’s `$PATH`. For Mac OS X users, `sudo easy_install virtualenv` should do the trick, Linux users should be able to run `sudo [aptitude/yum/zypper] install python-virtualenv` with your respective package manager. You will also need the [SetEnv Plugin](https://plugins.jenkins.io/setenv) installed in Hudson.

#### Step 1 [Anchor](\#step-1)

Inside of the job’s configuration page ( [http;//hudson/job/configure](https://hudson/job/configure)), we need to define an environment variable for the job. Using the SetEnv plugin, define a new `$PATH`: \`PATH=.env/bin:$PATH

What this will do is modify the `$PATH` environment variable for all of the "Execute shell" build steps in your job. As you might have guessed, we’re going to install the virtualenv in `.env` in the workspace root directory.

#### Step 2 [Anchor](\#step-2)

To set up the virtualenv, you want to add a build step of type "Execute shell" and paste the following commands into the text area:

```
if [ -d ".env" ]; then
  echo "**> virtualenv exists"
else
  echo "**> creating virtualenv"
  virtualenv .env
fi
```

This will create a virtualenv the first time the job runs on a particular agent, a virtualenv that will persist until the workspace is cleared. Since we’re going to install dependencies in the virtualenv, we want to keep it around between jobs to reduce the amount of network hits to download packages.

#### Step 3 [Anchor](\#step-3)

With our virtualenv and our `$PATH` properly set up, the job can now properly install dependencies into its virtualenv, this is where `pip` shines. A little known feature of `pip` allows you to define a "requirements file" which enumerates the packages to install. In my example project, I defined the following requirements in a file called `pip-requires.txt`

```
eventlet>=0.9.9
nose>=0.11.3
MySQL-python>=1.2.3c1
```

In my hypothetical example, I’ll need `nose` to run my tests, while `eventlet` and `MySQL-python` are required for my project to properly run. With the `pip-requires.txt` file in the root of my source repository, I can add an additional "Execute shell" build step that does the following:

```
pip install -r pip-requires.txt
```

Assuming the `$PATH` environment variable was properly defined, this will use the virtualenv’s version of `pip` and it will install the packages defined in `pip-requires.txt` **into** the virtualenv! With the dependencies all properly installed in the virtualenv, I can now configure the remainder of my job to build my project and execute the tests. Pretty snazzy if you ask me!

- [general](/blog/tags/general/)
- [guest post](/blog/tags/guest post/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-03-12 [Anchor](\#links-for-2010-03-12)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 12, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-03-12&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F12%2Flinks-for-2010-03-12%2F)

Been a bit pre-occupied this week, so this links roll-up is short and sweet.

- [The JavaDude](https://twitter.com/anotherjavadude) details a fairly simple [test application embedding Glassfish + Netbeans + Hudson](https://javadude.wordpress.com/2010/02/22/tutorial-most-simple-test-application-for-embedded-glassfish-netbeans-hudson/)

- Thanks to [@chrisbingham](https://twitter.com/chrisbingham), discovered a [.NET wrapper for Hudson’s remote API](https://code.google.com/p/hudson-lib/)

- Learned all about [getting started with Hudson for .NET projects](https://bobcravens.com/2010/03/01/getting-started-with-ci-using-hudson-for-your-net-projects/) from [Bob Cravens](https://twitter.com/rcravens)

- [Robert Fletcher](https://twitter.com/rfletcherEW) wrote a groovy post about testing [Grails plugins on Hudson](https://adhockery.blogspot.com/2010/03/grails-plugins-on-hudson.html).


* * *

- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.353 Released [Anchor](\#hudson-1-353-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 31, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.353+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F31%2Fhudson-1-353-released%2F)

![hudson soap](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/hudson_soap.jpg) This week’s release comes slightly later than usual and is mostly a clean-up of a few bugs. Due to a problem with the Kohsuke’s [GitHub mirror](https://github.com/kohsuke/hudson) of Hudson’s core, I can’t mine the commits for interesting information as per usual so you’ll just have to trust that Hudson 1.353 is chock full of good, wholesome bug fixes. If the problem persists next week, I’ll find a better way to dig up information on particularly releases that doesn’t depend on the GitHub mirror.

#### Bugs fixed [Anchor](\#bugs-fixed)

- Tagging a repository can result in NPE.

- Fix possible form submission error when using multiple combobox elements. ( [issue 6025](https://issues.jenkins.io/browse/JENKINS-6025))

- Better escaping of test case names in test results pages. ( [issue 5982](https://issues.jenkins.io/browse/JENKINS-5982))

- Make radio buttons work in repeatable content, such as a build step. ( [issue 5028](https://issues.jenkins.io/browse/JENKINS-5028))

- Fixed the handling of verifying that the POM path entered for Maven projects exists. ( [issue 4693](https://issues.jenkins.io/browse/JENKINS-4693))


#### Enhancements [Anchor](\#enhancements)

- Added link to builds in buildTimeTrend ( [issue 3993](https://issues.jenkins.io/browse/JENKINS-3993))


* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson / Sauce OnDemand webinar [Anchor](\#hudson-sauce-ondemand-webinar)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
August 20, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+%2F+Sauce+OnDemand+webinar&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F20%2Fhudson-sauce-ondemand-webinar%2F)

On September 1st, I’ll be [presenting in a Sauce Labs webinar about Hudson and Sauce OnDemand](https://saucelabs.com/about/webinars#webinar-hudson). The talk will discuss how Hudson can be used with Sauce OnDemand, naturally, but it’ll also cover broader Hudson/Selenium integrations.

Please [register to this free event](https://www1.gotomeeting.com/register/789261128), and looking forward to seeing to you virtually.

- [general](/blog/tags/general/)
- [news](/blog/tags/news/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# 11th International Free Software Forum in Brazil [Anchor](\#11th-international-free-software-forum-in-brazil)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 29, 2010
[Tweet](https://twitter.com/intent/tweet?text=11th+International+Free+Software+Forum+in+Brazil&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F29%2F11th-international-free-software-forum-in-brazil%2F)

Last week, friend-of-Hudson [Leandro Nunes](https://leandron.wordpress.com/) sent the following message to the `users` [mailing list](/mailing-lists) regarding his upcoming talk on continuous integration and Hudson:

> Next month I will present [a talk about Hudson](https://verdi.softwarelivre.org/papers_ng/activity/view?activity_id=44) in the 11th
> International Free Software Forum ( [FISL 11](https://softwarelivre.org/fisl11)), held in Porto Alegre
> Brazil (detailed time and date of the talk are not yet scheduled so).

FISL 11 is one of the biggest free software events in Latin America and will quite literally attract _thousands_ of free software users, hackers, and enthusiasts. It will be held from the 21st to the 24th of July in Porto Alegre, if you’re in Central or South America, you should _definitely_ try to attend.

Leandro will have Hudson stickers on hand to give out and will surely do a fantastic job presenting Hudson to all those future Hudson users, I hope you can make it!

- [general](/blog/tags/general/)
- [meetup](/blog/tags/meetup/)
- [news](/blog/tags/news/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# One month of Continuous Blog [Anchor](\#one-month-of-continuous-blog)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 9, 2010
[Tweet](https://twitter.com/intent/tweet?text=One+month+of+Continuous+Blog&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F09%2Fone-month-of-continuous-blog%2F)

It’s been a little over a month since I pinged Kohsuke about an "official Hudson blog"; my role has been nothing more than writer and editor of a community resource, while I have invested a lot of time in Continuous Blog it is not "mine" so much as it is "ours." I feel I have a responsibility as the current maintainer of this resource to be as open as possible about what’s going on with CB. When I sat down to write the inaugural post, [Welcome to Continuous Blog](/content/welcome-continuous-blog), I set forth a few goals:

> - Help advocate the use of Hudson to the larger internet community
>
> - Be a central source for tutorials and helpful information to Hudson users of all skill-levels
>
> - Recognize the numerous contributors to the Hudson project for their efforts

Being a community resource, I wanted to review our progress on those goals along with some other interesting details about Continuous Blog and my community efforts. My metrics for achieving these goals are largely based on web traffic to this blog and retweets via the [@hudsonci](https://twitter.com/hudsonci) twitter account. First a minor overview of some of Continuous Blog’s traffic, then I’ll get to reviewing the goals.

![cb visits](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/cb_visits.png)_Visitor trend via Google Analytics_

Over the past month Continuous Blog has seen just under 10,000 visits from a number of different sources, the top sources being:

- [Feedburner](https://feedburner.google.com/) links posted to [@hudsonci](https://twitter.com/hudsonci)

- Direct visits

- [Feedburner](https://feedburner.google.com/)

- Referrals from the "blog" link on [hudson-ci.org](https://hudson-ci.org)

- [reddit](https://www.reddit.com/domain/hudson-ci.org)

- Links from the [Java.net](https://java.net) community portal and associated weblogs


In addition to general web traffic, Continuous Blog has around 350 RSS subscribers.

To put these numbers into perspective, Hudson has seen commits from 173 different developers and the [@hudsonci](https://twitter.com/hudsonci) twitter account has about 1,100 followers.

### Hudson Advocacy [Anchor](\#hudson-advocacy)

Looking at the traffic sources and the volume of traffic coming from what I would consider "the wider internet community" I’d say I failed to meet my own expectations. The majority of traffic seems to be coming from "within the community", which is certainly not a bad thing by a stretch, but I was hoping to start to see more visitors who are less likely to be using Hudson already. There are signs of this (I think) in the low number of search referrals, roughly 370 visits. To me this indicates the early age of this site, small number of external links to Continuous Blog and the content isn’t "interesting" enough to come up in searches for terms like "continuous integration with python".

The vector for improvement in advocacy, in my opinion, is to focus more on tutorials and user guides in the next month. Mike Rooney’s post on [Keeping your configuration and data in Subversion](/content/keeping-your-configuration-and-data-subversion) was both discussion provoking, but one of the more visited pages over the past month. I’ll be reaching out to more power-users from differing backgrounds to try to get some more tutorials on using Hudson for Python, Ruby, and Cocoa development while continuing to bug some of you Maven2 pros about guides.

### Central information repository [Anchor](\#central-information-repository)

I feel I failed to meet my own expectations here as well, it has only been a month (feels like an eternity!) so the amount of information we’ve been able to aggregate is small, but growing.

I have likely spent too much time covering Hudson community news, which I feel is important, to put a human voice in front of commits and releases, but it is not what I originally intended to spend the majority of my time doing.

### Recognition of contributors [Anchor](\#recognition-of-contributors)

In my opinion, this goal I’ve met. When writing up each Hudson release I’ve made certain to give credit where credit is due, to those that contributed, Through the "spotlight" series of posts I’ve also made an effort to highlight power-users of Hudson, trying to glean interesting details about their installations from them for our benefit. Unfortunately I’ve done a poor job highlighting the contributions from individual plugin developers, something I’m still not certain how to correct.

* * *

### Content [Anchor](\#content)

If you’ve been following the blog you have no doubt noticed the regular occurrence of certain types of posts, these regular series are:

- "This Week in Plugins"



- This post is halfway script generated, pulling all the release details out of SVN history to help me generate a post. The intention of the post being to cite new or notable plugins, while giving an informative listing of "what’s happening" in plugin development for the past week.


- "Spotlight On"



- The only interview-formatted series I’ve got going right now, I’ve been trying to find companies or organizations who are using Hudson in interesting ways and are willing to let "us" peek behind the curtains a bit. This started more from curiosity, but I think it’s fun to let Hudson users brag about their set ups.


- Hudson 1.xxx Released



- Pretty straight-forward reporting on a release of Hudson, depending on the contents of the release there may be some calls to action or editorializing on what’s gone into the release.


- Links for



- Roll-up of links shared or retweeted via the [@hudsonci](https://twitter.com/hudsonci) account, uncertain whether this is worth the time spent.


My two questions to the community in general would be:

- Do you dislike any of these?

- What else would you like to see on a regular basis?


I’m certainly open to suggestion, I’d like Continuous Blog to continue to be interesting to the Hudson community and if certain kinds of posts are boring or uninteresting, I can cut them from the line-up.

### Challenges [Anchor](\#challenges)

The largest challenge of Continuous Blog is **time**. As it stands the majority of content I write or edit in some capacity, which is a larger amount of time than I expected to spend. All said and done it takes me between 6-10 hours a week to write for CB, keep tabs on [@hudsonci](https://twitter.com/hudsonci) and peruse the mailing list for interesting things. This probably isn’t maintainable, and if for some reason a bus hits me ( [not uncommon around here](https://www.google.com/search?ie=UTF-8&q=muni+hits+pedestrian)), this blog would go dark for a while.

This can be easily fixed by simply adding more contributors to the blog, I’ll post more on how to write for Continuous Blog in another post.

* * *

All said and done, I am looking forward to another month of writing and following the Hudson community. I’m grateful for all those who’ve asked questions, been interviewed, wrote content and participated in discussion in the comments. For those of you in the Bay Area, I do hope you come out for the [meet-up in mid-March](/content/meet-and-hack-alongside-kohsuke-and-co), for the rest of you, I’ll catch you on IRC :)

* * *

- [core](/blog/tags/core/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Casual Fridays: Directing traffic with Hudson [Anchor](\#casual-fridays-directing-traffic-with-hudson)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 11, 2010
[Tweet](https://twitter.com/intent/tweet?text=Casual+Fridays%3A+Directing+traffic+with+Hudson&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F11%2Fcasual-fridays-directing-traffic-with-hudson%2F)

Intrepid Hudson user Christian Pelster posted a little project of his this week to the "users" [mailing list](/content/mailing-lists) called: **[hudsontrafficlights](https://code.google.com/p/hudsontrafficlights/)**.

Christian describes the project as:

> This Java based daemon aggregates the status of one or more jobs from a Hudson continuous integration server into a single status (red, yellow, green) and invokes a shell script on status change.

You can use hudsontrafficlights to control a USB traffic light (such as this [USB Traffic Light](https://www.cleware.de/catalog/product_info.php?cPath=23&products_id=118&language=en) from Cleware, GmbH) to give you and your colleagues nearly instant feedback on jobs in Hudson, without ever needing to leave your text editor!

image:https://hudsontrafficlights.googlecode.com/files/CIMG1635.JPG

- [general](/blog/tags/general/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.352 Released [Anchor](\#hudson-1-352-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 22, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.352+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F22%2Fhudson-1-352-released%2F)

After an exciting week that saw the rushed release of [Hudson 1.351](/content/breaking-hudson-1351-released) on Monday following a fairly serious regression, Hudson 1.352 was released mid-Friday with a good mix bug fixes and enhancements. Bundled with this release was another localizations drop including translations for ca, es, fi, fr, hi\_IN, it, nl, ru, and sv\_SE locales.![hudson neon](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/hudson_neon.jpg) In addition to the nice fancy new community contributed translations, which you can help with by installing the [Translation Assistance plugin](https://wiki.jenkins.io/display/JENKINS/Translation+Assistance+Plugin), the 1.352 release includes the subtle enhancement of hyperlinking URLs in the console output.

In general, 1.352 is looking like a very solid release, that said, here’s the breakdown for this release:

### Bugs fixed [Anchor](\#bugs-fixed)

- Fixed a file handle leak when a copy fails. ( [issue 5899](https://issues.jenkins.io/browse/JENKINS-5899))

- Replace '>' with '\_' in username, as already done for '<'. ( [issue 5833](https://issues.jenkins.io/browse/JENKINS-5833))

- Fix `editableComboBox` to select item when mouse click takes more than 100ms. ( [issue 2722](https://issues.jenkins.io/browse/JENKINS-2722))

- Fixed NPE when configuring a view without "Regular expression".

- Page shouldn’t scroll up when the user opens/closes a stack trace in the test failure report.

- Fixed a bug where Hudson can put a wrong help file link. ( [report](https://n4.nabble.com/Resolution-of-help-files-in-jelly-entries-tp1592533p1592533.html))

- Fixed Maven site goal archiving from agents. ( [issue 5943](https://issues.jenkins.io/browse/JENKINS-5943))

- Fixed a regression with NetBeans Hudson plugin progressive console output. ( [issue 5941](https://issues.jenkins.io/browse/JENKINS-5941))

- Fixed a situation where a failure in plugin start up can prevent massive number of job loss. </ul>


### Enhancements [Anchor](\#enhancements)

- Supported JBoss EAP 5.0.0 GA. ( [issue 5922](https://issues.jenkins.io/browse/JENKINS-5922))

- CLI commands on protected Hudson now asks a password interactively, if run on Java6.

- Added CLI 'login' and 'logout' commands so that you don’t have to specify a credential for individual CLI invocation.

- URLs in the console output are now hyperlinks.

- Improved the URL annotation logic.

- Add drag&drop support for `f:repeatable` lists and use this for the JDK/Ant/Maven installations in global config so these can be reordered.

- Integrated a new round of community-contributed localizations (ca, es, fi, fr, hi\_IN, it, nl, ru, and sv\_SE locales.)


### Contributors [Anchor](\#contributors)

This release contains 63 commits, from six different contributors including our very own [Subversion-loving](/content/keeping-your-configuration-and-data-subversion) [Mike Rooney](https://twitter.com/MikeRooney) (mcrooney).

- [abayer](https://twitter.com/abayer)

- [jglick](https://blogs.sun.com/jglick/)

- [kohsuke](https://twitter.com/kohsukekawa)

- [mcrooney](https://twitter.com/MikeRooney)

- [mindless](https://blogs.sun.com/mindless)

- [sogabe](https://twitter.com/ssogabe)


* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.362 Released [Anchor](\#hudson-1-362-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 14, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.362+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F14%2Fhudson-1-362-released%2F)

![hudson](/sites/default/files/images/hudson.gif) The 1.362 release of Hudson has a few bug-fixes and a few minor enhancements, all together a good stabilization release. Not too much interesting to discuss so straight on to the changelog!

#### Bugs [Anchor](\#bugs)

- Restored optional container-based authentication for CLI. ( [issue 6587](https://issues.jenkins.io/browse/JENKINS-6587))

- Fix javascript error when a plugin uses an empty `dropdownList`, resulting in LOADING overlay being left up. ( [issue 6542](https://issues.jenkins.io/browse/JENKINS-6542))


#### Enhancements [Anchor](\#enhancements)

- Add setting so job views may show only enabled or disabled jobs. ( [issue 6673](https://issues.jenkins.io/browse/JENKINS-6673))

- File parameters can now be downloaded from the build Parameters page. ( [issue 6719](https://issues.jenkins.io/browse/JENKINS-6719))

- Added an ability to point to different update sites.

- Added a new extension point to plug in custom utility to kill processes.

- Added a proactive error diagnostics to look for a broken reverse proxy setup. ( [report](https://wiki.jenkins.io/display/JENKINS/Running+Hudson+behind+Apache#RunningHudsonbehindApache-modproxywithHTTPS))


* * *

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.362/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

* * *

Image courtesy of [Hudson’s Grill](https://hudsonsgrill.com/)

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [releases](/blog/tags/releases/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)# Awards [Anchor](\#awards)

![](/images/awards/most-innovative-2023.png)

## [DevOps Dozen 2023: Most Innovative DevOps Open Source Project](https://devops.com/techstrong-group-announces-the-2023-devops-dozen%C2%B2-awards-honorees/) [Anchor](\#devops-dozen-2023-most-innovative-devops-open-source-project)

> The Jenkins open source project represents one of the greatest open source projects of all time, and another great project from the Linux Foundation. It is an industry standard now boasting over 11 million Jenkins developers around the world. Congrats to The Butler! Alan Shimel, Techstrong Group Founder & CEO

## [DevOps Dozen 2017: Best DevOps Open Source Project](https://devops.com/3rd-annual-devops-dozen-winners-announced/) [Anchor](\#devops-dozen-2017-best-devops-open-source-project)

> Jenkins is one of the leading open source automation servers available. Jenkins has an extensible, plugin-based architecture, enabling developers to create 1,400+ plugins to adapt it to a multitude of build, test and deployment technology integrations. In 2017, Jenkins surpassed 155,000 active installations (these are active installations that report usage back to the Jenkins project—only a fraction of total installations), and approximately 1.5 million users, making it the most widely deployed continuous delivery automation server in the world.

## [DevOps Dozen 2016: Best DevOps Open Source Project](https://devops.com/the-2016-devops-dozen-winners-announced/) [Anchor](\#devops-dozen-2016-best-devops-open-source-project)

> The DevOps world is chock full of great open source projects. Many of them have huge communities who are very passionate and involved. The Jenkins community holds its own with any of them. More importantly, Jenkins seems to be at the center of the DevOps/CD world.

![](/images/awards/bossie_awards_2014_primary-100463112-carousel.idge.jpeg)

## [Bossie Awards 2014: The best open source application development tools](https://www.infoworld.com/article/2687772/application-development/164642-Bossie-Awards-2014-The-best-open-source-application-development-tools.html) [Anchor](\#bossie-awards-2014-the-best-open-source-application-development)

InfoWorld's picks of the year among languages, frameworks, libraries, and all the other tools that programmers use.

> Jenkins is an extendable, open source continuous integration server that monitors executions of repeated jobs, such as building a software project or jobs run by cron. … There are hundreds of Jenkins plug-ins in the categories of source code management, build triggers, build tools, build wrappers, build notifiers, agent launchers and controllers, build reports, artifact uploaders, and many more.

![](/images/awards/Geek-Choice-Awards-CI-Server-300x300-black.png)

## [Geek Choice Award 2014](https://zeroturnaround.com/rebellabs/10-kick-ass-technologies-modern-developers-love/) [Anchor](\#geek-choice-award-2014)

> Jenkins has an almost laughably dominant position in the CI server segment; with founder Kohsuke Kawaguchi leading the way, a strong community of active plugin developers and a group of geeks even using it to trigger their office coffee machines, Jenkins is definitely a geek’s choice.

![](/images/awards/SDTimes2014.gif)

## [SDTimes 100, 2014: DevOps & SCM](https://sdtimes.com/content/article.aspx?ArticleID=71295&page=4) [Anchor](\#sdtimes-100-2014-devops-scm)

With cycles seemingly getting shorter and shorter, developers need tools that help them hit release dates without compromising. With speed in mind, these companies keep developers on track, no matter how fast they need to go.

![](/images/awards/SDTimes2013.gif)

## [SDTimes 100, 2013: Development Tools & CI](https://sdtimes.com/content/article.aspx?ArticleID=51682&page=4) [Anchor](\#sdtimes-100-2013-development-tools-ci)

Cycles have shrunk down to weeks instead of months, and constant progress in a product is the norm. Being able to leverage code into new features and products, and getting those deployed quickly, is critical to a business’ success. Companies have adjusted to this new reality, but not without help. These organizations provided the tools to make sure companies found the timely updates they were looking for.

![](/images/awards/SDTimes2012.gif)

## [SDTimes 100, 2012: Development Tools & CI](https://www.sdtimes.com/content/article.aspx?ArticleID=36641&page=5) [Anchor](\#sdtimes-100-2012-development-tools-ci)

Software today is built in rapid iterations, with continuous builds and integration into the product for multiple updates per year. Here, SD Times recognizes the companies and projects that make the tools that enable this to happen.

![](/images/awards/bossies_logo.gif)

## InfoWorld Bossies Award, 2011 [Anchor](\#infoworld-bossies-award-2011)

Each year, InfoWorld's Bossies (Best of Open Source Software awards) recognize the best open source software for business. The InfoWorld Test Center's central mission has always been to identify the most promising and cost-effective products available to IT organizations. The Bossies are selected by InfoWorld Test Center editors and reviewers.

![](/images/awards/oscon.png)

## [O'Reilly Open-Source Award, 2011](http://www.oscon.com/oscon2011/public/schedule/detail/21161) [Anchor](\#oreilly-open-source-award-2011)

The O’Reilly Open Source Awards recognize individual contributors who have demonstrated exceptional leadership, creativity, and collaboration in the development of Open Source Software. Past recipients have included Brian Aker, Angela Byron, Karl Fogel, Pamela Jones, Bruce Momjian, Chris Messina, David Recordon, and Andrew Tridgell. The nomination process is open to the entire open source community and all entries will be judged by the 2010 winners.

![](/images/awards/SDTimes2011.gif)

## [SDTimes 100, 2011: ALM&SCM](https://www.sdtimes.com/content/article.aspx?ArticleID=35592&page=4) [Anchor](\#sdtimes-100-2011-alm-scm)

Each year the SD Times 100 recognizes companies, non-commercial organizations, open source projects and other influencers for their innovation and leadership.

![](/images/awards/SDTimes2010.png)

## [SDTimes 100, 2010: ALM Platforms](https://www.sdtimes.com/content/article.aspx?ArticleID=34383&page=6) [Anchor](\#sdtimes-100-2010-alm-platforms)

Each year the SD Times 100 recognizes companies, non-commercial organizations, open source projects and other influencers for their innovation and leadership.

![](/images/awards/glassfish.gif)

## [GlassFish Community Innovation Award 2008](https://www.thefreelibrary.com/-a0185711149) [Anchor](\#glassfish-community-innovation-award-2008)

Sun Microsystems, Inc. today announced the winners of the GlassFish Community Innovation Awards Contest designed to fuel innovation around the GlassFish(TM) application server. GlassFish is based on the reference implementation of Java(TM) Platform, Enterprise Edition and is one of the leading open source application servers in the industry today with more than eight million downloads since its release in May 2005. The contest was part of Sun's Open Source Community Innovation Awards Program, a multi-year program running across several open source communities with a $1 million total prize.

![](/images/awards/duke2008.png)

## Duke's Choice Award [Anchor](\#dukes-choice-award)

Each year, the Duke's Choice awards committee invites Java community members to nominate the best and most innovative use of Java technology for recognition. The Java technology leadership team -- including James Gosling, known as the father of Java technology -- selects the winners based on the creativity of the Java technology-based applications and services.

> Hudson is an open-source continuous integration system written in the Java platform that enables developers to automate various aspects of the development process like builds and tests, as well as bring transparency to projects. Its emphasis is on ease of use and extensibility, which has enabled the community to develop more than 50 plug-ins to date.[Back to blog](/blog/)

# Hudson 1.363 Released! [Anchor](\#hudson-1-363-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 22, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.363+Released%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F22%2Fhudson-1-363-released%2F)

![Hudson coatofarms](/sites/default/files/images/Hudson_coatofarms.gif) Last Friday the Hudson team released release **1.363** which is yet another mixed bag of enhancements and bug fixes. Along with the usual bunch of fixes, this release includes a number of localization updates courtesy of a team of Hudson community volunteers participating in the Hudson [Internationalization project](https://wiki.jenkins.io/display/JENKINS/Internationalization).

It is also worth noting that this post is being published on Tuesday, contrary to the schedule that I operated on with Continuous Blog, I will no longer be posting release updates on Monday morning. Traditionally Hudson is released Friday afternoon (PST), meaning any potential regressions are reported early on Monday morning after our European users start to upgrade. Publishing this release announcement on Tuesday gives me more time to test out the release so I can report with greater confidence in the reliability of the update. ( _Note_: This may change in the future as we push for easier RC testing capabilities within Hudson)

If you’re a regular reader of the Hudson Labs blog, you may also notice that this change log looks eerily similar to the [1.362 announcement](/content/hudson-1362-released) from last week. Turns out I had mistakenly taken the upcoming changes from 1.363 and reported them as fixes in 1.362; I’ve since updated the post regarding 1.362’s change log.

#### Bug Fixes [Anchor](\#bug-fixes)

- Fix queue handling to close locking gap between removing job from queue and starting build, to prevent unintended concurrent builds (refactor of change first made in 1.360). ( [report](https://hudson.361315.n4.nabble.com/Patch-to-fix-concurrent-build-problem-td2229136.html))

- Allow multiple dependencies between same two projects, as they may trigger under different conditions and with different parameters. ( [issue 5708](https://issues.jenkins.io/browse/JENKINS-5708))

- Timeline on build trend page should use server timezone instead of always GMT. ( [issue 6692](https://issues.jenkins.io/browse/JENKINS-6692))

- Don’t mask the cause of the checkout related exception.

- "who am I?" page should be visible to everyone.

- Reinstall a JDK when a different version is selected. ( [issue 5551](https://issues.jenkins.io/browse/JENKINS-5551))


#### Enhancements [Anchor](\#enhancements)

- Avoid pointless and harmful redirection when downloading agent.jar. ( [issue 5752](https://issues.jenkins.io/browse/JENKINS-5752))

- Cache downloaded JDKs.

- Integrated community-contributed translations (Germany, Greek, Spanish, Finnish, Hungarian, Italian, Japanese, French, Russian, Slovenian, Dutch, Traditional Chinese, Swedish, Ukrainian, and Portuguese.)

- Upgraded bundled Ant to version 1.8.1. ( [issue 6562](https://issues.jenkins.io/browse/JENKINS-6562))


* * *

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.363/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

- [general](/blog/tags/general/)
- [releases](/blog/tags/releases/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 12, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F12%2Fthis-week-in-plugins%2F)

Since this is the first "This Week in Plugins" (TWiP), I’m trying a fairly basic format out. I’m debating how much information I want to include in these, while I would like to include details on "what’s changed" for each plugin over the course of the week, the means of fetching that information would be incredibly tedious (read: no fun) since there’s not particularly any standard meta-data to be scraped from the [wiki](https://wiki.jenkins.io). Duplicates have been pruned from the list, meaning the latest release of a plugin is what’s being shown; sorting is also by day of release then alphabetical.

- **Feb 4th, 2010**



- [Codescanner Plug-in 0.9 released](https://plugins.jenkins.io/codescanner)


- **Feb 5th, 2010**



- [Centralized Job(Re)Action 1.1 released](https://plugins.jenkins.io/logaction-plugin)

- [Performance Publisher plugin 7.95 released](https://plugins.jenkins.io/perfpublisher)

- [Selenium Auto Exec Server(AES) plugin 0.3 released](https://plugins.jenkins.io/selenium-aes)


- **Feb 6th, 2010**



- [MSTest plugin 0.5 released](https://plugins.jenkins.io/mstest)

- [TextFinder plugin 1.8 released](https://plugins.jenkins.io/text-finder)


- **Feb 7th, 2010**



- [Configuration Slicing plugin 1.16 released](https://plugins.jenkins.io/configurationslicing)


- **Feb 8th, 2010**



- [ClearCase UCM Baseline Plug-in 1.2 released](https://plugins.jenkins.io/ClearCase-UCM-Baseline)

- [Join plugin 1.8 released](https://plugins.jenkins.io/Join)


- **Feb 9th, 2010**



- [Downstream-Ext 1.5 released](https://plugins.jenkins.io/downstream-ext)

- [Groovy Postbuild 1.1 released](https://plugins.jenkins.io/groovy-postbuild)


- **Feb 10th, 2010**



- [Batch task plugin 1.13 released](https://plugins.jenkins.io/batch-task)

- [disk-usage plugin 0.10 released](https://plugins.jenkins.io/disk-usage)

- [JBoss Management Plugin 1.0 released](https://plugins.jenkins.io/jboss)

- [Sidebar Link 1.3 released](https://plugins.jenkins.io/sidebar-link)

- [slave-status 1.4 released](https://plugins.jenkins.io/slave-status)

- [SLOCCount Plug-in 1.4 released](https://plugins.jenkins.io/sloccount)

- [StarTeam plugin 0.2 released](https://plugins.jenkins.io/starteam)

- [Template Project plugin 1.1 released](https://plugins.jenkins.io/template-project)

- [TuxDroid Plugin 1.6 released](https://plugins.jenkins.io/tuxdroid)

- [Zentimestamp plugin 1.2 released](https://plugins.jenkins.io/zentimestamp)


- **Feb 11th, 2010**



- [Backup plugin 1.4 released](https://plugins.jenkins.io/backup)

- [Promoted Builds (Simple) 1.2 released](https://plugins.jenkins.io/promoted-builds-simple)

- [Python Plugin 1.1 released](https://plugins.jenkins.io/python)

- [Subversion Plug-in 1.11 released](https://plugins.jenkins.io/subversion)


- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-07-05 [Anchor](\#links-for-2010-07-05)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 5, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-07-05&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F05%2Flinks-for-2010-07-05%2F)

It’s been quite a while since I posted a Hudson links-roundup post, so without further ado, here goes nothing

- Max tells us about using [Hudson with Symbian’s CodeScanner](https://techmodblog.blogspot.com/2010/01/hudson-and-codescanner.html) tool.

- Running agents on Mac OS X? Mirko has [some handy launchctl foo](https://illegalstateexception.blogspot.com/2010/07/using-launchctl-to-restart-hudson-mac.html) for keeping his JNLP agents online

- Scott threw up a great configuration sample for running [Hudson with an Nginx reverse proxy with SSL](https://sleeplesscoding.blogspot.com/2010/07/hudson-ci-behind-nginx-reverse-proxy.html)

- Mark walks us through using Xvfb to run [headless cucumber/selenium tests with Hudson](https://markgandolfo.com/2010/07/01/hudson-ci-server-running-cucumber-in-headless-mode-xvfb)

- Our friends behind Build Doctor wrote [an interesting build radiator](https://www.build-doctor.com/2010/07/01/announcing-xfd) that works seamlessly with Hudson.


- [general](/blog/tags/general/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Tag team: Automating massive projects with Hudson and Artifactory [Anchor](\#tag-team-automating-massive-projects-with-hudson-and-artifactory)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 5, 2010
[Tweet](https://twitter.com/intent/tweet?text=Tag+team%3A+Automating+massive+projects+with+Hudson+and+Artifactory&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F05%2Ftag-team-automating-massive-projects-with-hudson-and-artifactory%2F)

For those of you living in or around Silicon Valley, next Wednesday (March 10th) you might want to reserve some space around 6pm on your calendar. [Frederic Simon](https://freddy33.blogspot.com/) and [Yoav Landman](https://twitter.com/yoavlandman) from [JFrog](https://twitter.com/artifrog) will be presenting at the [Silicon Valley JavaFX Users Group](https://www.meetup.com/svjugfx/) meeting at the Googleplex. Frederic and Yoav will be discussing and demonstrating how JFrog’s Artifactory works with Hudson to combine continuous integration with release management.

> Join with the Artifactory team to realize the benefits of managing your software development life-cycle through continuous integration.
>
> Frederic Simon (JFrog Chief Architect) and Yoav Landman (JFrog CTO) will demonstrate how to automate large-scale multi-module projects, using a fully-integrated platform with Artifactory and Hudson.
>
> Using Maven, Gradle or Ivy builds, it is now possible to dynamically automate and manage the pyramidal stacks of Unit, Functional, and Integration Tests.
>
> This demo-based session will show you how Artifactory and Hudson together make it much easier to promote certified builds to milestone releases , and finally to general availability, while making sure all builds are fully reproducible.
>
> Staying dynamic all through the development process avoids code freeze and provides very accurate feedback loops. This is crucial for Developers, QA teams, System and Integration testers, Users, Customers, and all the remaining actors of the development process.

If you’re interested in attending, you can RSVP on [the meetup page](https://www.svjugfx.org/calendar/12559455/?eventId=12559455&action=detail)

- [feedback](/blog/tags/feedback/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.344 Released [Anchor](\#hudson-1-344-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.344+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F08%2Fhudson-1-344-released%2F)

The latest release of Hudson, 1.344, was released on February 5th, 2010. The release contains primarily bug-fixes but has a few enhancements baked into it as well. As mentioned in " [\[Incoming! More Translations](/content/incoming-more-translations)", 1.344 incorporates a number of community-driven translations (see the other post for more information). Additionally, 1.344 removes the "easter egg" background image I wrote about in a post to my personal blog: [Mourning Sun](http://unethicalblogger.com/posts/2010/01/mourning_sun) Enough of the small talk, here’s the breakdown.\
\
## Bugs fixed [Anchor](\#bugs-fixed)\
\
- Removed the forced upper casing in parameterized builds. ( [issue 5391](https://issues.jenkins.io/browse/JENKINS-5391))\
\
- Password parameter on the disk should be encrypted. ( [issue 5420](https://issues.jenkins.io/browse/JENKINS-5420))\
\
- Duplicate entries on Upstream/Downstream project with "Build modules in parallel". ( [issue 5293](https://issues.jenkins.io/browse/JENKINS-5293))\
\
- "Projects tied on" should be "Projects tied to". ( [issue 5451](https://issues.jenkins.io/browse/JENKINS-5451))\
\
- Fixed the bug that prevents update center metadata retrieval in Jetty. ( [issue 5210](https://issues.jenkins.io/browse/JENKINS-5210))\
\
\
## Enhancements [Anchor](\#enhancements)\
\
- Show which plugins have already been upgraded in Plugin Manager. ( [issue 2313](https://issues.jenkins.io/browse/JENKINS-2313))\
\
- Show Hudson upgrade status on manage page instead of offering same upgrade again. ( [issue 3055](https://issues.jenkins.io/browse/JENKINS-3055))\
\
- Make badges in build history line up. ( [report](https://web.archive.org/web/20100524080401/https://hudson.361315.n4.nabble.com/Align-lock-sign-of-keep-build-forever-td1016427.html))\
\
\
## Contributors [Anchor](\#contributors)\
\
This release of Hudson contained 44 commits from 5 different contributors to "core":\
\
- [abayer](https://twitter.com/abayer)\
\
- [kohsuke](https://twitter.com/kohsukekawa)\
\
- [mindless](https://blogs.sun.com/mindless)\
\
- [sogabe](https://twitter.com/ssogabe)\
\
- [huybrechts](https://www.linkedin.com/in/thuybrechts)\
\
\
As usual, you can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.\
\
* * *\
\
**Update:** This post was written a day before [issue 5536](https://issues.jenkins.io/browse/JENKINS-5536) was discovered. I recommend waiting until 1.345 to update any production Hudson instances.\
\
- [development](/blog/tags/development/)\
- [feedback](/blog/tags/feedback/)\
- [just for fun](/blog/tags/just for fun/)\
- [links](/blog/tags/links/)\
\
## About the author [Anchor](\#about-the-author-1)\
\
![R. Tyler Croy](/images/avatars/rtyler.jpeg)\
\
[R. Tyler Croy](/blog/authors/rtyler/)\
\
R. Tyler Croy has been part of the Jenkins project for the past seven years.\
While avoiding contributing any Java code, Tyler is involved in many of the\
other aspects of the project which keep it running, such as this website,\
infrastructure, governance, etc.\
\
- [GitHub](https://github.com/rtyler)\
- [Twitter](https://twitter.com/agentdero)\
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Getting started: Building Android apps with Hudson [Anchor](\#getting-started-building-android-apps-with-hudson)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 17, 2010
[Tweet](https://twitter.com/intent/tweet?text=Getting+started%3A+Building+Android+apps+with+Hudson&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F17%2Fgetting-started-building-android-apps-with-hudson%2F)

In this post I’ll show a very basic tips on how to compile an Android project using Hudson. Specifically how I use Hudson to create release versions of my apps.

## Debug vs Release [Anchor](\#debug-vs-release)

I’m assuming that you are using [Eclipse](https://en.wikipedia.org/wiki/Eclipse%20%28software%29) with the [ADT plugin](https://developer.android.com/guide/developing/tools/adt.html). During development you can test your app on the emulator or a device and resources like R.java and aidl files are compiled for you automatically by the plugin. When it’s time to release your app, you’ll need to go through some steps:

- You must sign your app using a certificate

- You must update your AndroidManifest.xml to remove the android:debuggable attribute

- Replace your Google Maps API debug key with the one belonging to your release certificate (if you are using a MapView)

- Generate an apk package for the release and test it on a device or emulator


It would be nice to automate a few of these steps, and this is where Hudson comes in.

## Automated builds: Ant [Anchor](\#automated-builds-ant)

For automated builds the Android SDK uses [Apache Ant](https://en.wikipedia.org/wiki/Apache%20Ant), which Hudson has great support for. To generate a template build.xml you can use the android tool from the SDK using the following command:

```
android create project -n template -t android-7 -p template -k dummy.pkg -a Dummy
```

The target is specified as "android-7" meaning that we are building for Android 2.1. For apps that use MapView we would use "Google Inc.:Google APIs:7". It is a good idea to always [target the latest SDK](https://d.android.com/guide/practices/screens_support.html#strategies). From this template project we’ll grab the _build.properties_ and the _build.xml_ and copy those to the Android project that we want to build. Edit _build.xml_ and set the project name to your Android project name.

The _local.properties_ file contains the path to the SDK root and shouldn’t be checked in to version control. For our use we’ll set the properties that are in that file on the Hudson job configuration page.

## Running the build in Hudson [Anchor](\#running-the-build-in-hudson)

This part is easy: create a new freestyle job and let it be build with ant. The targets that we want to execute are `clean release`. Release will compile, package and sign your apk. Now to get this working right, some custom properties should be set (use the Advanced button).

```
sdk.dir=/Users/hugo/Code/android-sdk-mac
target=Google Inc.:Google APIs:7
key.store=certs/rd-release.keystore
key.alias=rainydays
key.store.password=thisisnotmypassword
key.alias.password=thisisnotmypassword
```

The _sdk.dir_ should point to the Android SDK root on your Hudson node. In my case I’m running Hudson locally on my machine. The _target_ property refers to the SDK we want to use as mentioned earlier. The _key. **properties are related to signing of the apk. My [strategy](https://d.android.com/guide/publishing/app-signing.html#strategies) is to have a separate key store and private key for each application that I develop. I also check that keystore in to SVN. I also archive the**-release.apk_ artifact so that I can download the latest release apk directly from Hudson. After completing these steps, you should be able to build your Android app with Hudson.

## Updating the AndroidManifest for release [Anchor](\#updating-the-androidmanifest-for-release)

…​But we’re not done yet :) Remember what I said about updating the AndroidManifest.xml? For that we need to edit the build.xml, which by default contains nothing more then a `<setup/>` tag to pull in the Android SDK ant target definitions. For my Rainy Days application, I adjusted build.xml like this:

```
   ...
   <setup />
   <property environment="env"/>
   <target name="preprocess" if="env.BUILD_TAG">
      <echo>Removing debug attribute from AndroidManifest.xml</echo>
      <replaceregexp file="AndroidManifest.xml" match="android:debuggable=&quot;.*?&quot;" replace=""/>
      <echo>Setting release maps key</echo>
      <replaceregexp file="res/layout/maplayout.xml" match="android:apiKey=&quot;.*?&quot;" replace="android:apiKey=&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;"/>
   </target>

   <!-- this target is only hooking release processing of the manifest -->
   <target name="-package-resources" depends="preprocess, android_rules.-package-resources">
   </target>
```

What the above snippet does is removing the _android:debuggable_ attribute from the _AndroidManifest.xml_ and replacing the maps API key in _res/layout/maplayout.xml_ with the correct key for release. The `-package-resources` target is pulled in from the Android _android\_rules.xml_ file.

Now when Hudson builds my app I get a ready to release apk that I can install on my device or emulator, which is pretty nice.

There is are some issues with this approach however. As you might have noticed:

- Replacements are done in the workspace, we are not really building **exactly** what’s in svn

- Each new build should start out fresh for that reason, for example by using the svn revert option.


Additionally I can not yet tag the release version with the updated files, because the [subversion tagging plugin](https://plugins.jenkins.io/subversion-tagging) doesn’t support this by design. This could be worked around by adding svn statements in the build.xml however. For now I don’t really mind as I make minor changes to the resource files, but I’ll be looking at improving this situation.

## Things to add: unit testing, coverage…​ [Anchor](\#things-to-add-unit-testing-coverage)

One thing that I’d really like to add is unit testing. This is a little bit more complicated though, since unit tests require a running emulator and a running emulator requires a gui. The Hudson [Xvnc](https://plugins.jenkins.io/xvnc) plugin could be very helpful here.

The Android build scripts for test projects already include [EMMA](http://emma.sourceforge.net/) output, it shouldn’t be to hard to use the Hudson [plugin](https://plugins.jenkins.io/emma) for that.

When Hudson is running on a local machine, the [Batch task](https://plugins.jenkins.io/batch-task) plugin can automate installing the apk on a device to automate things further.

## Summary [Anchor](\#summary)

Building Android applications with Hudson is not that hard, since the builds are based on Ant. By hooking in to the standard Android build targets it’s easy to update files like _AndroidManifest.xml_ which in turn makes sure the release process is controlled and predictable.

Android unit tests depend on the emulator which is a little bit more challenging to set up, but Hudson already has some plugins available to make this easier.

* * *

**Editor’s Note:** Hugo Visser is the developer of [Rainy Days](https://code.neenbedankt.com/my-first-published-android-app-rainy-days) and [Engine Watch](https://code.neenbedankt.com/monitor-your-app-engine-application-from-your-pocket-with-engine-watch-for-android/) for Android. You can
follow him [on Twitter](https://twitter.com/botteaap) and [on his blog](https://code.neenbedankt.com).

- [general](/blog/tags/general/)
- [guest post](/blog/tags/guest post/)
- [jobs](/blog/tags/jobs/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson at PyCon [Anchor](\#hudson-at-pycon)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 24, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+at+PyCon&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F24%2Fhudson-at-pycon%2F)

This past week [PyCon](https://twitter.com/pycon) has been going on in Atlanta, where [Titus Brown](https://twitter.com/ctitusbrown) gave a talk titled:

> Why not run all your tests all the time? A study of continuous integration systems

![Just use Hudson](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/just_use_hudson.png)<

Titus has some notable quotes "just use Hudson" but overall a good introduction of CI and a breakdown of some of the challenges behind continuous integration. He also does a good job going over getting started with Hudson, setting up a basic Python project that incorporates JUnit XML reporting and agents.

> "Yeah, we used Buildbot until recently, then I switched us to Hudson and my life got a lot better"

If you’re using Python with Hudson, I highly recommend watching the talk (embedded below).

</embed>

- [core](/blog/tags/core/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Meet-up and Hack alongside Kohsuke and Co. [Anchor](\#meet-up-and-hack-alongside-kohsuke-and-co)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=Meet-up+and+Hack+alongside+Kohsuke+and+Co.&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F08%2Fmeet-up-and-hack-alongside-kohsuke-and-co%2F)

Ever wanted to pick the brains of **multiple** Hudson developers and users, all at the same time? Feel like finally meeting Kohsuke in person? Now’s your chance!

We’re hosting our [second-ever Bay Area Hudson Hackathon/Meetup](https://wiki.jenkins.io/display/JENKINS/Hudson+Bay+Area+Hackathon+2.0) on **March 19th and 20th**. That’s nearly _two_ whole days of Hudson!

### Day One (Mar. 19) [Anchor](\#day-one-mar-19)

The first day of the hackathon/meetup is aimed primarily at those working with Hudson’s core, or are building on top of Hudson (plugins, etc).

- _Start:_ 10 a.m.

- _End:_ 5 p.m.

- _Location:_ [Oracle Santa Clara campus](https://tinyurl.com/SunSantaClaraCampus) in the "library" conference room of SCA7 "Mansion" building.


There will a number of community and corporate Hudson hackers joining us on Friday, so bring everything you’ll need to get some grade A hacking done with Kohsuke, Andrew Bayer, Alan Harder and your fellow plugin hackers.

### Day Two (Mar. 20) [Anchor](\#day-two-mar-20)

I’m tentatively calling this the **main event**, which will be hosted at the delightful [Hacker Dojo](https://hackerdojo.pbworks.com) in Mountain View. The "main event" will carry over the hackathon from the day before at Oracle, into a full blown community hackathon and meet-up. This is for Hudson **hackers and users** alike!

- _Start:_ 10 a.m.

- _End:_ 6 p.m.

- _Location:_ [Hacker Dojo](https://hackerdojo.pbworks.com/) (Savanna room)


As I’ve [pointed out before](/content/hudson-pycon), Hudson’s getting a lot of attention in other developer circles such as the Python, Ruby, Cocoa communities. As such, I’m hoping to get a lot of folks interested in using Hudson to come to Hacker Dojo where we (already being Hudson users) can help get them up to speed with all the great things Hudson can do.

* * *

**If you’re interested please RSVP:**

- Via the [hackathon page on the wiki](https://wiki.jenkins.io/display/JENKINS/Hudson+Bay+Area+Hackathon+2.0)

- Via Facebook for [day one](https://www.facebook.com/event.php?eid=369652692847) and [day two](https://www.facebook.com/event.php?eid=359578281880)


* * *

### How you can help [Anchor](\#how-you-can-help)

While I casually refer to myself as a "PR intern" for [Kohsuke](https://twitter.com/kohsukekawa), I’m technically a busy software engineer, meaning I’m grateful for all the help I can get.

##### Get the word out [Anchor](\#get-the-word-out)

The best way to help get the word out is to talk about Hudson and the meetup, this includes:

- Link to this post on Twitter

- Ping any user groups you are a member of in the area

- Blog about it

- Let your co-workers know about it

- Attend!


##### Volunteer to help setup/teardown [Anchor](\#volunteer-to-help-setupteardown)

Hosting the Saturday event at Hacker Dojo does carry some responsibilities with it. We will need some extra hands to make sure everybody has power, refreshments are chilled, lunch is ordered and delivered, and of course, cleaning up after we leave. If you’re in a generous mood, or in a real need for some karma, sign up to help on [the bottom of the wiki page](https://wiki.jenkins.io/display/JENKINS/Hudson+Bay+Area+Hackathon+2.0)

I am hoping Oracle and some other heavy users/contributors will kick in a few bucks for lunch and drinks on Saturday, if you think your company can help us out, feel free to ping me directly at `tyler` at `linux.com`.

* * *

- [feedback](/blog/tags/feedback/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Gee Thanks [Anchor](\#gee-thanks)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 7, 2010
[Tweet](https://twitter.com/intent/tweet?text=Gee+Thanks&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F07%2Fgee-thanks%2F)

`Squee-D` had some nice things to say in the `#hudson` [IRC channel](/chat/) yesterday that I thought I would share:

> Just to sing some praise again, make sure you all know how appreciated it is, we absolutely love hudson, and appreciate everyone who develops and maintains it.

Positive feedback (and negative really) is always appreciated; have you thanked your plugin maintainer today?

- [general](/blog/tags/general/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)# Artwork

The original Jenkins logo was created by our friends at
[Frontside.](https://frontside.com)
Special thanks to
[Charles Lowell](https://github.com/cowboyd)
for his efforts championing the logo's original design. Usage
guidelines for the original logo can be found on our
[Press](/press)
page. This page simply catalogues the many clever variations of Jenkins
created by members of the Jenkins community.

These images are also available in various sizes and SVG formats
online, or as a zip file. These are licensed under the
[Creative Commons Attribution-ShareAlike 3.0 Unported License.](https://creativecommons.org/licenses/by-sa/3.0/)
Under the terms of this license, you must include an attribution to the
Jenkins project, with a link (https://jenkins.io/), if you display
these logos or derivates thereof.

* * *

### JCasC [Anchor](\#jcasc)

[![JCasC](/images/logos/JCasC/256.png)](/images/logos/JCasC/JCasC.png)

Created by
Nicolas De loof & Kseniia Nenasheva

[Jenkins Configuration as Code Plugin](https://github.com/jenkinsci/configuration-as-code-plugin)

[SVG format](/images/logos/JCasC/JCasC.svg)

### Actor [Anchor](\#actor)

[![Actor](/images/logos/actor/256.png)](/images/logos/actor/actor.png)

[Los Angeles JAM](https://www.meetup.com/Los-Angeles-Jenkins-Area-Meetup/)

### Alien [Anchor](\#alien)

[![Alien](/images/logos/alien/256.png)](/images/logos/alien/alien.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Albuquerque JAM](https://www.meetup.com/Albuquerque-Jenkins-Area-Meetup/)

[SVG format](/images/logos/alien/alien.svg)

### Amsterdam [Anchor](\#amsterdam)

[![Amsterdam](/images/logos/amsterdam/amsterdam256.png)](/images/logos/amsterdam/amsterdam.png)

[JAMsterdam](https://www.meetup.com/Amsterdam-Jenkins-Area-Meetup)

### Atomium [Anchor](\#atomium)

[![Atomium](/images/logos/atomium/256.png)](/images/logos/atomium/atomium.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Belgium Jenkins Area Meetup](https://www.meetup.com/Belgium-Jenkins-Area-Meetup)

[SVG format](/images/logos/atomium/atomium.svg)

### Willie Nelson [Anchor](\#willie-nelson)

[![Willie Nelson](/images/logos/austin/256.png)](/images/logos/austin/austin.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Austin Jenkins Area Meetup](https://www.meetup.com/Austin-Jenkins-Area-Meetup/)

[SVG format](/images/logos/austin/austin.svg)

### Automotive [Anchor](\#automotive)

[![Automotive](/images/logos/automotive/256.png)](/images/logos/automotive/automotive.png)

[CloudBees \| Jenkins Automotive and Embedded Day](https://www.cloudbees.com/event/cloudbees-jenkins-automotive-and-embedded-day)

### Balloon [Anchor](\#balloon)

[![Balloon](/images/logos/balloon/256.png)](/images/logos/balloon/balloon.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/balloon/balloon.svg)

### Barcelona [Anchor](\#barcelona)

[![Barcelona](/images/logos/barcelona/256.png)](/images/logos/barcelona/barcelona.png)

Created by
[Eija Maria Närvänen](https://www.linkedin.com/in/eija-n%C3%A4rv%C3%A4nen/)

[Barcelona Jenkins Area Meetup](https://www.meetup.com/Barcelona-Jenkins-Area-Meetup/)

### Jenkins Baturro [Anchor](\#jenkins-baturro)

[![Jenkins Baturro](/images/logos/baturro/256.png)](/images/logos/baturro/baturro.png)

Created by
[Marco Davalos](https://www.linkedin.com/in/marco2704)

[DevOps Zaragoza MeetUp](https://www.devopszaragoza.com)

[SVG format](/images/logos/baturro/baturro.svg)

### Beekeeper [Anchor](\#beekeeper)

[![Beekeeper](/images/logos/beekeeper/256.png)](/images/logos/beekeeper/beekeeper.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/beekeeper/beekeeper.svg)

### Belarus [Anchor](\#belarus)

[![Belarus](/images/logos/belarus/256.png)](/images/logos/belarus/belarus.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Belarus Jenkins Meetup](https://www.meetup.com/Belarus-Jenkins-Meetup/)

[SVG format](/images/logos/belarus/belarus.svg)

### Boston [Anchor](\#boston)

[![Boston](/images/logos/boston/boston256.png)](/images/logos/boston/boston.png)

[Boston JAM](https://www.meetup.com/Boston-Jenkins-Area-Meetup/)

### Brno [Anchor](\#brno)

[![Brno](/images/logos/brno/brno256.png)](/images/logos/brno/brno.png)

[Brno JAM](https://www.meetup.com/Brno-Jenkins-Area-Meetup/)

### Cambridge [Anchor](\#cambridge)

[![Cambridge](/images/logos/cambridge/256.png)](/images/logos/cambridge/cambridge.png)

Created by
[Lorena Paton](https://www.linkedin.com/in/lorena-paton-16190447)

[Cambridge Jenkins Area Meetup](https://www.meetup.com/Cambridge-Jenkins-Area-Meetup/)

### Captain [Anchor](\#captain)

[![Captain](/images/logos/captain/256.png)](/images/logos/captain/captain.png)

Created by
[Mehdi\_BR](https://twitter.com/mehdiBR_)

### Chatterbox [Anchor](\#chatterbox)

[![Chatterbox](/images/logos/chatterbox/256.png)](/images/logos/chatterbox/chatterbox.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Jenkins Advocacy&Outreach SIG](/sigs/advocacy-and-outreach/)

### Clown [Anchor](\#clown)

[![Clown](/images/logos/clown/clown.png)](/images/logos/clown/clown.png)

Created by
[Annelise Box - xxhachx@gmail.com](https://instagram.com/jpeg_yo_yo)

[SVG format](/images/logos/clown/clown.svg)

### Cologne [Anchor](\#cologne)

[![Cologne](/images/logos/cologne/cologne256.png)](/images/logos/cologne/cologne.png)

[Cologne JAM](https://www.meetup.com/Cologne-Jenkins-Area-Meetup/)

### Cosmonaut [Anchor](\#cosmonaut)

[![Cosmonaut](/images/logos/cosmonaut/256.png)](/images/logos/cosmonaut/cosmonaut.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

### Cossack [Anchor](\#cossack)

[![Cossack](/images/logos/cossack/256.png)](/images/logos/cossack/cossack.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/cossack/cossack.svg)

### Cowboy [Anchor](\#cowboy)

[![Cowboy](/images/logos/cowboy/256.png)](/images/logos/cowboy/cowboy.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

Dallas/Fort Worth JAM

[SVG format](/images/logos/cowboy/cowboy.svg)

### Cute [Anchor](\#cute)

[![Cute](/images/logos/cute/256.png)](/images/logos/cute/cute.png)

[SVG format](/images/logos/cute/cute.svg)

### Duchess France [Anchor](\#duchess-france)

[![Duchess France](/images/logos/duchess/256.png)](/images/logos/duchess/duchess.png)

Created by
[TatoBerres](https://twitter.com/tatoberres)

[Duchess France](https://www.duchess-france.org/)

[SVG format](/images/logos/duchess/duchess.svg)

### Fire [Anchor](\#fire)

[![Fire](/images/logos/fire/256.png)](/images/logos/fire/fire.png)

[SVG format](/images/logos/fire/fire.svg)

### Formal [Anchor](\#formal)

[![Formal](/images/logos/formal/256.png)](/images/logos/formal/formal.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

### Gaucho [Anchor](\#gaucho)

[![Gaucho](/images/logos/gaucho/256.png)](/images/logos/gaucho/gaucho.png)

Created by
[Juan Rodríguez Peluffo](https://instagram.com/vintagefuturist)

### General [Anchor](\#general)

[![General](/images/logos/general/256.png)](/images/logos/general/general.png)

[SVG format](/images/logos/general/general.svg)

### Georgia [Anchor](\#georgia)

[![Georgia](/images/logos/georgia/256.png)](/images/logos/georgia/georgia.png)

Created by
[Teona Mushambadze - thea.mushambadze@gmail.com](https://twitter.com/highflyer910)

[SVG format](/images/logos/georgia/georgia.svg)

### Googly [Anchor](\#googly)

[![Googly](/images/logos/googly/256.png)](/images/logos/googly/googly.png)

Created by
[Lakhan Kumawat](https://github.com/Lakhankumawat)

[SVG format](/images/logos/googly/googly.svg)

### Guadalajara [Anchor](\#guadalajara)

[![Guadalajara](/images/logos/guadalajara/guadalajara256.png)](/images/logos/guadalajara/guadalajara.png)

[Guadalajara JAM](https://www.meetup.com/Guadalajara-Jenkins-Area-Meetup/)

### Hyderabad [Anchor](\#hyderabad)

[![Hyderabad](/images/logos/hyderabad/hyderabad256.png)](/images/logos/hyderabad/hyderabad.png)

[Hyderabad JAM](https://www.meetup.com/Jenkins-Hyderabad/)

### Ice Cream [Anchor](\#ice-cream)

[![Ice Cream](/images/logos/ice-cream/256.png)](/images/logos/ice-cream/ice_cream.png)

Created by
[Sarah Moreau - sarahmoreau1995@gmail.com](https://www.sarah-moreau.com)

[SVG format](/images/logos/ice-cream/ice_cream.svg)

### Jenkins of Israel [Anchor](\#jenkins-of-israel)

[![Jenkins of Israel](/images/logos/israel/JenkinsOfIsrael256.png)](/images/logos/israel/JenkinsOfIsrael.png)

Created by
Shelly Tsymbalov

### Jenkins [Anchor](\#jenkins)

[![Jenkins](/images/logos/jenkins/256.png)](/images/logos/jenkins/jenkins.png)

[SVG format](/images/logos/jenkins/jenkins.svg)

### Jenkins is the Way [Anchor](\#jenkins-is-the-way)

[![Jenkins is the Way](/images/logos/jenkins-is-the-way/256.png)](/images/logos/jenkins-is-the-way/jenkins-is-the-way.png)

Created by
[CloudBees](https://cloudbees.com/)

[abConsulting Network](https://stories.jenkins.io/)

### Jenkins X [Anchor](\#jenkins-x)

[![Jenkins X](/images/logos/jenkins-x/jenkins-x-256.png)](/images/logos/jenkins-x/jenkins-x.png)

Created by
[Joshua McDonald - jmcdonald@cloudbees.com](https://au.linkedin.com/in/josh-mcdonald-354b135a)

[SVG format](/images/logos/jenkins-x/jenkins-x.svg)

### Jenkins Peru [Anchor](\#jenkins-peru)

[![Jenkins Peru](/images/logos/jenkinsperu/256.png)](/images/logos/jenkinsperu/jenkinsperu.jpg)

Created by
[CloudBees](https://www.cloudbees.com)

### Jenkinstein [Anchor](\#jenkinstein)

[![Jenkinstein](/images/logos/jenkinstein/256.png)](/images/logos/jenkinstein/jenkinstein.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/jenkinstein/jenkinstein.svg)

### Kong Fu [Anchor](\#kong-fu)

[![Kong Fu](/images/logos/kongfu/256.png)](/images/logos/kongfu/kongfu.png)

Created by
[Jenkins 中文社区](https://jenkins.io/zh/)

### Jenkins Kubernetes Operator [Anchor](\#jenkins-kubernetes-operator)

[![Jenkins Kubernetes Operator](/images/logos/kubernetes-operator/256.png)](/images/logos/kubernetes-operator/kubernetes-operator.png)

Created by
[Tomasz Sęk](https://twitter.com/tomaszsek1)

[Jenkins Kubernetes Operator](https://github.com/jenkinsci/kubernetes-operator)

### Legolas [Anchor](\#legolas)

[![Legolas](/images/logos/legolas/256.png)](/images/logos/legolas/legolas.png)

Created by
[Rosa M Fossi](https://www.linkedin.com/in/rfossi/)

### Lima [Anchor](\#lima)

[![Lima](/images/logos/lima/lima256.png)](/images/logos/lima/lima.png)

[Lima JAM](https://www.meetup.com/Lima-Jenkins-Area-Meetup/)

### London [Anchor](\#london)

[![London](/images/logos/london/london256.png)](/images/logos/london/london.png)

[London JAM](https://www.meetup.com/London-Jenkins-Area-Meetup/)

### Magician [Anchor](\#magician)

[![Magician](/images/logos/magician/256.png)](/images/logos/magician/magician.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/magician/magician.svg)

### Magritte [Anchor](\#magritte)

[![Magritte](/images/logos/magritte/256.png)](/images/logos/magritte/magritte.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Belgium Jenkins Area Meetup](https://www.meetup.com/Belgium-Jenkins-Area-Meetup)

[SVG format](/images/logos/magritte/magritte.svg)

### Miner [Anchor](\#miner)

[![Miner](/images/logos/miner/256.png)](/images/logos/miner/miner.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[San Francisco JAM](https://www.meetup.com/San-Francisco-Jenkins-Area-Meetup/)

[SVG format](/images/logos/miner/miner.svg)

### Mono [Anchor](\#mono)

[![Mono](/images/logos/mono/256.png)](/images/logos/mono/mono.png)

Created by
[Hoon Jo](https://www.linkedin.com/in/hoonjo/)

### Musketeer [Anchor](\#musketeer)

[![Musketeer](/images/logos/musketeer/256.png)](/images/logos/musketeer/musketeer.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/musketeer/musketeer.svg)

### Nerd [Anchor](\#nerd)

[![Nerd](/images/logos/nerd/256.png)](/images/logos/nerd/nerd.png)

Created by
[Teona Mushambadze](https://twitter.com/highflyer910)

[SVG format](/images/logos/nerd/nerd.svg)

### Ninja [Anchor](\#ninja)

[![Ninja](/images/logos/ninja/256.png)](/images/logos/ninja/ninja.png)

Created by
Masanobu Imai

[SVG format](/images/logos/ninja/ninja.svg)

### Jenkins serving NUT [Anchor](\#jenkins-serving-nut)

[![Jenkins serving NUT](/images/logos/nut/jenkins-nut-small-256px.png)](/images/logos/nut/jenkins-nut-small.png)

Created by
[Jim Klimov](https://www.jimklimov.com/)

[ci.networkupstools.org](https://ci.networkupstools.org/)

### Oktoberfest [Anchor](\#oktoberfest)

[![Oktoberfest](/images/logos/oktoberfest/256.png)](/images/logos/oktoberfest/oktoberfest.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/oktoberfest/oktoberfest.svg)

### Parasite [Anchor](\#parasite)

[![Parasite](/images/logos/parasite/256.png)](/images/logos/parasite/parasite.png)

Created by
[Lee ChungKyu](https://www.linkedin.com/in/leechungkyu/)

### Paris [Anchor](\#paris)

[![Paris](/images/logos/paris/paris256.png)](/images/logos/paris/paris.png)

[Paris JAM](https://www.meetup.com/Paris-Jenkins-Area-Meetup/)

### Paris (Eiffel) [Anchor](\#paris-(eiffel))

[![Paris (Eiffel)](/images/logos/paris-eiffel/256.png)](/images/logos/paris-eiffel/paris-eiffel.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/paris-eiffel/paris-eiffel.svg)

### PEST Control [Anchor](\#pest-control)

[![PEST Control](/images/logos/pest-control/256.png)](/images/logos/pest-control/pest-control.png)

Created by
[Marco Davalos](https://www.linkedin.com/in/marco2704)

Platform Engineering Support Team

[SVG format](/images/logos/pest-control/pest-control.svg)

### Peter The Great [Anchor](\#peter-the-great)

[![Peter The Great](/images/logos/peter-the-great/256.png)](/images/logos/peter-the-great/peter-the-great.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[St.Petersburg JAM](https://www.meetup.com/St-Petersburg-Jenkins-Meetup/)

[SVG format](/images/logos/peter-the-great/peter-the-great.svg)

### Pixel Art [Anchor](\#pixel-art)

[![Pixel Art](/images/logos/pixelart/jenkins-pixelart-256.png)](/images/logos/pixelart/jenkins-pixelart-32.png)

Created by
[Heungsub Lee](https://subl.ee/)

### Plumber [Anchor](\#plumber)

[![Plumber](/images/logos/plumber/256.png)](/images/logos/plumber/plumber.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/plumber/plumber.svg)

### Pride [Anchor](\#pride)

[![Pride](/images/logos/pride/256.png)](/images/logos/pride/pride.png)

Created by
Pierre Schwang

[SVG format](/images/logos/pride/pride.svg)

### Punkins [Anchor](\#punkins)

[![Punkins](/images/logos/punkins/256.png)](/images/logos/punkins/punkins.png)

Created by
[cipo7741](https://github.com/cipo7741)

[SVG format](/images/logos/punkins/punkins.svg)

### Raleigh [Anchor](\#raleigh)

[![Raleigh](/images/logos/raleigh/256.png)](/images/logos/raleigh/raleigh.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[Triangle Jenkins Area Meetup](https://www.meetup.com/Raleigh-Jenkins-Area-Meetup/)

[SVG format](/images/logos/raleigh/raleigh.svg)

### Jenkins Romania [Anchor](\#jenkins-romania)

[![Jenkins Romania](/images/logos/romania/jenkins_romania256.png)](/images/logos/romania/jenkins_romania.png)

Created by
[Octavian Antoniu Raducanu](https://www.linkedin.com/in/octavian-antoniu-raducanu-933a8a1b2/)

### Accordion Jenkins [Anchor](\#accordion-jenkins)

[![Accordion Jenkins](/images/logos/russian/256.png)](/images/logos/russian/russian.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

### Ron Burgundy [Anchor](\#ron-burgundy)

[![Ron Burgundy](/images/logos/san-diego/256.png)](/images/logos/san-diego/san-diego.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[San Diego Jenkins Area Meetup](https://www.meetup.com/San-Diego-Jenkins-Area-Meetup/)

[SVG format](/images/logos/san-diego/san-diego.svg)

### Santa Claus [Anchor](\#santa-claus)

[![Santa Claus](/images/logos/santa-claus/256.png)](/images/logos/santa-claus/santa-claus.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

[SVG format](/images/logos/santa-claus/santa-claus.svg)

### Seattle [Anchor](\#seattle)

[![Seattle](/images/logos/seattle/seattle256.png)](/images/logos/seattle/seattle.png)

[Seattle JAM](https://www.meetup.com/Seattle-Jenkins-Area-Meetup/)

### Seonbi [Anchor](\#seonbi)

[![Seonbi](/images/logos/seonbi/256.png)](/images/logos/seonbi/seonbi.png)

Created by
[Lee ChungKyu](https://www.linkedin.com/in/leechungkyu/)

### Sherlock [Anchor](\#sherlock)

[![Sherlock](/images/logos/sherlock/256.png)](/images/logos/sherlock/sherlock.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

### Jon Snow [Anchor](\#jon-snow)

[![Jon Snow](/images/logos/snow/256.png)](/images/logos/snow/snow.png)

Created by
[Kseniia Nenasheva](https://www.linkedin.com/in/knenasheva/)

### Stay Safe [Anchor](\#stay-safe)

[![Stay Safe](/images/logos/stay-safe/256.png)](/images/logos/stay-safe/stay-safe.png)

Created by
Martin Grosche

### Superhero [Anchor](\#superhero)

[![Superhero](/images/logos/superhero/256.png)](/images/logos/superhero/superhero.png)

Created by
Masanobu Imai

[SVG format](/images/logos/superhero/superhero.svg)

### Switzerland [Anchor](\#switzerland)

[![Switzerland](/images/logos/switzerland/switzerland256.png)](/images/logos/switzerland/switzerland.png)

Created by
[CloudBees](https://www.cloudbees.com/)

[Switzerland JAM](https://www.meetup.com/Swiss-Jenkins-Area-Meetup)

### Sydney [Anchor](\#sydney)

[![Sydney](/images/logos/sydney/sydney256.png)](/images/logos/sydney/sydney.png)

Created by
[Maxwell A.](https://www.meetup.com/Sydney-Jenkins-Area-Meetup/members/185411794/)

[Sydney Jenkins Area Meetup](https://www.meetup.com/Sydney-Jenkins-Area-Meetup/photos/27339712/)

### Toulouse JAM [Anchor](\#toulouse-jam)

[![Toulouse JAM](/images/logos/toulousejam/256.png)](/images/logos/toulousejam/toulousejam.png)

Created by
[CloudBees](https://www.cloudbees.com)

[Toulouse Jenkins Area Meetup](https://www.meetup.com/Toulouse-Jenkins-Area-Meetup/)

### Turkey [Anchor](\#turkey)

[![Turkey](/images/logos/turkey/256.png)](/images/logos/turkey/Turkey.png)

Created by
[Teona Mushambadze](https://twitter.com/highflyer910)

[SVG format](/images/logos/turkey/Turkey.svg)

### Washington [Anchor](\#washington)

[![Washington](/images/logos/washington/256.png)](/images/logos/washington/washington.png)

[Washington D.C. JAM](https://www.meetup.com/Washington-DC-Jenkins-Area-Meetup/)

### Worldwide [Anchor](\#worldwide)

[![Worldwide](/images/logos/worldwide/256.png)](/images/logos/worldwide/worldwide.png)

[Jenkins Online Meetup](https://www.meetup.com/Jenkins-online-meetup/)

### Yaroslavl [Anchor](\#yaroslavl)

[![Yaroslavl](/images/logos/yaroslavl/yaroslavl256.png)](/images/logos/yaroslavl/yaroslavl.png)

Created by
Anastasia Malysheva

Yaroslavl Jenkins Meetup

* * *

## 3D model

3D version of Mr.Jenkins is
[available here](https://www.shapeways.com/model/2183445/mr-jenkins.html?materialId=26)
for order. If you want to print your own,
[the data is here.](https://drive.google.com/file/d/1tdPch-TKVF6T7w3Et9aVYRnE-fRtm3cR/view?usp=sharing)

As per the license of the original artwork, the 3D data model is under the same
[Creative Commons Attribution-ShareAlike 3.0 Unported License.](http://creativecommons.org/licenses/by-sa/3.0/)
The 3D logo design is by
[akiki.](https://www.fast-d.com/search/engineers/2798)

* * *

## HeroForge 3D model

The HeroForge 3D version of Mr.Jenkins is
[available here](https://www.heroforge.com/load_config%3D13211607/)
for order. If you want to print your own, HeroForge provides STL for purchase.

As per the license of the original artwork, the 3D data model is under the same
[Creative Commons Attribution-ShareAlike 3.0 Unported License.](http://creativecommons.org/licenses/by-sa/3.0/)
The 3D logo design is by
[D. West.](https://www.linkedin.com/in/w-douglas-west-0856094/)

* * *

### Adding a Logo

In order to add a new logo, please refer to the
[CONTRIBUTING guidelines.](https://github.com/jenkins-infra/jenkins.io/blob/master/CONTRIBUTING.adoc#adding-a-logo)[Back to blog](/blog/)

# Stickers starting to arrive [Anchor](\#stickers-starting-to-arrive)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 23, 2010
[Tweet](https://twitter.com/intent/tweet?text=Stickers+starting+to+arrive&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F23%2Fstickers-starting-to-arrive%2F)

Way back in March, I asked you all: [Want some Hudson stickers?](/content/want-some-hudson-stickers)

Turns out, a **lot** of you do! Thanks to a huge amuont of help by [my future wife](https://web.archive.org/web/*/https://agentdero.cachefly.net/erinandtylerswedding.com/images/gallery/mq/img-9.jpg), the _first_ shipment of Hudson stickers went into the mail last week. ![4425921960 a056d816f1 m](https://farm3.static.flickr.com/2743/4425921960_a056d816f1_m.jpg) This first shipment was only to United States addresses! If you live outside of the U.S., or if you requested more than 50-ish stickers, I’ve not yet been able to send you stickers. I expect to start sending out international shipments later this week and early next week.
To those of you that have received your stickers, I’d like to remind you of the terms of our agreement:

- **Conferences**: The only condition being that you tell me all about the event and how Hudson was received after the fact (this may involve an interview).

- **Companies**: I always appreciate stickers, pens, branded bouncy balls, etc (see: swag) in return!

- **Nice People**: If you’re just a fan of Hudson, stickers, or both, I’ll still gladly mail you a few stickers with the condition that you take pictures of where the stickers end up (and maybe of your Hudson install) and either email me some cool pictures or post them to Flickr (tagged: "hudsonstickers")


[![355x210 TwitterArticle](https://placeholder.apture.com/ph/355x210_TwitterArticle/)](https://twitter.com/decriptor/status/16737013469)

To be honest, I _really_ just want to see some pictures of Hudson stickers slapped all over cool stuff: laptops, bosses, servers, desks, stop signs, coworkers, cats, you name it.

**If you did not request stickers, but want some now:** please refer to the [original post](/content/want-some-hudson-stickers) for directions. I do still have stickers left, but there are some "bulk requests" I’ve not yet filled. I will do my best to send out as many stickers as I can.

- [general](/blog/tags/general/)
- [just for fun](/blog/tags/just for fun/)
- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# So you've found a vulnerability, now what? [Anchor](\#so-youve-found-a-vulnerability-now-what)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 5, 2010
[Tweet](https://twitter.com/intent/tweet?text=So+you%27ve+found+a+vulnerability%2C+now+what%3F&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F05%2Fso-youve-found-a-vulnerability-now-what%2F)

Hudson, like all web applications, is not immune from vulnerabilities that could open up attack vectors for malicious use. What puts Hudson in a league of its own compared to others is its ability to execute arbitrary commands on agent machines, or in the case of the EC2 plugin, execute arbitrary commands "in the cloud." In light of all this, Hudson is quite secure and offers a variety of mechanisms to reduce the potential for exploits. ![hacker hat](https://www.thinkgeek.com/images/products/zoom/hacker-hat.jpg)

Despite Hudson’s security track record, you’ve managed to find a vulnerability in Hudson, and decide to don your white hat and inform the Hudson team. First off, let me commend you on your brilliant decision to report the vulnerability, you are truly a leader among men.

Generally immediate public disclosure of vulnerabilities is frowned upon as it doesn’t give us much time to react, investigate and patch the hole. For this reason there is the " [SECURITY](https://issues.hudson-ci.org/browse/SECURITY)" project in Hudson’s JIRA. The SECURITY project is a more locked down section of JIRA than the other projects and allows you to submit issues and have them reviewed by the Hudson core developers who can assess the vulnerability. When reporting the issue, it will be helpful to include information regarding the environment the Hudson instance is running in (such as the servlet container) as well as any pertinent reproduction steps so the team can reproduce, fix and verify with as little wheel-spinning as possible.

What happens next wholly determines on the severity of the issue, if it’s a highly critical vulnerability, the team will likely make an out-of-schedule release and advise users to upgrade. If it’s a less critical hole, the fix will be included in an upcoming scheduled release. Either way, the Hudson team has a good track record of correct potential security holes in a timely fashion.

After the hole you’ve discovered has been patched and released, you can revel in the fact that you helped make Hudson better, thanks!

* * *

_Image courtesy of [ThinkGeek](https://www.thinkgeek.com/tshirts-apparel/hats-ties/6345/)_

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [plugins](/blog/tags/plugins/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Quiet Period Feature [Anchor](\#quiet-period-feature)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
August 11, 2010
[Tweet](https://twitter.com/intent/tweet?text=Quiet+Period+Feature&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F11%2Fquiet-period-feature%2F)

Commits often come in a burst. This seems to happen mainly for two reasons — people sometimes forget to commit some files, and in the tranquility of waiting for your SCM to finish a commit, people sometimes realize the problems in the commit and they quickly make follow-up changes. The conventional wisdom is that the CI server should wait for the burst to finish before attempting a build. This is said to reduce the chance of having broken build, and it is also sometimes useful in reducing the average turn-around time for builds that take longer.

As such, Hudson is capable of waiting for a commit burst to be over before it triggers a new build, and this feature is called "quiet period." There are two parts in Hudson that interacts with the quiet period. One is the SCM polling behavior and the other is the queue.

The queue portion of the quiet period is straight-forward. When a build is scheduled into the queue with quiet period, the build will sit in the queue until the quiet period expires. If during this period, additional attempts are made to put the same build in the queue, the quiet period resets to its initial value. For example, if the quiet period is 5 minutes, and the build is put into the queue 9:00am and 9:03am, the actual build will only happen after 9:08am. Thus another way to think of the quiet period is that you are requiring a certain period of inactivity.

The above applies to all the mechanisms in Hudson that puts builds into the queue. This includes REST API call, CLI call, downstream triggers, and SCM pollings. So if you implement some kind of a "push" mechanism in your SCM to notify Hudson of a new commit, then you get the desired effect by just setting the quiet period in Hudson, and those push scripts don’t have to do anything tricky.

It is also possible for some of those to override the quiet period configured in the project. For example, when you click "Build Now" button in your browser, your browser is making a REST API call, but with the quiet period of zero. I used to run a "push" script that looks into a commit message and overrides the quiet period by taking advantages of this feature.

The other portion of the quiet period that often matters is the SCM polling behaviour. Up until Hudson 1.346, the way Hudson defined the SCM abstraction made it impossible for SCMs to correctly report newly detected commits since the last polling. Instead, it was only possible to report if the repository is newer than the workspace. As a result, if the polling interval is set shorter than the quiet period, the build stayed in the quiet period forever. This was tracked in HUDSON-2180.

Hudson 1.346 fixed this issue, and so if you are using a newer version of Hudson and SCM plugins that take advantage of this improvement, then everything works as expected. Otherwise, avoid setting quiet period longer than the polling interval.

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 19, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F19%2Fthis-week-in-plugins%2F)

Last week’s TWIP enumerated the release of **26** different plugin, this past week has seen 19 unique releases in comparison. You might be tempted to assume that _less_ plugin development has occurred over the past week, which isn’t the case. Last week a number of the releases were "code updates", i.e. plugins being rebuilt against the latest Hudson plugin API as opposed to new features or bug-fixes. With the releases of plugins this past week, it seems a large number of the releases contained new features and bug fixes, including **three new plugins!**

Making their Hudson debut are the following

- [Agent Monitor for system load average](https://plugins.jenkins.io/systemloadaverage-monitor)

- [Tool Environment plugin](https://plugins.jenkins.io/toolenv)

- [Ivy plugin](https://plugins.jenkins.io/ivy)


If you’re interested in contributing to an existing plugin, or building your own, I highly recommend checking out the [plugin tutorial](https://wiki.jenkins.io/display/JENKINS/Plugin+tutorial) and joining the [dev@ mailing list](https://hudson.dev.java.net/servlets/ProjectMailingListList). That said, here are this week’s releases, starting with last Friday.

- **Feb 12th, 2010**



- [File System SCM 1.6 released](https://plugins.jenkins.io/filesystem_scm)

- [JIRA plugin 1.19 released](https://plugins.jenkins.io/jira)

- [Job Configuration History Plugin 1.2 released](https://plugins.jenkins.io/jobconfighistory)

- [MSTest plugin 0.6 released](https://plugins.jenkins.io/mstest)

- [Agent Monitor for system load average 1.1 released](https://plugins.jenkins.io/systemloadaverage-monitor)

- [Template Project plugin 1.2 released](https://plugins.jenkins.io/template-project)


- **Feb 13th, 2010**



- [xUnit plugin 0.5.2 released](https://plugins.jenkins.io/xunit)


- **Feb 14th, 2010**



- [Amazon EC2 plugin 1.6 released](https://plugins.jenkins.io/ec2)

- [Dependency Analyzer Plugin 0.5 released](https://plugins.jenkins.io/dependencyanalyzer)

- [DocLinks plugin 0.3 released](https://plugins.jenkins.io/doclinks)

- [Tool Environment plugin 1.0 released](https://plugins.jenkins.io/toolenv)


- **Feb 15th, 2010**



- [Artifactory Plugin 1.0.6 released](https://plugins.jenkins.io/artifactory)

- [Dimensions SCM plugin 0.6.8 released](https://plugins.jenkins.io/dimensions)


- **Feb 16th, 2010**



- [HTML Publisher plugin 0.2.2 released](https://plugins.jenkins.io/htmlpublisher)


- **Feb 17th, 2010**



- [Ivy plugin 1.0 released](https://plugins.jenkins.io/ivy)

- [JBoss Management Plugin 1.0.2 released](https://plugins.jenkins.io/jboss)


- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-03-23 [Anchor](\#links-for-2010-03-23)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 23, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-03-23&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F23%2Flinks-for-2010-03-23%2F)

While I work on some screencasts and start to get more ["Spotlight" interviews](/blog/tags/interview) lined up, I figured it’s time for a link roll-up for your Tuesday morning reading.

- We caught a glimpse of a **[little Java scoreboard app](https://twitpic.com/152xhr)** for Hudson from [@davefollett](https://twitter.com/davefollett)

- Matt Patterson of [Reprocessed.org](https://reprocessed.org/) wrote a great post on **[continuous integration with Rails](https://reprocessed.org/blog/easy_rails_ci_with_hudson)** with Hudson, running both [Rspec](https://en.wikipedia.org/wiki/RSpec) and [Selenium](https://seleniumhq.org/) tests.

- At the hackathon at [Hacker Dojo](https://twitter.com/hackerdojo) on Saturday, [Kohsuke](https://twitter.com/kohsukekawa) pointed us all to the **[Hudson Cafe Press](https://www.cafepress.com/hudson_ci)** store, where he gets all his Hudson threads.

- [C.J. Adams-Collier](https://twitter.com/cjadamscollier) seems quite pleased to have **[builds for IronRuby back online](https://wp.colliertech.org/cj/?p=795)**, powered by Hudson.

- We got a sneak-peak into the first chapter of [John Ferguson Smart’s](https://twitter.com/wakaleo) **[Continuous Integration with Hudson](http://www.wakaleo.com/books/continuous-integration-with-hudson-the-book)** book.

- [Ben Shine](https://twitter.com/bshine) showed off some of **[his UI mock-ups](https://wiki.jenkins.io/display/JENKINS/UI+Mockups)** for Hudson.


* * *

- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.349 Released [Anchor](\#hudson-1-349-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 8, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.349+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F08%2Fhudson-1-349-released%2F)

Last Friday, March 5th, Hudson 1.349 was pushed out into the wild with an even split of bug fixes and enhancements. Included in this release is Alan Harder’s (a.k.a `mindless`) old data monitor code, discussed previously in the post " [Call for Testers: The older the better](/content/call-testers-older-better)." Included in this release were further updates to the japanese and german localizations of Hudson; if you’re interested in helping localize Hudson into more languages you can join the effort via the [Internationalization page on the wiki](https://wiki.jenkins.io/display/JENKINS/Internationalization).

Now for the breakdown of the 1.349 release:

### Bug fixes [Anchor](\#bug-fixes)

- Fix deserialization problem with fields containing double underscore. ( [issue 5768](https://issues.jenkins.io/browse/JENKINS-5768))

- Fix deserialization problem for Exception objects where the XML has bad/old data. ( [issue 5769](https://issues.jenkins.io/browse/JENKINS-5769))

- Fix serialization problem with empty CopyOnWriteMap.Tree. ( [issue 5776](https://issues.jenkins.io/browse/JENKINS-5776))

- Fixed a bug that can cause 404 in the form validation check.


### Enhancements [Anchor](\#enhancements)

- Remote build result submission shouldn’t hang forever even if Hudson goes down.

- Added a monitor for old or unreadable data in XML files and a manage screen to assist in updating files to the current data format and/or removing unreadable data from plugins that are no longer active. "Manage Hudson" page will show a link if any old/unreadable data was detected.

- Added a mechanism to bundle `init.groovy` inside the war for OEM. ( [report](https://n4.nabble.com/preconfigured-hudson-war-tp1575216p1575216.html))

- Added an extension point to annotate console output. ( [issue 2137](https://issues.jenkins.io/browse/JENKINS-2137))</ul>


### Contributors [Anchor](\#contributors)

Hudson 1.349 contains **43** commits from 6 contributors, due to the merging in of Alan Harder’s old-data-monitor branch the commit count is a bit off from the amount of code change that actually went out in 1.349.

- [abayer](https://twitter.com/abayer)

- [kohsuke](https://twitter.com/kohsukekawa)

- [mindless](https://blogs.sun.com/mindless)

- [sogabe](https://twitter.com/ssogabe)

- swiest

- [wyukawa](https://twitter.com/wyukawa)


As usual, you can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.354 Released [Anchor](\#hudson-1-354-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 16, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.354+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F16%2Fhudson-1-354-released%2F)

![scenic hudson](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/scenic_hudson.png)Hear ye, hear ye! Behold, the first release of Hudson _ever_ made by a not-employed-by-Sun [Kohsuke](https://twitter.com/kohsukekawa) (as we [covered last week](/content/kohsuke-leaves-sun)). This iteration of Hudson contains only bug fixes, check the listing below for the specifics on which bugs have been fixed (1.355 is looking like it will contain a number of fixes as well). The release of 1.354 comes slightly later than usual given some of the logistics that needed to, or still need to be resolved.

One of the infrastructure issues that’s half-way resolved is the question of Debian/Ubuntu packages. Kohuske has packages uploaded in an experimental [apt repository on hudson-labs.org](https://hudson-labs.org/debian/) which you can try out. That said, it’s not entirely clear whether this is going to be the preferred means of distributing native Debian/Ubuntu packages in the future (your mileage may vary).

#### Bugs fixed [Anchor](\#bugs-fixed)

- POM parsing was still using the module root as the base for relative paths for alternate settings files. ( [issue 6080](https://issues.jenkins.io/browse/JENKINS-6080))

- Fix dynamic updates of build history table when [CSRF](https://en.wikipedia.org/wiki/Cross-site%20request%20forgery) protection is turned on. ( [issue 6072](https://issues.jenkins.io/browse/JENKINS-6072))

- Improved the error reporting mechanism in LDAP setting.

- Raw console output contains garbage. ( [issue 6034](https://issues.jenkins.io/browse/JENKINS-6034))

- Fixed a file handle leak in the agents connection. ( [issue 6137](https://issues.jenkins.io/browse/JENKINS-6137))

- Quiet period wasn’t taking effect properly when doing parameterized builds.


### Contributors [Anchor](\#contributors)

The release of 1.354 contains a total of 51 commits to the "core" part of the tree, from 9 different contributors

- abayer

- drulli

- kohsuke

- manuel\_carrasco

- mindless

- sogabe

- swiest

- vlatombe

- wyukawa


* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Agents building robots [Anchor](\#agents-building-robots)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 16, 2010
[Tweet](https://twitter.com/intent/tweet?text=Agents+building+robots&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F16%2Fslaves-building-robots%2F)

A few weeks ago we covered [building Android apps with Hudson](/content/getting-started-building-android-apps-hudson) thanks to a very informative post by [Hugo Visser](http://blog.hudson-ci.org/users/hvisser), ever thought about building Android _itself_ with Hudson? Sony Ericsson apparently has, Continuous Blog reader and Hudson user [Christopher Orr](https://www.linkedin.com/in/christopherorr) sent me this screen shot from his recently purchased [Sony Ericsson Xperia X10 mini](https://www.engadget.com/2010/02/14/sony-ericsson-outs-xperia-x10-mini-and-xperia-x10-mini-pro/), notice the "Kernel version" field.

image:https://web.archive.org/web/\*/https://agentdero.cachefly.net/continuousblog/x10-mini-hudson.png

* * *

If you’ve got screen shots or photos spotting Hudson out in the big blue room, drop me an email at `tyler` at `linux dot com`

* * *

- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Performance improvements in 1.346 [Anchor](\#performance-improvements-in-1-346)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 16, 2010
[Tweet](https://twitter.com/intent/tweet?text=Performance+improvements+in+1.346&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F16%2Fperformance-improvements-in-1-346%2F)

From time to time, we get a report of out of memory problems in Hudson. It’s frequent enough that [we have a dedicated Wiki page](https://wiki.jenkins.io/display/JENKINS/I’m+getting+OutOfMemoryError) that talks about how to obtain information to help devs work on the problem.

So [the latest thread](https://n4.nabble.com/Restarting-hudson-every-day-memory-leaks-td1311161.html) from [David Woon](https://www.linkedin.com/in/davidwoon) was assumed to be one of those ordinary trouble-shooting sessions, but thanks to Gustaf Lundh, it turned out to be a very interesting exercise.

What we discovered was that the profiler I was using ( [Your Kit Profiler](https://www.yourkit.com/)), was basically eliminating all the weak/soft references from the picture entirely. If we are looking for leaks, this was the right thing, as those references will be cleared before VM chokes with `OutOfMemoryError`. But because of this elimination, I was completely blind to the wasteful memory usage in Jelly, which are only reachable via soft references.

So I used [Eclipse Memory Analyzer](https://www.eclipse.org/mat/) and YJP side by side to look into Jelly’s memory usage, and based on that insight, I was able to substantially improve the memory usage and speed of Jelly.

I monitor my production Hudson deployment with [VisualGC](https://java.sun.com/performance/jvmstat/visualgc.html), and the result was quite noticeable. And I hope you’ll notice that the response from Hudson is also snappier.

All these changes are a part of the latest 1.346 release.

* * *

**Editor’s Note:** Kohsuke Kawaguchi a senior engineer at Oracle (formerly Sun) and is the founder and author of the Hudson project. To learn more about Kohsuke, you can [follow him on Twitter](https://twitter.com/kohsukekawa) or subscribe to [his blog](https://weblogs.java.net/blog/kohsuke/).

- [development](/blog/tags/development/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Digg Technical Talk [Anchor](\#digg-technical-talk)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 28, 2010
[Tweet](https://twitter.com/intent/tweet?text=Digg+Technical+Talk&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F28%2Fdigg-technical-talk%2F)

Recently our fearless leader, Kohsuke Kawaguchi, was invited by the nice folks over at Digg to give a [tech talk about continuous integration](https://about.digg.com/blog/digg-technical-talks-kohsuke-kawaguchi) and automated testing. The Digg engineering team is full of believers in continuous integration, including our very own Andrew Bayer ( `abayer`). Being big users of the [Sauce Labs](https://twitter.com/saucelabs) service to drive their vast Selenium test suite, the house was packed with Selenium hackers/users and Hudson users, the stage was set for Kohsuke to give a great presentation.

</embed>

[Digg Technical Talks - Kohsuke Kawaguchi](https://vimeo.com/12859357) from [Digg Development](https://vimeo.com/digg) on [Vimeo](https://vimeo.com).

You can find slides of the presentation [here](https://about.digg.com/files/HudsonDigg.ppt)
\-\-\-

For those not familiar with Digg’s peripheral involvement in the Hudson community, they’ve graciously donated a build machine to help run Hudson builds on [ci.hudson-labs.org](https://ci.hudson-labs.org/).

- [general](/blog/tags/general/)
- [links](/blog/tags/links/)
- [meetup](/blog/tags/meetup/)
- [news](/blog/tags/news/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Welcome to Hudson Labs! [Anchor](\#welcome-to-hudson-labs)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
June 9, 2010
[Tweet](https://twitter.com/intent/tweet?text=Welcome+to+Hudson+Labs%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F09%2Fwelcome-to-hudson-labs%2F)

![scientist.thumbnail](/sites/default/files/images/scientist.thumbnail.gif) Hello again! It’s been a long time since I’ve written for the Hudson community, but now I’m back and ready to tackle some of the latest developments in the Hudson community.

### What is Hudson Labs? [Anchor](\#what-is-hudson-labs)

As you may have [read in April](/content/kohsuke-leaves-sun), Kohsuke left Oracle to found [InfraDNA](https://web.archive.org/web/20100612130510/http://infradna.com/), a company specializing around Hudson. The departure meant the Hudson community would no longer have access to some of the hardware and services that Kohsuke had accumulated over the years working on Hudson at Sun Microsystems. While we are still happily part of the [Java.net](https://java.net/) community, we’ve recognized the need for some community-owned resources and Hudson Labs was born.

Over the past couple months, a group within the Hudson community, "infra" (short for "infrastructure"), has been working to get machines set up and build the foundation for a more open Hudson project infrastructure.

### What does Hudson Labs provide? [Anchor](\#what-does-hudson-labs-provide)

##### Builds [Anchor](\#builds)

One of the first tasks we set upon when building out Hudson Labs was to start improving the build and release process of Hudson by moving as much of it into a [public Hudson instance](https://ci.hudson-labs.org). Building Hudson itself, plugins and dependencies of the Hudson project, the Hudson Labs instance will help improve the reliability of the Hudson ecosystem across the board, and should serve as a useful tool for core and plugin developers.

##### Mirroring [Anchor](\#mirroring)

Thanks to the great team over at the [Oregon State University Open Source Lab](https://www.osuosl.org) ( [OSUOSL](https://twitter.com/osuosl)), we’ve been able to build out [mirroring infrastructure](https://ftp.osuosl.org/pub/hudson/) for Hudson to provide fast access to native packages and wars alike. Currently the OSUOSL only has mirrors inside the continental United States, so we’re reaching out to friends in Asia and Europe to extend the mirroring system.

##### Information [Anchor](\#information)

I’m currently working on re-working some of the blog posts you may have read over four months as more structured tutorials. I hope to provide an easily accessible knowledge-base for developing Hudson along with configuring Hudson for various platforms and development environments; this is a more difficult task so all the pieces aren’t entirely in place for this just yet.

To be honest, I’m very enthusiastic about Hudson’s future. Now that InfraDNA is up and running, Kohsuke’s renewed focus combined with the foundation of Hudson Labs and the uncommonly hospitable Hudson developer and user communities, the future is looking bright!

- [general](/blog/tags/general/)
- [meta](/blog/tags/meta/)
- [news](/blog/tags/news/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 13, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F13%2Fthis-week-in-plugins%2F)

Apologies for the slight delay in posting another [TWiP](/blog/tags/plugins), both within the Hudson community and outside of it, it was quite a busy week. This past week we’ve had roughly **15** plugins released, with a few going through a number of iterations over the course of the week such as the [Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) and one of Hudson’s newest plugins, the [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin).
One of Hudson’s most active contributors, Alan Harder (a.k.a `mindless`) was responsible for this week’s only new plugin: [Copy Artifact Plugin](https://wiki.jenkins.io/display/JENKINS/Copy+Artifact+Plugin). The Copy Artifact plugin does exactly what you’d think it does, according to the short-and-sweet wiki page:

> Adds a build step to copy artifacts from another project.

|     |     |
| --- | --- |
|  | If you’re a plugin developer in the Bay Area, this upcoming Friday and Saturday is the [Bay Area Hudson Hackathon/Meetup](/content/meet-and-hack-alongside-kohsuke-and-co); don’t miss out! |

* * *

- Mar 07, 2010



- [Copy Artifact Plugin](https://wiki.jenkins.io/display/JENKINS/Copy+Artifact+Plugin) 1.0

- [Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) 1.15


- Mar 08, 2010



- [CAS protocol version 1 plugin](https://wiki.jenkins.io/display/JENKINS/CAS1+Plugin) 1.0.1

- [Copy To Slave Plugin](https://wiki.jenkins.io/display/JENKINS/Copy+To+Slave+Plugin) 1.2

- [Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) 1.16

- [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) 1.1

- [Sidebar Link](https://wiki.jenkins.io/display/JENKINS/Sidebar-Link+Plugin) 1.4

- [Subversion Plug-in](https://wiki.jenkins.io/display/JENKINS/Subversion+Plugin) 1.13


- Mar 09, 2010



- [Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) 1.17

- [Mercurial plugin](https://wiki.jenkins.io/display/JENKINS/Mercurial+Plugin) 1.26


- Mar 10, 2010



- [Libvirt Slaves plugin](https://wiki.jenkins.io/display/JENKINS/Libvirt+Slaves+Plugin) 1.2


- Mar 11, 2010



- [File System SCM](https://wiki.jenkins.io/display/JENKINS/File+System+SCM) 1.7


- Mar 12, 2010



- [Perforce Plugin](https://wiki.jenkins.io/display/JENKINS/Perforce+Plugin) 1.0.24


- Mar 13, 2010



- [IRC Plugin](https://wiki.jenkins.io/display/JENKINS/IRC+Plugin) 2.2

- [Jabber notifier plugin](https://wiki.jenkins.io/display/JENKINS/Jabber+Plugin) 1.6

- [Sonar Plugin](https://wiki.jenkins.io/display/JENKINS/Sonar+Plugin) 1.4

- [global-build-stats plugin](https://wiki.jenkins.io/display/JENKINS/Global+Build+Stats+Plugin) 0.1-alpha4

- [instant-messaging plugin](https://wiki.jenkins.io/display/JENKINS/Instant+Messaging+Plugin) 1.5


- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Security Fix! Hudson 1.365 Released [Anchor](\#security-fix-hudson-1-365-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 6, 2010
[Tweet](https://twitter.com/intent/tweet?text=Security+Fix%21+Hudson+1.365+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F06%2Fsecurity-fix-hudson-1-365-released%2F)

The Hudson team has released Hudson 1.365 which contains a critical security fix! A security advisory [released yesterday by InfraDNA](https://infradna.com/content/security-advisory-2010-07-05) goes on to explain the hole with more detail:

> This vulnerability allows an attacker to read arbitrary files in the
> server file system whose path names are known, by sending malicious
> HTTP GET requests. While such access is still subject to the normal
> access control enforced by the operating system, Hudson can still leak
> "secrets" possessed by Hudson

The vulnerability inside of Hudson affects Hudson instances running inside the embedded Winstone container, instances behind Glasshfish or Jetty (for example) are not subject to this vulnerability. Instances running behind a reverse proxy such as mod\_proxy or Nginx.

Hudson system administrators should subscribe to either the [security advisories RSS feed](https://feeds.feedburner.com/hudson-security-advisories) or the [advisories@ mailing list](/mailing-lists/#jenkinsci-advisories-googlegroups-com)

* * *

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.363/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [news](/blog/tags/news/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-02-24 [Anchor](\#links-for-2010-02-24)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 25, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-02-24&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F25%2Flinks-for-2010-02-24%2F)

Via the [@hudsonci](https://twitter.com/hudsonci) twitter account I typically share or "retweet" a number of links during the day, I realize a number of people either do not use Twitter or do not constantly pay attention to it. A lot of the links I find quite interesting, so I’d like to try sharing them after the fact here.

- [Java.net Maven Repository Rescue Mission on March 5th](https://www.sonatype.com/people/2010/02/java-net-maven-repository-rescue-mission-on-march-5th/)

- [Fighting Problems with Hudson Matrix Jobs and Perforce Plugin](https://blog.coremedia.com/cm/post/14886341/Fighting_Problems_with_Hudson_Matrix_Jobs_and_Perforce_Plugin.html)



- Working around issues with matrix jobs and the Perforce plugin ( [issue 1022](https://issues.jenkins.io/browse/JENKINS-1022))


- [Oracle ADF Development Essentials - Part 7 — Continuous Integration with Hudson](https://www.oracle.com/technology/pub/articles/adf-development-essentials/part7.html)



- Learn how to use Hudson in tandem with the Oracle Application Development Framework (with screenshots).


- [What is the best Version Control for Visual Studio 2008 SP1?](https://stackoverflow.com/questions/723322/what-is-the-best-version-control-for-visual-studio-2008-sp1/723326#723326)



- Asked on Stack Overflow, guess what the chosen answer was?


- [Automatic testing Oracle Service Bus using Hudson, maven and SoapUI](https://technology.amis.nl/blog/7408/automatic-testing-oracle-service-bus-using-hudson-maven-and-soapui)


- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Updated Chrome Extension [Anchor](\#updated-chrome-extension)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 12, 2010
[Tweet](https://twitter.com/intent/tweet?text=Updated+Chrome+Extension&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F12%2Fupdated-chrome-extension%2F)

The developer for the Hudson extension for Google Chrome, [Sebastian Sanitz](https://github.com/sanitz), emailed the `users@` list today to inform the community of an update to his **[fantastic extension](https://chrome.google.com/extensions/detail/hfncndbfmjmafoodaigpoicpbdfhhgdo)**.

Sebastian’s extension monitors [ci.hudson-labs.org](https://ci.hudson-labs.org) by default, but the URL and polling interval are both trivial to change. When any of the builds in the configured URL fail, you’ll see a red "Fail" indicator, otherwise green "Ok".

![chrome extension success](/sites/default/files/images/chrome_extension_success.png)

If you’re interested in contributing to the plugin, good news! It’s open source! You can find it [on GitHub](https://github.com/sanitz/hudson-chrome-extension).

- [general](/blog/tags/general/)
- [just for fun](/blog/tags/just for fun/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.350 Released [Anchor](\#hudson-1-350-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 15, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.350+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F15%2Fhudson-1-350-released%2F)

Finishing off the second week in March, the Hudson team rolled Hudson 1.350 off the assembly line last Friday, bringing a **slew** of fixes. Of particular interest to users of Hudson’s various native packages for [Red Hat](https://www.crunchbase.com/company/red-hat), [openSuSE](https://www.opensuse.org/), [Ubuntu/Debian](https://www.ubuntu.com/) and [Solaris](https://en.wikipedia.org/wiki/Solaris%20%28operating%20system%29), was a change that suppress the "self-upgrade" functionality in the "Manage Hudson" page. On the enhancements side of the fence, the team added authentication support to the [Hudson CLI](https://wiki.jenkins.io/display/JENKINS/Hudson+CLI) ( [issue 3796](https://issues.jenkins.io/browse/JENKINS-3796)) allowing Hudson users with locked down installations to take advantage of everything the CLI has to offer.

![garbageman](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/garbageman.jpg)Internal to Hudson, some more changes from Alan Harder (a.k.a [mindless](https://blogs.sun.com/mindless), a.k.a The Garbage Man), deprecating or otherwise removing deprecated APIs. Alan’s been doing some great work on Hudson’s internals, if you’re coming out to [this weekend’s hackathon](/content/meet-and-hack-alongside-kohsuke-and-co), but sure to pat him on the back for his tireless efforts.

#### Bug fixes [Anchor](\#bug-fixes)

- Fix handling of relative paths in alternate settings.xml path for Maven projects. ( [issue 4693](https://issues.jenkins.io/browse/JENKINS-4693))

- Alternate settings, private repository, profiles, etc were not used in embedded Maven for deploy publisher. ( [issue 4939](https://issues.jenkins.io/browse/JENKINS-4939))

- Make `editableComboBox` work in repeatable content, such as a build step.

- If content is captured using `<j:set var="..">..content..</j:set>`, fixed this to use proper HTML rendering when appropriate.

- '<' and '&' in the console output was not escaped since 1.349 ( [issue 5852](https://issues.jenkins.io/browse/JENKINS-5852))

- Fixed an `AbstractMethodError` in SCM polling under some circumstances. ( [issue 5756](https://issues.jenkins.io/browse/JENKINS-5756))

- Fixed a `ClassCastException` in the Subversion plugin - now using Subversion plugin 1.13. ( [issue 5827](https://issues.jenkins.io/browse/JENKINS-5827))

- The Maven Integration plugin link in the Update Center was going to a dead location. ( [issue 4811](https://issues.jenkins.io/browse/JENKINS-4811))

- On RPM/DEB/etc installation, don’t offer the self upgrade. It should be done by the native package manager. ( [report](https://n4.nabble.com/RPM-for-Hudson-1-345-does-not-Upgrade-Automatically-tp1579580p1579580.html))

- Fixed a possible lock up of agents.


#### Enhancements [Anchor](\#enhancements)

- Added advanced option to LogRotator to allow for removing artifacts from old builds without removing the logs, history, etc. ( [issue 834](https://issues.jenkins.io/browse/JENKINS-834))

- Authentication support in Hudson CLI. ( [issue 3796](https://issues.jenkins.io/browse/JENKINS-3796))

- Added console annotation support to SCM polling logs.


#### Contributors [Anchor](\#contributors)

The 1.350 release of Hudson contains 54 commits from 6 different contributors,

- [abayer](https://twitter.com/abayer)

- [jglick](https://blogs.sun.com/jglick/)

- [kohsuke](https://twitter.com/kohsukekawa)

- manuel\_carrasco

- [mfriedenhagen](https://bitbucket.org/mfriedenhagen)

- [mindless](https://blogs.sun.com/mindless)


* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson at JavaZone, Meetup in Oslo  [Anchor](\#hudson-at-javazone-meetup-in-oslo)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
August 31, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+at+JavaZone%2C+Meetup+in+Oslo+&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F31%2Fhudson-at-javazone-meetup-in-oslo%2F)

[JavaZone](https://jz10.java.no/) is a big Java conference in Scandinavia, and Hudson is well represented there. On September 8th, Håkon Snøtun will be presenting "Top 5 plugins for Hudson and Chuck Norris." and on September 9th, I’ll be presenting "Getting more out of your Hudson."

But more importantly, what is a conference without drinking!? So in that spirit, [InfraDNA](https://infradna.com/) will be organizing a Hudson User Meetup at [The Scotsman](https://maps.google.com/maps?hl=en&q=Oslo&ie=UTF8&hq=&hnear=Oslo,+Norway&ll=59.912614,10.743604&spn=0.001589,0.004823&t=h&z=18) from Sep 8th 19:30 ( [website](https://www.scotsman.no/).) We’ll get together, have some drinks, and enjoy geeky conversations.

So if you are local or visiting Oslo for JavaZone, come join us. If you plan to join us at The Scotsman, please [RSVP](mailto:kohsuke@infradna.com), and watch out for [my twitter updates](https://twitter.com/kohsukekawa) for any last minute time/location changes.

- [general](/blog/tags/general/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# Recent label and matrix project improvement [Anchor](\#recent-label-and-matrix-project-improvement)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
September 2, 2010
[Tweet](https://twitter.com/intent/tweet?text=Recent+label+and+matrix+project+improvement&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F02%2Frecent-label-and-matrix-project-improvement%2F)

Today, I’d highlight two recent improvements to the label and matrix projects.

When you have multiple agents in your Hudson build farm, you can use labels to classify agents by their capability/environment/architecture/etc. For example, your one agent might have “32bit” and “windows” label, while another one might have “linux”, “ubuntu”, and “64bit.” (with plugins like <a href=\`"https://wiki.jenkins.io/display/JENKINS/PlatformLabeler+Plugin\`">platform-labeler plugin</a>, you can attach labels automatically, too.) Or if you do Selenium testing, you might add browser names as labels to indicate which agent has which browser available.

With such set up, you then specify that such and such jobs can be only run on such and such labels. For example, you might say your “test-foo” job requires the “windows” label, while your “compile-bar” job might require the “macos” label.
Starting 1.372, Hudson now lets you use boolean expressions here, instead of just specifying one label as the requirement. For example, your “seleniumTest-zot” job can now say it requires “windows&&firefox” since it’s meant to run on Windows with Firefox. Or if your job requires a shell script, you might say “!windows” to indicate that it has to be run somewhere that’s not Windows.

Labels are also often used in the context of the multi-configuration project (a.k.a. matrix project.) In a multi-configuration project, you specify what to execute to build your project, then specify a number of “axes” that represents the variable and their possible values to execute a build. There are several different kinds of axes (and this is of course extensible), and one of them is the label axis.

For example, say you have a test suite that you want to run on Windows, Linux, and Solaris, to make sure it works correctly under all these environments. In such a case, you define one label axis, and tell Hudson that you have three possible values “windows”, “linux”, and “solaris.” When you build this project, Hudson will run your build three times by finding appropriate agent that carries the specified label.

In 1.373, you can now specify multiple label axes. For example, you might have a C++ project that needs to be compiled on various platforms. In such a case, you can define one label axis to be “windows”, “linux”, “solaris”, and you can define another label axis to be “32bit” and “64bit”. This will generate 3x2=6 combinations to be executed.

Sometimes the exhaustive combinations do not make sense. In such a case, you can use a filter boolean expression to eliminate some values. You can also use the same mechanism to create a sparse matrix — that is, you tell Hudson to reduce the coverage to 33%, and Hudson will eliminate every 2 out of 3 combinations.

Finally, I’d like to thank [Sandia National Laboratories](https://www.sandia.gov/) for sponsoring this work, which made it possible for [InfraDNA](https://infradna.com) to provide this feature to the community. People often think that contributing code is the only way to give back to the project, but sponsoring features like this is another great way to do it.

- [development](/blog/tags/development/)
- [core](/blog/tags/core/)
- [tutorial](/blog/tags/tutorial/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# Hudson Events Calendar [Anchor](\#hudson-events-calendar)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 4, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+Events+Calendar&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F04%2Fhudson-events-calendar%2F)

Just wanted to let everybody know that I’ve gone ahead and added a [Calendar](/event-calendar) for all the upcoming Hudson-related events.

Hopefully we’ll be able to add more and more events for the rest of the year including seminars, more meetups and potentially a few drink-ups!

Worth mentioning that I’ve not yet tested the iCal feed so if you have troubles with it, let me know (via the comments).

- [general](/blog/tags/general/)
- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Links for 2010-02-25 [Anchor](\#links-for-2010-02-25)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 26, 2010
[Tweet](https://twitter.com/intent/tweet?text=Links+for+2010-02-25&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F26%2Flinks-for-2010-02-25%2F)

- [Justifying Continuous Integration Expenditure](https://www.build-doctor.com/2010/02/25/justifying-continuous-integration-expenditure/)



- Our friend the [Build Doctor](https://twitter.com/builddoctor), tries to quantify spending on continuous integration. In the comment thread on another related post of his, he strikes gold with:


> People are more expensive than Continuous Integration servers; let’s optimise the system for them.

- [mailing list](/blog/tags/mailing list/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson 1.372 sets sail [Anchor](\#hudson-1-372-sets-sail)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
August 17, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+1.372+sets+sail&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F17%2Fhudson-1-372-sets-sail%2F)

Last Friday the Hudson team rolled out a small 1.372 with two enhancements following the **critical** [1.371 release on Monday](/blog/2010/08/10/big-security-fix-hudson-1-371-released/). Not a whole lot to say about this release other than go get it!

#### Enhancements [Anchor](\#enhancements)

- Persist matrix-based security settings in a consistent order ( [issue 7138](https://issues.jenkins.io/browse/JENKINS-7138))

- Jobs can now use boolean expression over labels to control where they run.


* * *

You can go grab the [latest .war file](https://ftp.osuosl.org/pub/hudson/war/1.372/hudson.war) straight from our [OSL mirror](https://www.osuosl.org) or if you’re using a native package, use your package manager to upgrade.

- [general](/blog/tags/general/)
- [news](/blog/tags/news/)
- [releases](/blog/tags/releases/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Learn about CI with Hudson (SF Java User Group) [Anchor](\#learn-about-ci-with-hudson-sf-java-user-group)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 1, 2010
[Tweet](https://twitter.com/intent/tweet?text=Learn+about+CI+with+Hudson+%28SF+Java+User+Group%29&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F01%2Flearn-about-ci-with-hudson-sf-java-user-group%2F)

A few weeks ago our fearless leader [Kohsuke Kawaguchi](https://twitter.com/kohsukekawa) joined the [San Francisco Java Users Group](https://www.meetup.com/sfjava/) to talk about continuous integration with Hudson. Thanks to [Marakana](https://marakana.com/) for organizing the meetup, and [Aleksandar Gargenta](https://www.linkedin.com/in/aleksandargargenta) for posting the video and slides, embedded below.

* * *

**[Learn About Continuous Integration With Hudson Directly From the Source](https://www.slideshare.net/marakana/learn-about-continuous-integration-with-hudson-directly-from-the-source)**

- [feedback](/blog/tags/feedback/)
- [jobs](/blog/tags/jobs/)
- [just for fun](/blog/tags/just for fun/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# This Week in Plugins [Anchor](\#this-week-in-plugins)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 26, 2010
[Tweet](https://twitter.com/intent/tweet?text=This+Week+in+Plugins&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F26%2Fthis-week-in-plugins%2F)

This week we had **18** plugin releases, with the [xUnit plugin](https://wiki.jenkins.io/display/JENKINS/xUnit+Plugin) managing to have a release almost _every day_. For this edition of TWiP I was actually able to generate the log of releases mostly automatically thanks to [rpetti](https://twitter.com/rpetti) who contributed the script to the [contiuous-blog-tools](https://github.com/rtyler/continuous-blog-tools) repository on GitHub.

This past week saw _two_ new plugins, the [SSH plugin](https://wiki.jenkins.io/display/JENKINS/SSH+plugin) and the [Global Build Stats plugin](https://wiki.jenkins.io/display/JENKINS/Global+Build+Stats+Plugin), the latter of which is still in "alpha".

- **Feb 19th, 2010**



- [Perforce Plugin](https://wiki.jenkins.io/display/JENKINS/Perforce+Plugin) 1.0.21


- **Feb 20th, 2010**



- [Monitoring](https://wiki.jenkins.io/display/JENKINS/Monitoring) 1.12.0


- **Feb 21st, 2010**



- [Hudson global-build-stats plugin](https://wiki.jenkins.io/display/JENKINS/Global+Build+Stats+Plugin) 0.1-alpha1

- [Hudson Gallio plugin](https://wiki.jenkins.io/display/JENKINS/Gallio+Plugin) 0.70

- [Hudson cppunit plugin](https://wiki.jenkins.io/display/JENKINS/CppUnit+Plugin) 1.2

- [Hudson Emma plugin](https://wiki.jenkins.io/display/JENKINS/Emma+Plugin) 1.12

- [Hudson Backup plugin](https://wiki.jenkins.io/display/JENKINS/Backup+Plugin) 1.4.1


- **Feb 23rd, 2010**



- [Hudson Sonar Plugin](https://wiki.jenkins.io/display/JENKINS/Sonar+Plugin) 1.3

- [Hudson Gradle plugin](https://wiki.jenkins.io/display/JENKINS/Gradle+Plugin) 1.3

- [Hudson Sectioned View Plugin](https://wiki.jenkins.io/display/JENKINS/Sectioned+View+Plugin) 1.10

- [Hudson xUnit plugin](https://wiki.jenkins.io/display/JENKINS/xUnit+Plugin) 0.6.1


- **Feb 24th, 2010**



- [Hudson Cpptest plugin](https://wiki.jenkins.io/display/JENKINS/Cpptest+Plugin) 0.3

- [Hudson SSH plugin](https://wiki.jenkins.io/display/JENKINS/SSH+plugin) 1.0

- [Hudson ClearCase UCM Baseline Plug-in](https://wiki.jenkins.io/display/JENKINS/ClearCase+UCM+Baseline+Plugin) 1.3


- **Feb 25th, 2010**



- [Hudson NAnt Plugin](https://wiki.jenkins.io/display/JENKINS/NAnt+Plugin) 1.3.1

- [Hudson Ivy plugin](https://wiki.jenkins.io/display/JENKINS/Ivy+Plugin) 1.1

- [Hudson Bazaar plugin](https://wiki.jenkins.io/display/JENKINS/Bazaar+Plugin) 1.4

- [Dimensions SCM plugin](https://wiki.jenkins.io/display/JENKINS/Dimensions+Plugin) 0.7.0


- [infrastructure](/blog/tags/infrastructure/)
- [feedback](/blog/tags/feedback/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Spotlight on: ITA Software [Anchor](\#spotlight-on-ita-software)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 11, 2010
[Tweet](https://twitter.com/intent/tweet?text=Spotlight+on%3A+ITA+Software&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F11%2Fspotlight-on-ita-software%2F)

For the first "User Spotlight" interview _ever_ on Continuous Blog, I am talking with Matt Girard of
[ITA Software](https://itasoftware.com/?continuousblog), a Boston-based software company that produces travel industry software which is used by many of the major carriers in the U.S. and abroad. When I sent out [a message](https://twitter.com/hudsonci/status/8553593409) asking for users of Hudson in the corporate space to ping me about doing a "spotlight" on them, ITA Software stuck out in particular; they’re hiring a Hudson expert!

[![355x210 TwitterArticle](https://placeholder.apture.com/ph/355x210_TwitterArticle/)](https://twitter.com/equalize/status/8338991375)

The format for the "spotlight" series isn’t entirely nailed down yet so feel free to ask questions in the comments section and I’ll follow-up with Matt after the fact if need be. That said, without further delay, Matt Girard from ITA Software, on Hudson.
\-\-\-

|     |     |
| --- | --- |
| **Hudson** | Matt, appreciate you taking the time to answer some questions about Hudson at ITA Software, let’s start with a simple one: How long has ITA been using Hudson? |
| **Matt** | My pleasure, glad to be a part of the community. We have been using Hudson in some form since early 2008. Predictably our usage has increased over time and now encompasses the majority of our automated build and test infrastructure. |
|  |
| **Hudson** | Was continuous integration a part of ITA’s workflow prior to adopting Hudson? If so: what did ITA switch to Hudson from, and why? |
| **Matt** | Yes, though not to the degree that we have now. Prior to Hudson we were reliant on [BuildBot](https://en.wikipedia.org/wiki/BuildBot) for our automated builds, but we were not doing continuous integration<br> across our components until after the transition to Hudson. The easy to understand UI and flexibility were primary features that compelled our switch. I should mention<br> that when we decided to switch we also evaluated [CruiseControl](https://en.wikipedia.org/wiki/CruiseControl) but Hudson came out on top for our needs. |
|  |
| **Hudson** | What kind of projects are you typically using Hudson for? What<br>languages/build system(s)? What platforms is Hudson performing builds? What kinds of jobs primarily run on ITA’s Hudson cluster? |
| **Matt** | Our Hudson environments (yes, we have more than one) have been optimized for building C++, Java (all [maven](https://en.wikipedia.org/wiki/Apache%20Maven) based), Lisp (a surprise to some to be sure [more about that here](https://itasoftware.com/careers/l_e_t_lisp.html?catid=8)), and Python on Linux build agents (Fedora and CentOS).<br>Our jobs are (loosely) grouped into one of three categories: rpm (we are primarily RedHat based), tests, and tools. The rpm jobs are the actual code builds and individual component unit tests. The test jobs (thank you [parameterized trigger plugin](https://plugins.jenkins.io/parameterized-trigger)!) are part of a larger cross-component integration testing and promotion scheme. The (handful of) tools jobs support us in tasks such as cleaning up stale sandbox database connections. |
|  |
| **Hudson** | Given the flexibility of Hudson, it’s safe to say that not everybody is using it in the exact same fashion, is there anything you would consider interesting or noteworthy about the use of Hudson at ITA? |
| **Matt** | I think that our most interesting usage of Hudson has to be how we have combined parameterized builds with the parameterized trigger plugin in order to do cross-component testing of trunk code. More specifically, we pass a properties file (to us a "scoreboard" that tells the jobs what exact revisions of which projects to<br> test together) to several jobs and only build a final promotion job if ALL of downstream jobs (with the same scoreboard) passed. In this way we create a hurdle that all of our code must clear before we even consider deploying it anywhere else.<br>The next most interesting thing we are doing is using Hudson for continuous _deployment_ of monitoring changes into our staging environment. It’s quite rewarding to watch a check-in makes it’s way through Hudson, into and rpm, and out to a server without a human being involved. |
|  |
| **Hudson** | Are there any additional tools ITA has written to better integrate things "behind the scenes"? |
| **Matt** | We evolved what became a very large build script (mostly derived from what we had for BuildBot) that handles all of the nitty-gritty details involved in the building, packaging, and testing of our software. Recently we have been working to refactor this into several smaller build tools each with a more focused purpose. The first of these is designed (largely as a wrapper to [rpmbuild](https://en.wikipedia.org/wiki/RPM%20Package%20Manager)) to standardize our package building while leaving the .spec files (with the real specifics) living alongside the code where they belong. |
|  |
| **Hudson** | On a scale from 1-10, how important would you rate Hudson for ITA’s<br>day-to-day workflow? |
| **Matt** | ITA is a decent size company and there is plenty of work that goes on that does not involve Hudson in any way. Still since we rely on the building and testing that Hudson does in order to promote new code to production, I would say that we are somewhere around an 8. |
|  |

* * *

I’d like to thank Matt again for being a good sport as the very first in what I hope will be a long line of "spotlights" on companies using Hudson to help them work smart, better and faster. If you would like to discuss your company’s use of Hudson for Continuous Blog, you can contact me at `tyler` at `linux.com`

* * *

**Editor’s Note:** Matt Girard is the Manager of Build and Integration at ITA Software and a passionate advocate for continuous integration and continuous deployment. He believes that release engineering exists to make developers lives easier — not harder — and can be found posting about such topics on Twitter as [@equalize](https://twitter.com/equalize).

- [general](/blog/tags/general/)
- [feedback](/blog/tags/feedback/)
- [interview](/blog/tags/interview/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Pre-JavaOne Hudson Meetup Redux [Anchor](\#pre-javaone-hudson-meetup-redux)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 20, 2010
[Tweet](https://twitter.com/intent/tweet?text=Pre-JavaOne+Hudson+Meetup+Redux&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F20%2Fpre-javaone-hudson-meetup-redux%2F)

Yesterday Digg was kind enough to host and "sponsor" (read: free drinks and
pizza!) a Hudson meetup at their offices in San Francisco. While Digg has been
the source of some controversy and press due to their recent redesign and corporate
shake-ups, as far as the Hudson community goes they’ve been largely responsible for
a [great case study on continuous deployment](https://about.digg.com/blog/continuous-deployment-code-review-and-pre-tested-commits-digg4) using Hudson and [Gerrit](https://code.google.com/p/gerrit).

image:https://farm5.static.flickr.com/4130/5005123971\_403f24733d.jpg

Attendees included all of InfraDNA (Kohsuke and Kedar), some folks from CloudBees, a
number of local users/developers like [LewisHam](https://twitter.com/LewisHam) and myself, and
to top off the list a couple Oracle employees including [Winston Prakash](https://twitter.com/wjprakash) who is now hacking on Hudson inside of Oracle.

As folks started arriving there was a lot of discussion around "Hudson at Scale", specifically
regarding Hudson "in the cloud". We also got to hear about one of the most interesting Hudson
use-cases I’ve ever seen by [Edward M. Goldberg](https://edwardmgoldberg.com) who I’ll post an
interview with shortly, imagine using Hudson with **thousands** of machines, it’s that interesting.

Through the afternoon there were a number of great discussions concerning Hudson stability,
engaging more of the community and nitty-gritty details regarding Hudson’s internals such
as the plugin API.

I’ve posted [photos from the event](https://www.flickr.com/photos/hudsonlabs/sets/72157624992088468/) on
Flickr for posterity in case you’re interested. Overall I’d judge the meetup to be a success, it was a
lot of fun and a great way to spend a Sunday with Hudson.

If you’re going to be at JavaOne, come track me down and let’s talk about Hudson, if you’re not in San Francisco for the event, you can always follow my updates on [Twitter](https://twitter.com/hudsonci) or hit up [Flickr](https://www.flickr.com/photos/hudsonlabs/sets/72157624996965000/)

- [general](/blog/tags/general/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson User Meet-up in Copenhagen/Oslo [Anchor](\#hudson-user-meet-up-in-copenhagen-oslo)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
August 29, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+User+Meet-up+in+Copenhagen%2FOslo&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F29%2Fhudson-user-meet-up-in-copenhagen-oslo%2F)

I’ll be in Copenhagen from 9/5-9/7 and in Oslo 9/8-9/9 to present in JavaZone. I’d like to take advantage of the opportunities and have user meet-up events in those cities. Depending on the number of participants, it could be just a drink in a bar, or a talk in a meeting room.

So if you are:

1. in those cities,

2. available in the evening of 9/6, 9/8, or 9/9, and

3. willing to attend such an event,


... then please [let me know.](mailto:kohsuke@infradna.com)

Also, if you have an office in those cities and willing to provide a space for an event, that would be extra appreciated!

- [general](/blog/tags/general/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# Live Blog: Kohsuke's Presentation at JavaOne [Anchor](\#live-blog-kohsukes-presentation-at-javaone)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 20, 2010
[Tweet](https://twitter.com/intent/tweet?text=Live+Blog%3A+Kohsuke%27s+Presentation+at+JavaOne&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F20%2Flive-blog-kohsukes-presentation-at-javaone%2F)

**Editor’s note:** _This is a **very** rough set of notes from [Kohsuke Kawaguchi’s](https://twitter.com/kohsukekawa) presentation at JavaOne 2010._

[![Kohsuke talks to a packed room at #JavaOne](https://farm5.static.flickr.com/4083/5008629375_6f603b6093_m.jpg)](https://www.flickr.com/photos/hudsonlabs/5008629375/)

Kohsuke takes the stage, asks "who uses’s Hudson" the majority of
audience raises their hands

Discussing the great ecosystem using Hudson across the wide-variety of platforms/languages.
330+ community written plugins. Last year at JavaOne we had 230+ plugins

Eclipse Community Survey, Hudson adoption from 9.1% in 2009 to 21.8%

Discussing Hudson adoption, going over Hudson job postings on indeed.com going up compared to a stagnant Cruise Control.

Kohsuke introduces himself and InfraDNA, started Hudson in 2004/2005.

First steps to CI, 10,000 foot overview of SCM monitoring/build/testing. Delving into using Hudson
for automating **everything** to get "more out of your Hudson deployment.

### "Interconnecting Jobs aka Workflows" [Anchor](\#interconnecting-jobs-aka-workflows)

Hudson allows for hosting many projects on one Hudson deployment, meaning you need a smaller number of administrators for a larger number of jobs compared to Cruise Control.

Building Block #1: Triggering. Using "upstream" and "downstream" jobs to interconnect jobs to form a workflow in Hudosn. Triggering is asynchronoys in Hudson, useful for separating builds and multiple test jobs. Splitting the build and test jobs so you build quickly test many tests in parallel.

Avoid recompiling compilation/builds in the "downstream" test runs. "Copy Artifact" plugin very useful for passing built executables to test jobs.

Upstream/downstream separation also highly useful for separating build and deployment into a continuous workflow.

Building Block #2: Join plugin. Fan downstream jobs out and then bring everything back together for final
steps.

Shows Join plugin configuration screen because "perhaps the configuration is a little unintuitive".

Building block #3: Fingerprints. Using MD5 checksums from artifacts to learn more about those artifacts in your
Hudson, tying together artifacts from different jobs/builds. Letting Hudson recording these fingerprints of those artifacts in your lifecycle allows Hudson to help you find out where/when those executables came from.

Fingerprinting mechanism good for tracking dependencies from third parties, Hudson uses 3rd party fingerprints to compute additional information. Also useful for aggregating reports.

Going a bit further using the "build promotion plugin" to weed out which builds are "better than others." Taking fingerprints from a build job all the way through the life cycle and passing that fingerprint around test/smoke test jobs, if that passes, build passes on to more rigorous testing, only if it’s passed base-level testing. Basic model of promotion maps to a "confidence level", 1st level passes compilation, 2nd level passes smoke test, 3rd level passes expensive/time-consuming tests.

One of the reasons to use promotion in your lifecycle to ensure that artifacts meet a minimum "confidence level" so you’re not expending resources running the longer tests )think about a promotion hierarchy)

**Demo time!**

Kohsuke demoing build promotion live with fingerprinting of sample jar files. Creating a "component-X" build and a "test-X" build. test-X job using the "Copy Artifact" plugin to grab artifacts from the component-X build.

Defining the promotion criteria in "component-X", "test-X" promoted, indicates that certain builds promoted a build.

**End demo time!**

### Maven Integration [Anchor](\#maven-integration)

Maven integration highlights. Going over POM comprehension and simplified configuration due to more information
getting inferred from the POMs. Building dependency chains with Maven integration.

"That’s the basics, let’s talk about advanced integration with Maven"

Parallel-module builds! Letting Hudson builds modules with a single checkbox, meaning wherever possible Hudson will try to build your modules in parallel when possible.

Incremental builds! Only building changed modules in a build run to be more efficient, preventing the need to rebuild the whole project from scratch every time. Hudson’s SCM integration to determine what the mapping between files changed and modules needing to be built.

Private Maven repositories! Avoiding artifacts being overwritten by others, telling Hudson to create a Maven repository **per-project** (at the expense of more bandwidth/disk space needed), helps segregate builds to avoid them stomping on each other.

After-the-fact deployment, avoiding deploying modules unless the whole build is successful (all modules properly built). Instead of using `mvn deploy`, you tell Hudson to deploy to your Maven repository with a single checkbox.

### Matrix Project [Anchor](\#matrix-project)

No longer alpha! Production-ready!

Often used to build/test across slight variations of build environments such as different platforms for a C++ project. Conceptually it’s like running your build in a for loop.

Hudson supports a number of different axes, most popular of which being a "agent axis" which allows you to use different labels or specific agents for the build. Hudson also supports arbitrary text fields as axes to be passed along to the build steps as environment variables.

Touching on "filtering" in the matrix project support to remove parts of an axis that you do not need. I.e if you have a "platform" and a "browser" axes for web testing, you can exclude the "iexplore" value of the "browser" axis when the "platform" axis is "mac".

**Demo time!**

Defining two axes, "agent" axis and the "JDK" axis to build against different JDK versions on linux, solaris and windows. Excluding "touchstone builds" to avoid rebuilding a large number of matrix builds unless a limited subset of the combinations successfully build. Used to avoid spending a lot of time spinning cycles on very obvious errors that the first few builds "recognize" immediately.

**End demo time**

### Doing Selenium testing on Hudson [Anchor](\#doing-selenium-testing-on-hudson)

Use "Selenium Grid plugin" to install Selenium binaries on all agents and prepares them all to talk to each other. Useful for "overloading" an existing Hudson cluster as a Selenium cluster.

Using labels in Hudson to better determine which node has which browser.

Selenium integration is **very** powerful when combined with the join plugin and the matrix configuration support in Hudson for web testing across a large number of platforms and browsers.

The Hudson project has invested heavily in getting great cluster support which helps tremendously with Selenium which has invested as heavily in clustering.

How to you deal with Selenium needing a GUI while Hudson agents are largely headless. Use the Xvnc plugin! On Windows things are bit trickier, easier to let Hudson agent/service "interact with desktop" such that it can access dialogs/etc. Failing everything else, configuring Windows for auto-login and then have JNLP agents autostart at login will work for allowing the agent to use the GUI and network resources.

The rest of the session was dedicated to some good Q&A. Great session by Hudson’s founder.

- [general](/blog/tags/general/)
- [javaone](/blog/tags/javaone/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Copenhagen Hudson User Meetup [Anchor](\#copenhagen-hudson-user-meetup)

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
September 1, 2010
[Tweet](https://twitter.com/intent/tweet?text=Copenhagen+Hudson+User+Meetup&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F01%2Fcopenhagen-hudson-user-meetup%2F)

![image](https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Kopenhagen_Innenstadt.JPG/280px-Kopenhagen_Innenstadt.JPG)September is turning into a meetup month for the Hudson community. In parallel to [the meetup in Oslo](https://hudson-labs.org/content/hudson-javazone-meetup-oslo) and [the meetup in JavaOne](https://hudson-labs.org/content/pre-javaone-hudson-meetup), [Nokia](https://www.nokia.com/) and [InfraDNA](https://infradna.com/) are hosting a meetup in Copenhagen on September 6th, Monday. Read on for the details.

The current tentative plan is to do a short "state of the union / what’s new" kind of presentation, then use the rest of the time for open mic Q&A, but if you have other ideas, or better yet if you want to do some talks, please let me know. I think the event will be fun.

If you plan on coming, please [drop me a note](mailto:event@infradna.com), so that we can get some sense of the attendance.

- **When:** September 6th, 18:30

- **Where:** Auditorium 1, Nokia Denmark A/S, København ( [map](https://maps.google.dk/maps?f=q&source=s_q&hl=da&geocode=&q=Nokia+Danmark+A/S,+K%C3%B8benhavn&sll=55.869147,11.228027&sspn=9.259564,26.367188&ie=UTF8&hq=Nokia+Danmark+A/S,&hnear=K%C3%B8benhavn&t=h&ll=55.649606,12.541698&spn=0.000284,0.000805&z=21))

- Food will be provided.


- [general](/blog/tags/general/)
- [meetup](/blog/tags/meetup/)

## About the author [Anchor](\#about-the-author-1)

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# HudsonMobi dons a black turtleneck and jumps to iOS4 [Anchor](\#hudsonmobi-dons-a-black-turtleneck-and-jumps-to-ios4)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 5, 2010
[Tweet](https://twitter.com/intent/tweet?text=HudsonMobi+dons+a+black+turtleneck+and+jumps+to+iOS4&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F05%2Fhudsonmobi-dons-a-black-turtleneck-and-jumps-to-ios4%2F)

[![HudsonMobi in the Appstore](/sites/default/files/hudson-mobi-appstore1.png)](https://hudsonmobi.wordpress.com/2010/09/04/hudsonmobi-for-ios-4-is-here/)

Last time I [talked about HudsonMobi 2.0](/content/hudsonmobi-20-hits-android-market) there were some hiccups with the QR code which [made me pretty irritated](https://twitter.com/hudsonci/status/21335228733). Now the leading mobile app for Hudson users has regained my trust with their [latest release for iOS 4](https://hudsonmobi.wordpress.com/2010/09/04/hudsonmobi-for-ios-4-is-here/), the latest incarnation of Apple’s mobile operating systems for iPhones and iPod Touches.

Since I fall into the category of subhumans who for one reason or another choose not to own an iPhone, I can’t verify the awesomeness of this new HudsonMobi release. If it is anything like the 2.0 release for Android you can expect enhancements such as:

- Tighter integration with iOS 4

- **Embedded artifact viewer!** For archived build artifacts that are text-based, you can view them directly on your handset.

- Access to the build history and changes for a job.

- Quick and easy access to a job’s last build


If you own a device with iOS **3.0 or higher** you should be able to download HudsonMobi 2.0 from the appstore, if you give it a whirl, please leave a comment to let me know how awesome it is :)

\-\-\-

- [general](/blog/tags/general/)
- [news](/blog/tags/news/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# JavaOne taking shape [Anchor](\#javaone-taking-shape)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 17, 2010
[Tweet](https://twitter.com/intent/tweet?text=JavaOne+taking+shape&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F17%2Fjavaone-taking-shape%2F)

Last night on my way out of San Francisco I stopped by 4th and Howard St to get my first taste of JavaOne/Oracle OpenWorld which was already taking shape at the location. Besides snapping the photo below, I also managed to get yelled out by an old woman wearing a red "security" jacket; suffice to say my JavaOne experience is already everything I expected!

image:https://farm5.static.flickr.com/4107/4997929716\_1675745efe.jpg

Unlike last year’s Oracle OpenWorld, which also shut down this segment of Howard St in San Francisco and took over the adjacent Yerba Buena Gardens, this event will be crammed together with JavaOne. [![20100917_003.jpg](https://farm5.static.flickr.com/4084/4998934102_d7c71e575e_m.jpg)](https://www.flickr.com/photos/agentdero/4998934102/)

At this point I’m not sure what I can expect as far as the JavaOne portion of the event goes, we do have **two** Hudson related events scheduled:

- **Getting More Out of Your Hudson** \- Monday at 10:00 a.m. - Hosted by our very own [Kohsuke Kawaguchi](https://twitter.com/kohsukekawa), the session will be 60 minutes at Parc 55, Embarcadero.

- **Getting More from Your CI Server: Taking Hudson to the Next Level** \- Tuesday at 9:30 a.m. - Hosted by the (in)famous [John Smart](https://twitter.com/wakeleo) the session will also be 60 minutes at Parc 55, Cyril Magnin 1.


[![20100917_004.jpg](https://farm5.static.flickr.com/4132/4998330661_91514f797a_m.jpg)](https://www.flickr.com/photos/agentdero/4998330661/)

Unfortunately those were the only specifically-Hudson related tracks I could find, as [Andrew Bayer](https://twitter.com/abayer) has [mentioned before](https://twitter.com/abayer/status/24507253586), finding a proper schedule is near impossible. While at JavaOne, I intend on posting updates, pictures and maybe a little scathing commentary (they did give me a blogger pass for some silly reason).

If you’re going to be at JavaOne, [think about coming and talking to me](/content/lets-talk-about-hudson-javaone) about how you/your company uses Hudson. I might just have stickers!

* * *

- [general](/blog/tags/general/)
- [javaone](/blog/tags/javaone/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hosting your Hudson plugin at Github [Anchor](\#hosting-your-hudson-plugin-at-github)

[Andrew Bayer](/blog/authors/abayer/)
July 28, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hosting+your+Hudson+plugin+at+Github&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F28%2Fhosting-your-hudson-plugin-at-github%2F)

For as long as Hudson’s had a plugin model and development community, we’ve provided [source code and binary hosting](https://wiki.jenkins.io/display/JENKINS/Hosting+Plugins) through our Subversion repo at [java.net](https://java.net). But what if you’re a plugin developer and you don’t want to use Subversion? Well, we have an alternative for your source code: host it with [Hudson on GitHub](https://github.com/hudson).

![Octocat!](/sites/default/files/octocat.png)

To get this in place, send an email to [dev@hudson.dev.java.net](https://wiki.jenkins.io/display/JENKINS/Mailing+List) (or ask in [the IRC channel](https://wiki.jenkins.io/display/JENKINS/IRC+Channel)) asking to get a repository created for your plugin at Github. Make sure to include the name of the plugin and your Github username (and the Github usernames of any other developers who’ll be pushing to your plugin’s repo). If your plugin is already in Github, include the URL for the existing repo so that we can fork it. One of the Hudson admins will create the repository (forking if appropriate) and add the user(s) to the list of users with push access to the Hudson-hosted repositories at Github. Once you hear back from them, you’ll be able to push code to the new repository.

You will need to make a few changes to your plugin’s POM, as compared to what works for a plugin POM in the java.net Subversion tree.

**First**, add the following to the `++` section:

```
<plugin>
  <groupid>org.apache.maven.plugins</groupid>
  <artifactid>maven-release-plugin</artifactid>
  <version>2.0</version>
  <dependencies>
    <dependency>
      <groupid>org.apache.maven.scm</groupid>
      <artifactid>maven-scm-provider-gitexe</artifactid>
      <version>1.3</version>
    </dependency>
  </dependencies>
</plugin>
```

This is needed to make sure we’re overriding the parent POM’s SCM provider settings. Next, add the following to the `++` section:

```
<extensions>
  <extension>
    <groupid>org.jvnet.wagon-svn</groupid>
    <artifactid>wagon-svn</artifactid>
    <version>1.9</version>
  </extension>
</extensions>
```

This is needed because we’re still going to be using wagon-svn to deploy the artifacts in the release process. Lastly, add an `` ` section, within the ` `` section of the POM, like the following:

```
<scm>
  <connection>scm:git:git://github.com/hudson/your-plugin-repo.git</connection>
  <developerconnection>scm:git:git@github.com:hudson/your-plugin-repo.git</developerconnection>
  <url>https://github.com/hudson/your-plugin-repo</url>
</scm>
```

As with the first section, this is needed to override the default SCM settings in the parent POM. Make sure to change "your-plugin-repo" to your actual plugin repository name, of course! It’d also be a good idea to put a link to your Github repo on your plugin’s wiki page at [the Hudson wiki](https://wiki.jenkins.io), since the default source link will go to Subversion.

Now, with these changes in place, committed and pushed to the master branch in your plugin’s repository, you should be able to run "mvn release:prepare release:perform" just as you would if the plugin were hosted in Subversion, with your plugin showing up in the Update Center within a few hours. Be sure that you’ve configured the login information for the java.net Maven repository, as detailed [here](https://javanettasks.dev.java.net/nonav/maven/config.html) \- this is still needed for plugins hosted at and released from Github, since Hudson’s Maven repository still lives at java.net. If you run into any issues releasing your plugin from Github, first be sure to review the [wiki page on plugin hosting](https://wiki.jenkins.io/display/JENKINS/Hosting+Plugins), which addresses many of the issues you may encounter when running the Maven release plugin.

If you’re still stumped, feel free to email [the Hudson developer list](https://wiki.jenkins.io/display/JENKINS/Mailing+List) or ask in [the IRC channel](https://wiki.jenkins.io/display/JENKINS/IRC+Channel) for help.

- [development](/blog/tags/development/)
- [meta](/blog/tags/meta/)
- [plugins](/blog/tags/plugins/)
- [tutorial](/blog/tags/tutorial/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

[Andrew Bayer](/blog/authors/abayer/)

Andrew was a core committer to Hudson and the author of numerous plugins.

- [GitHub](https://github.com/abayer)
- [Twitter](https://twitter.com/abayer)[Back to blog](/blog/)

# Spotlight on: VisFleet [Anchor](\#spotlight-on-visfleet)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 18, 2010
[Tweet](https://twitter.com/intent/tweet?text=Spotlight+on%3A+VisFleet&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F18%2Fspotlight-on-visfleet%2F)

For this week’s user spotlight, I’m talking to Rasheed Abdul-Aziz of
VisFleet Ltd. out of New Zealand. This being our second "spotlight" on a particular company, the format can still be considered _beta_; if you have any additional questions for Rasheed, feel free to ask them in the comments and I’ll try to get Rasheed to answer.

Similar to the spotlight on ITA Software from last week, VisFleet builds business software helping their customers operate their businesses more effectively through web applications in tandem with mobile applications. While I could endlessly discuss the power and flexibility of Hudson, particularly for building web software, I’ll let Rasheed do the majority of the talking, so let’s get to it.
introducing [VisFleet](https://twitter.com/visfleet), would you mind explaining a bit more of what you guys do and some of the challenges it presents?

**Rasheed** It’s a pleasure. VisFleet has changed it’s direction somewhat, moving from
services into product development. As we move into product, we want to be
responsive to our customers. Agile development is becoming core to how we
operate, and as such, continuous builds and integration became a major
factor. We now plan to offer two products for work planning and and vehicle
tracking. We want to present these systems with a SaaS model. The world of
online, pay as you go software, has a culture of frequent improvements and
responsiveness to user feedback. If we want to do well in this space, it’s
important that we can code, test, release and feed back in
tight iterations.

**Hudson** How long has VisFleet been using Hudson?

**Rasheed** About 14 months now.

**Hudson** Did you guys work with continuous integration prior to starting to use
Hudson? If so, what system was VisFleet using and what compelled the switch
to
Hudson?

**Rasheed** We didn’t actually, but certainly everyone I knew who was doing continuous
integration recommended Hudson.

**Hudson** That’s good to hear! How lucky you are to know so many smart people :)

What kinds of projects is VisFleet building with Hudson?

**Rasheed** We build and test Ruby On Rails service layer applications. We also build [Flex](https://en.wikipedia.org/wiki/Adobe%20Flex) applications using the Flex SDK for our web-deployed RIA offering. Lastly, we build our iPhone applications using Hudson.

**Hudson** I’d say building and testing web applications alone with Hudson would be quite notable, but to add Flex and iPhone applications into the mix as well is certainly interesting! Anything specific that’s interesting about VisFleet’s use of Hudson?

**Rasheed** It runs multiple agent types, and automates deploys to different cloud
infrastructures. At the moment we have 2 Flex build agents running Ubuntu, A
Mac Mini building our iPhone app, and several Ubuntu Servers testing our web
tier. We currently deploy to Citrix Xen servers, and soon to [Rackspace Cloud](https://twitter.com/RackCloud) as well.

In the near future, we will automate integration by first updating an
integration system on the cloud, deploying our system and then running our
tests. All very quickly.

We have very little metric and reporting output from Hudson, and this is
noteworthy in it’s absence. It’s very important to use to provide clear
development metrics and integrate those into our [Scrum](https://en.wikipedia.org/wiki/Scrum%20%28development%29)/ [Kanban](https://en.wikipedia.org/wiki/Kanban) approach. What
Hudson has done for us is educate us about the possibilities in
visualisation and reporting, and is informing the way we structure our
codebase going forward. Soon, we expect to have a premium test driven
development environment and workflow.

**Hudson** We all know Hudson isn’t perfect but there’s a lot of room for extending it to meet your demands if need be, what additional tools have you written to glue everything together behind
the scenes?

**Rasheed** We are using ' [Vlad the Deployer](https://rubyhitsquad.com/Vlad_the_Deployer.html)' and in legacy, ' [Capistrano](https://www.capify.org/)' for a lot of
our deployment and build tasks. These are merely infrastructure specific
scripts to ensure we can bring up live environments in the shortest amount
of time possible.

**Hudson** So it sounds like you guys are all on board with Hudson, on a 1-10 scale, how important would you rate Hudson’s importance to VisFleet’s workflow?

**Rasheed** 7, aiming at 10. The missing points are just a matter of time :)

* * *

Thanks again to Rasheed for chatting with me about how Hudson helps VisFleet keep cranking on what they do best. If you would like to discuss your company’s use of Hudson for Continuous Blog, you can contact me at `tyler` at `linux.com`

* * *

**Editor’s Note:** Rasheed Abdul-Aziz is a Software Architect at VisFleet Ltd. Rasheed specializes in Flex RIA development, but also loves a good build script and manages Hudson for VisFleet. Find out more about VisFleet and Rasheed on the [VisFleet devblog](https://devblog.visfleet.com/) and [Rasheed’s blog](https://squeedee.tumblr.com)

- [general](/blog/tags/general/)
- [feedback](/blog/tags/feedback/)
- [interview](/blog/tags/interview/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)![](https://www.jenkins.io/images/logos/jenkins/jenkins.svg)

# Jenkins

**Build great things at any scale**

The leading open source automation server, Jenkins provides
hundreds of plugins to support building, deploying and automating
any project.

[Download](https://www.jenkins.io/download/) [Documentation](https://www.jenkins.io/doc/)

[![](https://www.jenkins.io/images/post-images/2024/10/04/content-security-policy-grant.png)](https://www.jenkins.io/blog/2024/10/04/content-security-policy-grant/)

[**Alpha Omega Foundation Content Security Policy Grant**\\
\\
Alpha Omega Foundation has provided a grant to Jenkins to improve the implementation of Content Security Policy. Read more about what this means for the Jenkins project.](https://www.jenkins.io/blog/2024/10/04/content-security-policy-grant/)

[More info](https://www.jenkins.io/blog/2024/10/04/content-security-policy-grant/)

[![](https://www.jenkins.io/images/governance/elections/2024/2024-candidate-statements-opengraph.svg)](https://www.jenkins.io/blog/2024/10/03/jenkins-election-candidates/)

[**Jenkins Elections 2024 Voting is now open!**\\
\\
Voting for 2024 Jenkins governance board elections is now open until November 31, 2024. Read the candidate statements to learn what they hope to bring to the project and what Jenkins means to them.](https://www.jenkins.io/blog/2024/10/03/jenkins-election-candidates/)

[Read the candidate statements here!](https://www.jenkins.io/blog/2024/09/25/board-officer-election-announcement/)

[![](https://www.jenkins.io/images/post-images/2024/9_Most_Innovative_DevOps_Open_Source_Project.png)](https://devopsdozen.com/devops-dozen-2023-community-award-winners/)

[**Jenkins wins DevOps Dozen award**\\
\\
Jenkins has been awarded the "Most innovative DevOps Open Source project" distinction by DevOps Dozen.](https://devopsdozen.com/devops-dozen-2023-community-award-winners/)

[More info](https://devopsdozen.com/devops-dozen-2023-community-award-winners/)

[![](https://www.jenkins.io/images/logos/jenkins/jenkins.png)](https://contributors.jenkins.io/)

[**Meet the driving forces**\\
\\
behind Jenkins as we showcase the top contributors shaping the future of continuous integration and delivery.](https://contributors.jenkins.io/)

[More info](https://contributors.jenkins.io/)

[![](https://www.jenkins.io/images/post-images/jenkins-is-the-way/jenkins-is-the-way.png)](https://stories.jenkins.io/)

[**Jenkins Stories!**\\
\\
We are looking for experiences of Jenkins users from around the world showcasing how they are building, deploying, and automating great software with Jenkins. Check out their user stories and share yours](https://stories.jenkins.io/)

[More info](https://stories.jenkins.io/)

[![](https://www.jenkins.io/images/logos/needs-you/Jenkins_Needs_You-transparent.png)](https://www.jenkins.io/participate/)

[**Participate and Contribute!**\\
\\
Jenkins is a community-driven project. We invite everyone to join us and move it forward. Any contribution matters: code, documentation, localization, blog posts, artwork, meetups, and anything else. If you have five minutes or a few hours, you can help!](https://www.jenkins.io/participate/)

[More info](https://www.jenkins.io/participate/)

##### Continuous Integration and Continuous Delivery

As an extensible automation server, Jenkins can be used as a simple
CI server or turned into the continuous delivery hub for any project.

##### Easy installation

Jenkins is a self-contained Java-based program, ready to run
out-of-the-box, with packages for Windows, Linux, macOS and other
Unix-like operating systems.

##### Easy configuration

Jenkins can be easily set up and configured via its web interface,
which includes on-the-fly error checks and built-in help.

##### Plugins

With hundreds of plugins in the Update Center, Jenkins integrates
with practically every tool in the continuous integration and
continuous delivery toolchain.

##### Extensible

Jenkins can be extended via its plugin architecture, providing
nearly infinite possibilities for what Jenkins can do.

##### Distributed

Jenkins can easily distribute work across multiple machines,
helping drive builds, tests and deployments across multiple
platforms faster.

Jenkins is the Way to build, test, and deploy - YouTube

Jenkins

5.29K subscribers

[Jenkins is the Way to build, test, and deploy](https://www.youtube.com/watch?v=_MXtbjwsz3A)

Jenkins

Search

Watch later

Share

Copy link

Info

Shopping

Tap to unmute

If playback doesn't begin shortly, try restarting your device.

Full screen is unavailable. [Learn More](https://support.google.com/youtube/answer/6276924)

More videos

## More videos

You're signed out

Videos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.

CancelConfirm

Share

Include playlist

An error occurred while retrieving sharing information. Please try again later.

[Watch on](https://www.youtube.com/watch?v=_MXtbjwsz3A&embeds_referring_euri=https%3A%2F%2Fwww.jenkins.io%2F)

0:00

0:00 / 1:32•Live

•

[Watch on YouTube](https://www.youtube.com/watch?v=_MXtbjwsz3A "Watch on YouTube")

## Recent posts

- [![New Update Center (updates.jenkins.io) Architecture in Production:  18 November 2024](https://www.jenkins.io/images/post-images/2023/01/12/jenkins-newsletter/infrastructure.png)\\
**New Update Center (updates.jenkins.io) Architecture in Production:  18 November 2024**\\
\\
Summary (TL;DR)\\
\\
Note: this is a follow up of the 07 and 08 November 2024 24-hour brownout.\\
\\
The service https://updates.jenkins.io will switch its implementation to the new system, on Monday 18 November 2024 at 09:00 am UTC.\\
\\
All Jenkins users are impacted but should not see any functional change.\\
\\
⚠️ Please check that your organization respects the advertised DNS TTL or you might be...](https://www.jenkins.io/blog/2024/11/16/new-update-center/)


[![Damien DUPORTAL](https://www.jenkins.io/images/avatars/dduportal.jpg)\\
Damien DUPORTAL](https://www.jenkins.io/blog/authors/dduportal/) [![Stéphane Merle](https://www.jenkins.io/images/avatars/smerle33.png)\\
Stéphane Merle](https://www.jenkins.io/blog/authors/smerle33/)
November 16, 2024

- [![Jenkins' Participation in Hacktoberfest 2024](https://www.jenkins.io/images/hacktoberfest/hacktoberfest_2024_social.jpg)\\
**Jenkins' Participation in Hacktoberfest 2024**\\
\\
The Jenkins community is pleased to have participated in this year’s Hacktoberfest, an event focused on fostering open-source contributions and welcoming new contributors to our ecosystem.\\
\\
As Hacktoberfest 2024 has come to a close, we’re happy to reflect on the community’s participation:\\
\\
Jenkins’ Contribution to Hacktoberfest\\
\\
This year, we saw an increase in community engagement, with contributions including 1,174 pull requests across the...](https://www.jenkins.io/blog/2024/11/13/hacktoberfest/)


[![Bruno Verachten](https://www.jenkins.io/images/avatars/gounthar.png)\\
Bruno Verachten](https://www.jenkins.io/blog/authors/gounthar/)
November 13, 2024

- [![Brownout on Update Center (updates.jenkins.io):  07 and 08 November 2024](https://www.jenkins.io/images/post-images/2023/01/12/jenkins-newsletter/infrastructure.png)\\
**Brownout on Update Center (updates.jenkins.io):  07 and 08 November 2024**\\
\\
Summary (TL;DR)\\
\\
Note: this is a follow up of the 24 and 25 October 2024 24 hours brownout.\\
\\
The service https://updates.jenkins.io will switch its implementation to a new system during 1 day:\\
\\
From Thursday 7 November 2024 09:00 am UTC until Friday 8 November 2024 09:00 am UTC\\
\\
All Jenkins users are impacted but should not see any functional change.\\
\\
⚠️ Please check that your...](https://www.jenkins.io/blog/2024/11/07/update-center-brownouts-6/)


[![Stéphane Merle](https://www.jenkins.io/images/avatars/smerle33.png)\\
Stéphane Merle](https://www.jenkins.io/blog/authors/smerle33/)
November 7, 2024

- [![Advancing Security: Jenkins Content Security Policy (CSP) Project Progress](https://www.jenkins.io/images/post-images/2024/11/01/2024-11-01-jenkins-csp-project-update/opengraph.png)\\
**Advancing Security: Jenkins Content Security Policy (CSP) Project Progress**\\
\\
Security is a core focus at Jenkins, and through the Content Security Policy (CSP) grant from the Alpha-Omega Foundation, we’re reinforcing our commitment to the stability and safety of our community.\\
After weeks of progress, collaboration, and technical challenges, it’s time to share where we are and what’s next.\\
\\
Why CSP Matters\\
\\
With Jenkins as a crucial tool for thousands worldwide, securing its...](https://www.jenkins.io/blog/2024/11/01/jenkins-csp-project-update/)


[![Bruno Verachten](https://www.jenkins.io/images/avatars/gounthar.png)\\
Bruno Verachten](https://www.jenkins.io/blog/authors/gounthar/)
November 1, 2024

- [![Revamping Jenkins Tutorials: A Journey to Simplicity and Inclusivity](https://www.jenkins.io/images/post-images/2024/10/25/2024-10-25-jenkins-tutorial-revamp/opengraph.png)\\
**Revamping Jenkins Tutorials: A Journey to Simplicity and Inclusivity**\\
\\
Introduction: Transforming Jenkins tutorials\\
\\
Technical tutorials often present challenges to developers, particularly when learning complex systems like Jenkins.\\
The existing Jenkins tutorials, while comprehensive, had become a significant barrier to entry for many developers, especially those new to continuous integration and deployment.\\
\\
During the Open Source Summit Europe 2024, the Continuous Delivery Foundation (CDF) organized a mini summit.\\
The CFP committee accepted our presentation...](https://www.jenkins.io/blog/2024/10/25/jenkins-tutorial-revamp/)


[![Bruno Verachten](https://www.jenkins.io/images/avatars/gounthar.png)\\
Bruno Verachten](https://www.jenkins.io/blog/authors/gounthar/)
October 25, 2024

- [![Brownout on Update Center (updates.jenkins.io):  24 and 25 October 2024](https://www.jenkins.io/images/post-images/2023/01/12/jenkins-newsletter/infrastructure.png)\\
**Brownout on Update Center (updates.jenkins.io):  24 and 25 October 2024**\\
\\
Summary (TL;DR)\\
\\
Note: this is a follow up of the 26 and 27 September 24 hours brownout.\\
\\
The service https://updates.jenkins.io will switch its implementation to a new system during 1 day:\\
\\
From Thursday 24 October 2024 from 10:00am UTC until Friday 25 October 2024 10:00am UTC\\
\\
All Jenkins users are impacted but should not see any functional change.\\
\\
⚠️ Please, check that your organization respects...](https://www.jenkins.io/blog/2024/10/24/update-center-brownouts-5/)


[![Damien DUPORTAL](https://www.jenkins.io/images/avatars/dduportal.jpg)\\
Damien DUPORTAL](https://www.jenkins.io/blog/authors/dduportal/)
October 24, 2024

- [![Alpha Omega Foundation Content Security Policy Grant](https://www.jenkins.io/images/post-images/2024/10/04/content-security-policy-grant.png)\\
**Alpha Omega Foundation Content Security Policy Grant**\\
\\
Alpha-Omega has provided a grant for three months of full-time work to improve the Jenkins implementation of Content Security Policy.\\
The improvements will be implemented in October, November, and December of 2024.\\
Shlomo Dahan is implementing the improvements with technical guidance from Basil Crow and project management support from Bruno Verachten.\\
\\
Alpha-Omega is an associated project of the OpenSSF, established in February 2022,...](https://www.jenkins.io/blog/2024/10/04/content-security-policy-grant/)


[![Mark Waite](https://www.jenkins.io/images/avatars/markewaite.jpg)\\
Mark Waite](https://www.jenkins.io/blog/authors/markewaite/)
October 4, 2024

- [![2024 Jenkins Election Candidate Statements](https://www.jenkins.io/images/governance/elections/2024/2024-candidate-statements-opengraph.svg)\\
**2024 Jenkins Election Candidate Statements**\\
\\
Candidate nominations for the 2024 Jenkins elections are now complete.\\
Thanks to everyone who submitted nominations and to the candidates that have accepted the nominations.\\
\\
Register to vote\\
\\
Voters must register an account on the Jenkins community forums and must have made at least one contribution to Jenkins before September 1, 2024.\\
You can use an existing GitHub account or create a new account...](https://www.jenkins.io/blog/2024/10/03/jenkins-election-candidates/)


[Basil Crow](https://www.jenkins.io/blog/authors/basil/) [![Mark Waite](https://www.jenkins.io/images/avatars/markewaite.jpg)\\
Mark Waite](https://www.jenkins.io/blog/authors/markewaite/) [![Valentin Delaye](https://www.jenkins.io/images/avatars/jonesbusy.png)\\
Valentin Delaye](https://www.jenkins.io/blog/authors/jonesbusy/) [![Kris Stern](https://www.jenkins.io/images/avatars/krisstern.png)\\
Kris Stern](https://www.jenkins.io/blog/authors/krisstern/) [![Alexander Brandes](https://www.jenkins.io/images/avatars/notmyfault.jpeg)\\
Alexander Brandes](https://www.jenkins.io/blog/authors/notmyfault/) [![Oleg Nenashev](https://www.jenkins.io/images/avatars/oleg_nenashev.png)\\
Oleg Nenashev](https://www.jenkins.io/blog/authors/oleg_nenashev/) [![Alex Earl](https://www.jenkins.io/images/avatars/slide_o_mix.jpg)\\
Alex Earl](https://www.jenkins.io/blog/authors/slide_o_mix/) [![Stefan Spieker](https://www.jenkins.io/images/avatars/stefan_spieker.png)\\
Stefan Spieker](https://www.jenkins.io/blog/authors/stefan_spieker/) [![Tim Jacomb](https://www.jenkins.io/images/avatars/timja.jpg)\\
Tim Jacomb](https://www.jenkins.io/blog/authors/timja/)
October 3, 2024

- [![Hacktoberfest 2024](https://www.jenkins.io/images/hacktoberfest/hacktoberfest_2024_social.jpg)\\
**Hacktoberfest 2024**\\
\\
Hacktoberfest is back!\\
Join us as we celebrate and support open-source during October.\\
Contributors can earn badges and improve their open source contribution skills.\\
\\
The Jenkins community will participate once again in the event.\\
We invite you to contribute to Jenkins projects but also, as maintainers, to welcome and help newcomers.\\
\\
Contributors\\
\\
This is what contributors need to know to participate and complete Hacktoberfest:\\
\\
Register anytime between...](https://www.jenkins.io/blog/2024/09/30/hacktoberfest/)


[![Mark Waite](https://www.jenkins.io/images/avatars/markewaite.jpg)\\
Mark Waite](https://www.jenkins.io/blog/authors/markewaite/)
September 30, 2024


We thank the following organizations for their major commitments to
support the Jenkins project.

- [CD.Foundation\_LogoMaster](https://cd.foundation/)

We thank the following organizations for their support of the Jenkins
project through free and/or open source licensing programs.

- [Atlassian](https://atlassian.com/)
- [Datadog](https://www.datadoghq.com/)
- [DigitalOcean](https://www.digitalocean.com/)
- [Discourse](https://www.discourse.org/)
- [Fastly](https://www.fastly.com/)
- [IBM](https://www.ibm.com/)
- [Netlify](https://www.netlify.com/)
- [PagerDuty](https://pagerduty.com/)
- [Sentry](https://sentry.io/)
- [Tsinghua University](https://www.tsinghua.edu.cn/)
- [XMission](https://xmission.com/)
- [Belnet](https://belnet.be/)
- [RWTH Aachen University](https://www.rwth-aachen.de/)
- [Hostico](https://hostico.ro/)
- [FreeDif](http://freedif.org/)
- [Servana](https://servanamanaged.com/)
- [Yamagata University](https://www.yamagata-u.ac.jp/en/)[Back to blog](/blog/)

# Call for Testers: The older the better [Anchor](\#call-for-testers-the-older-the-better)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 2, 2010
[Tweet](https://twitter.com/intent/tweet?text=Call+for+Testers%3A+The+older+the+better&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F02%2Fcall-for-testers-the-older-the-better%2F)

A couple weeks ago in the [post outlining the release of Hudson 1.347](/content/hudson-1347-released/) I mentioned that Alan Harder (a.k.a. mindless) had undertaken a deprecation-crusade; that is to say Alan has taken it upon himself to rid Hudson’s code-base, particularly in the plugin area, of older code. One of Alan’s branches `old-data-monitor` was merged into trunk with `r28147` bringing with it some changes to help migrate older plugin datasets to newer formats.

When I reached out to Alan earlier today on IRC ( `#hudson` on the [Freenode](https://en.wikipedia.org/wiki/Freenode)) about the subject he agreed that polling the community for beta testers would be a good idea; **this is where _you_ come in**. Per Alan’s message to the `dev@` mailing list:

> Visit your "Manage Hudson" screen to see if the notice about old/unreadable data appears. I’ll be curious to see which of the old deprecated data structures are actually out there in people’s XML files.

Instead of waiting for the release candidate to be packaged Wednesday evening, I’ve gone ahead and published the artifact from [build #4544](https://hudson.glassfish.org/view/Hudson/job/hudson-trunk/4544) which can be downloaded here: [hudson.war](https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/hudson_build4544.war)

If you have an **old** Hudson installation with, testing this build would be incredibly useful. Alan went on to say:

> If people find issues with OldDataMonitor, they should file them at [issues.hudson-ci.org](https://issues.hudson-ci.org) in "core" component and assign them to "mindless".

This change does not mutate any data (or at least it shouldn’t) so it should be safe, be on the look out for exceptions in Hudson’s log on startup.

- [development](/blog/tags/development/)
- [core](/blog/tags/core/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Let's talk about Hudson at JavaOne [Anchor](\#lets-talk-about-hudson-at-javaone)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 9, 2010
[Tweet](https://twitter.com/intent/tweet?text=Let%27s+talk+about+Hudson+at+JavaOne&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F09%2Flets-talk-about-hudson-at-javaone%2F)

A few months ago I enjoyed running a couple [interviews with folks](https://web.archive.org/web/20130514044904/https://jenkins-ci.org/views/interviews) who were using Hudson but lately I’ve lacked the time and coffee to get more interviews done. ![Interview time!](/sites/default/files/taperecorder.jpg)

I am planning on making up for it by bringing my fancy smancy tape recorder (i.e. a smartphone) and a few notepads to the upcoming [JavaOne conference](https://www.oracle.com/us/javaonedevelop/index.html) here in San Francisco.

If you’re interested in talking to me about how you or your company uses Hudson in your quest for world domination, you will be able to find me at the [Hudson hackathon](/content/pre-javaone-hudson-meetup) on Sunday the 19th, or at JavaOne on Monday, Tuesday and _maybe_ Wednesday.

Feel free to drop me a line at tyler\[at\]linux.com and we’ll set something up!

- [general](/blog/tags/general/)
- [interview](/blog/tags/interview/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Breaking! Hudson 1.351 Released [Anchor](\#breaking-hudson-1-351-released)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
March 15, 2010
[Tweet](https://twitter.com/intent/tweet?text=Breaking%21+Hudson+1.351+Released&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F03%2F15%2Fbreaking-hudson-1-351-released%2F)

Rush delivery from Hudson HQ! Hudson 1.351 just rolled out with a **very** important regression fix:

- Regression in 1.350 that can delete old build artifacts. ( [mailing list thread](https://n4.nabble.com/Warning-about-Hudson-1-350-Could-delete-your-artifacts-td1593483.html), [issue 5937](https://issues.jenkins.io/browse/JENKINS-5937))


Sorry for the hiccup everybody, we’re working pretty hard on getting a better, more stable, release process in place.

* * *

You can go grab the [latest .war file](http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from `hudson-ci.org` or if you’re using a native package, use your package manager to upgrade.

* * *

- [development](/blog/tags/development/)
- [feedback](/blog/tags/feedback/)
- [just for fun](/blog/tags/just for fun/)
- [links](/blog/tags/links/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Continuous Deployment on the new Digg [Anchor](\#continuous-deployment-on-the-new-digg)

[Andrew Bayer](/blog/authors/abayer/)
July 22, 2010
[Tweet](https://twitter.com/intent/tweet?text=Continuous+Deployment+on+the+new+Digg&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F22%2Fcontinuous-deployment-on-the-new-digg%2F)

In my capacity as Build Guy at [Digg](https://digg.com), I’ve written up a blog post on our new continuous deployment/code review/pre-tested commit workflow. We’re using a combination of Hudson, Git and [Gerrit](https://code.google.com/p/gerrit/), [Selenium](https://seleniumhq.org/) and more to make sure that every change going to Digg’s [new site](https://new.digg.com) has been thoroughly tested.

**Read the whole post, with all the juicy details over [on Digg’s Technology Blog](https://about.digg.com/blog/continuous-deployment-code-review-and-pre-tested-commits-digg4)!**

- [general](/blog/tags/general/)
- [core](/blog/tags/core/)
- [guest post](/blog/tags/guest post/)
- [links](/blog/tags/links/)
- [plugins](/blog/tags/plugins/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author [Anchor](\#about-the-author-1)

[Andrew Bayer](/blog/authors/abayer/)

Andrew was a core committer to Hudson and the author of numerous plugins.

- [GitHub](https://github.com/abayer)
- [Twitter](https://twitter.com/abayer)[Back to blog](/blog/)

# Regarding the start of April [Anchor](\#regarding-the-start-of-april)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
April 1, 2010
[Tweet](https://twitter.com/intent/tweet?text=Regarding+the+start+of+April&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F04%2F01%2Fregarding-the-start-of-april%2F)

I had briefly contemplating what sort of silly posts I could write to celebrate April Fool’s Day, when I sat down to write out some of them, I got a few sentences in and decided that they just weren’t funny enough. Either I have very high standards, or I’m terribly unfunny.

The web is awash with April Fool’s articles, comics, headlines and everything else, so instead I’m going to just give you a few useful links.

**A couple of Twitter links**

Besides the [@hudsonci](https://twitter.com/hudsonci) account, you can also follow a couple of Hudson’s more notable (or was it notorious?) hackers, such as our benevolent dictator, [Kohsuke Kawaguchi](https://twitter.com/kohsukekawa). [Ben Shine](https://twitter.com/bshine) from Yahoo! who’s been working pretty hard on making Hudson prettier. Then there’s [John Ferguson Smart](https://twitter.com/wakaleo) who’s been working on a [Hudson book](http://www.wakaleo.com/books/continuous-integration-with-hudson-the-book). Of course I’ve tried to collect as many Hudson contributors as possible in the [@contributors Twitter list](https://twitter.com/hudsonci/contributors).

**Hacking Hudson**

When starting to hack Hudson, it’s useful to start by understanding [how to build Hudson](https://wiki.jenkins.io/display/JENKINS/Building+Hudson). If hacking Hudson’s core isn’t your cup of tea, you can always start with the [plugin tutorial](https://wiki.jenkins.io/display/JENKINS/Plugin+tutorial) and try your hand at writing another awesome Hudson plugin. If you find yourself struggling to find out what methods do what while you’re hacking, you can always visit the regularly updated, [online Javadocs for Hudson](https://hudson.dev.java.net/nonav/javadoc/)

**Communicate**
The two primary mediums for communicating with the Hudson community are through the [mailing lists](https://wiki.jenkins.io/display/JENKINS/Mailing%20List) and the [IRC channel](https://wiki.jenkins.io/display/JENKINS/IRC+Channel). During "regular business hours" for the pacific standard time zone, you can usually get some decent real-time help or answers to most of your queries.

I’d list more, but I’m too busy reading about [Google’s nuclear weapons program](https://techcrunch.com/2010/03/31/exclusive-google-to-go-nuclear/). ;)

- [meta](/blog/tags/meta/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Thanks for the help! [Anchor](\#thanks-for-the-help)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
February 14, 2010
[Tweet](https://twitter.com/intent/tweet?text=Thanks+for+the+help%21&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F02%2F14%2Fthanks-for-the-help%2F)

A great community of developers and users is one of the many things that make Hudson a great tool and a fun project to work with, after launching Continuous Blog as an extensions of that community earlier this week there are some thanks in order to those that helped spread the word about CB and in turn, Hudson. Thanks to:

- Everybody on Twitter who retweeted the [Continuous Blog launch announcement](https://twitter.com/hudsonci/status/8796480478)

- [Julian Simpson](https://web.archive.org/web/20160422084828/http://www.juliansimpson.org/), also known as [The Build Doctor](https://www.build-doctor.com/) for helping [spread the word](https://www.build-doctor.com/2010/02/08/the-official-hudson-weblog/)

- [Kevin Farnham](https://twitter.com/kevin_farnham) for featuring the launch of Continuous Blog on the [Java.net](https://java.net) home page!


Of course, none of this would be possible without [Kohsuke](https://twitter.com/kohsukekawa) and a large collection of contributors that have made Hudson what it is today.

- [core](/blog/tags/core/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](https://www.jenkins.io/blog/)

# Pre-JavaOne Hudson Meetup [Anchor](https://www.jenkins.io/blog/2010/08/30/pre-javaone-hudson-meetup/\#pre-javaone-hudson-meetup)

[![R. Tyler Croy](https://www.jenkins.io/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](https://www.jenkins.io/blog/authors/rtyler/)
August 30, 2010
[Tweet](https://twitter.com/intent/tweet?text=Pre-JavaOne+Hudson+Meetup&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F08%2F30%2Fpre-javaone-hudson-meetup%2F)

As we near autumn up here in the Northern Hemisphere, the wind is starting to blow a bit chillier and here in the Bay Area that can only mean one thing: ~~Oracle is suing everybody!~~ it’s time for JavaOne!

A whole lot has changed since last year, Sun Microsystems was acquired by Oracle, [Kohsuke](https://kohsuke.org/) left Snoracle to found [InfraDNA](https://web.archive.org/web/20100612130510/http://infradna.com/) and Hudson has continued to [power on](https://www.jenkins.io/content/cloudbees-announce-hudson-service) as the single **best** continuous integration server on the planet.

While the tickets for Oracle OpenWorld/JavaOne are just as outrageously expensive as they were last year, we **are** hosting a meetup/hackathon/continuous-drinking-contest at [Digg](https://about.digg.com/opensource) the Sunday prior. We have not yet set any kind of agenda, but some core Hudson hackers and plenty of plugin developers should be in town so it should be a great time hacking on and/or with Hudson.

https://www.meetup.com/hudsonmeetup/calendar/14515128/

- **When:** September 19th, 1:00 p.m.

- **Location:** Digg’s Office: 1040 Mariposa St - Suite 100, San Francisco, CA 94107


















|     |     |
| --- | --- |
| `←` | Move left |
| `→` | Move right |
| `↑` | Move up |
| `↓` | Move down |
| `+` | Zoom in |
| `-` | Zoom out |
| `Home` | Jump left by 75% |
| `End` | Jump right by 75% |
| `Page Up` | Jump up by 75% |
| `Page Down` | Jump down by 75% |











































































![](https://www.google.com/maps/vt?pb=!1m5!1m4!1i14!2i2622!3i6332!4i256!2m3!1e0!2sm!3i714466539!2m3!1e2!2sspotlit!5i1!3m12!2sen!3sUS!5e289!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!1e3!23i47083502!27m14!299174093m13!14m12!1m8!1m2!1y9263763460145282963!2y13708560433605732495!4m2!1x377642318!2x3071024799!8b1!15sgcid%3Acompound_section!2b0!6b0!8b0&client=google-maps-embed&token=46432)



![](https://www.google.com/maps/vt?pb=!1m5!1m4!1i14!2i2622!3i6333!4i256!2m3!1e0!2sm!3i714466539!2m3!1e2!2sspotlit!5i1!3m12!2sen!3sUS!5e289!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!1e3!23i47083502!27m14!299174093m13!14m12!1m8!1m2!1y9263763460145282963!2y13708560433605732495!4m2!1x377642318!2x3071024799!8b1!15sgcid%3Acompound_section!2b0!6b0!8b0&client=google-maps-embed&token=125481)



![](https://www.google.com/maps/vt?pb=!1m5!1m4!1i14!2i2621!3i6332!4i256!2m3!1e0!2sm!3i714466539!2m3!1e2!2sspotlit!5i1!3m12!2sen!3sUS!5e289!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!1e3!23i47083502!27m14!299174093m13!14m12!1m8!1m2!1y9263763460145282963!2y13708560433605732495!4m2!1x377642318!2x3071024799!8b1!15sgcid%3Acompound_section!2b0!6b0!8b0&client=google-maps-embed&token=127688)



![](https://www.google.com/maps/vt?pb=!1m5!1m4!1i14!2i2621!3i6333!4i256!2m3!1e0!2sm!3i714466539!2m3!1e2!2sspotlit!5i1!3m12!2sen!3sUS!5e289!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!1e3!23i47083502!27m14!299174093m13!14m12!1m8!1m2!1y9263763460145282963!2y13708560433605732495!4m2!1x377642318!2x3071024799!8b1!15sgcid%3Acompound_section!2b0!6b0!8b0&client=google-maps-embed&token=75666)





















To navigate, press the arrow keys.





































1040 Mariposa St #100





[View larger map](https://maps.google.com/maps?ll=37.76422,-122.394271&z=14&t=m&hl=en&gl=US&mapclient=embed&q=1040%20Mariposa%20St%20%23100%20San%20Francisco%2C%20CA%2094107)



















































![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23666%22%20d%3D%22M18%207h-7V0H7v7H0v4h7v7h4v-7h7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23333%22%20d%3D%22M18%207h-7V0H7v7H0v4h7v7h4v-7h7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23111%22%20d%3D%22M18%207h-7V0H7v7H0v4h7v7h4v-7h7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23d1d1d1%22%20d%3D%22M18%207h-7V0H7v7H0v4h7v7h4v-7h7z%22/%3E%3C/svg%3E)



![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23666%22%20d%3D%22M0%207h18v4H0V7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23333%22%20d%3D%22M0%207h18v4H0V7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23111%22%20d%3D%22M0%207h18v4H0V7z%22/%3E%3C/svg%3E)![](data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2018%2018%22%3E%3Cpath%20fill%3D%22%23d1d1d1%22%20d%3D%22M0%207h18v4H0V7z%22/%3E%3C/svg%3E)






























































![](https://www.google.com/maps/vt?pb=!1m5!1m4!1i11!2i327!3i791!4i256!2m1!1e1!3m12!2sen!3sUS!5e289!12m3!1e37!2m1!1ssmartmaps!12m4!1e26!2m2!1sstyles!2zcy5lOmx8cC52Om9mZg!4e0!5m1!1e3!23i47083502&client=google-maps-embed&token=61055)





















To navigate, press the arrow keys.










































![Google](data:image/svg+xml,%3Csvg%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2069%2029%22%3E%3Cg%20opacity%3D%22.6%22%20fill%3D%22%23fff%22%20stroke%3D%22%23fff%22%20stroke-width%3D%221.5%22%3E%3Cpath%20d%3D%22M17.4706%207.33616L18.0118%206.79504%2017.4599%206.26493C16.0963%204.95519%2014.2582%203.94522%2011.7008%203.94522c-4.613699999999999%200-8.50262%203.7551699999999997-8.50262%208.395779999999998C3.19818%2016.9817%207.0871%2020.7368%2011.7008%2020.7368%2014.1712%2020.7368%2016.0773%2019.918%2017.574%2018.3689%2019.1435%2016.796%2019.5956%2014.6326%2019.5956%2012.957%2019.5956%2012.4338%2019.5516%2011.9316%2019.4661%2011.5041L19.3455%2010.9012H10.9508V14.4954H15.7809C15.6085%2015.092%2015.3488%2015.524%2015.0318%2015.8415%2014.403%2016.4629%2013.4495%2017.1509%2011.7008%2017.1509%209.04835%2017.1509%206.96482%2015.0197%206.96482%2012.341%206.96482%209.66239%209.04835%207.53119%2011.7008%207.53119%2013.137%207.53119%2014.176%208.09189%2014.9578%208.82348L15.4876%209.31922%2016.0006%208.80619%2017.4706%207.33616z%22/%3E%3Cpath%20d%3D%22M24.8656%2020.7286C27.9546%2020.7286%2030.4692%2018.3094%2030.4692%2015.0594%2030.4692%2011.7913%2027.953%209.39011%2024.8656%209.39011%2021.7783%209.39011%2019.2621%2011.7913%2019.2621%2015.0594c0%203.25%202.514499999999998%205.6692%205.6035%205.6692zM24.8656%2012.8282C25.8796%2012.8282%2026.8422%2013.6652%2026.8422%2015.0594%2026.8422%2016.4399%2025.8769%2017.2905%2024.8656%2017.2905%2023.8557%2017.2905%2022.8891%2016.4331%2022.8891%2015.0594%2022.8891%2013.672%2023.853%2012.8282%2024.8656%2012.8282z%22/%3E%3Cpath%20d%3D%22M35.7511%2017.2905v0H35.7469C34.737%2017.2905%2033.7703%2016.4331%2033.7703%2015.0594%2033.7703%2013.672%2034.7343%2012.8282%2035.7469%2012.8282%2036.7608%2012.8282%2037.7234%2013.6652%2037.7234%2015.0594%2037.7234%2016.4439%2036.7554%2017.2962%2035.7511%2017.2905zM35.7387%2020.7286C38.8277%2020.7286%2041.3422%2018.3094%2041.3422%2015.0594%2041.3422%2011.7913%2038.826%209.39011%2035.7387%209.39011%2032.6513%209.39011%2030.1351%2011.7913%2030.1351%2015.0594%2030.1351%2018.3102%2032.6587%2020.7286%2035.7387%2020.7286z%22/%3E%3Cpath%20d%3D%22M51.953%2010.4357V9.68573H48.3999V9.80826C47.8499%209.54648%2047.1977%209.38187%2046.4808%209.38187%2043.5971%209.38187%2041.0168%2011.8998%2041.0168%2015.0758%2041.0168%2017.2027%2042.1808%2019.0237%2043.8201%2019.9895L43.7543%2020.0168%2041.8737%2020.797%2041.1808%2021.0844%2041.4684%2021.7772C42.0912%2023.2776%2043.746%2025.1469%2046.5219%2025.1469%2047.9324%2025.1469%2049.3089%2024.7324%2050.3359%2023.7376%2051.3691%2022.7367%2051.953%2021.2411%2051.953%2019.2723v-8.8366zm-7.2194%209.9844L44.7334%2020.4196C45.2886%2020.6201%2045.878%2020.7286%2046.4808%2020.7286%2047.1616%2020.7286%2047.7866%2020.5819%2048.3218%2020.3395%2048.2342%2020.7286%2048.0801%2021.0105%2047.8966%2021.2077%2047.6154%2021.5099%2047.1764%2021.7088%2046.5219%2021.7088%2045.61%2021.7088%2045.0018%2021.0612%2044.7336%2020.4201zM46.6697%2012.8282C47.6419%2012.8282%2048.5477%2013.6765%2048.5477%2015.084%2048.5477%2016.4636%2047.6521%2017.2987%2046.6697%2017.2987%2045.6269%2017.2987%2044.6767%2016.4249%2044.6767%2015.084%2044.6767%2013.7086%2045.6362%2012.8282%2046.6697%2012.8282zM55.7387%205.22083v-.75H52.0788V20.4412H55.7387V5.220829999999999z%22/%3E%3Cpath%20d%3D%22M63.9128%2016.0614L63.2945%2015.6492%2062.8766%2016.2637C62.4204%2016.9346%2061.8664%2017.3069%2061.0741%2017.3069%2060.6435%2017.3069%2060.3146%2017.2088%2060.0544%2017.0447%2059.9844%2017.0006%2059.9161%2016.9496%2059.8498%2016.8911L65.5497%2014.5286%2066.2322%2014.2456%2065.9596%2013.5589%2065.7406%2013.0075C65.2878%2011.8%2063.8507%209.39832%2060.8278%209.39832%2057.8445%209.39832%2055.5034%2011.7619%2055.5034%2015.0676%2055.5034%2018.2151%2057.8256%2020.7369%2061.0659%2020.7369%2063.6702%2020.7369%2065.177%2019.1378%2065.7942%2018.2213L66.2152%2017.5963%2065.5882%2017.1783%2063.9128%2016.0614zM61.3461%2012.8511L59.4108%2013.6526C59.7903%2013.0783%2060.4215%2012.7954%2060.9017%2012.7954%2061.067%2012.7954%2061.2153%2012.8161%2061.3461%2012.8511z%22/%3E%3C/g%3E%3Cpath%20d%3D%22M11.7008%2019.9868C7.48776%2019.9868%203.94818%2016.554%203.94818%2012.341%203.94818%208.12803%207.48776%204.69522%2011.7008%204.69522%2014.0331%204.69522%2015.692%205.60681%2016.9403%206.80583L15.4703%208.27586C14.5751%207.43819%2013.3597%206.78119%2011.7008%206.78119%208.62108%206.78119%206.21482%209.26135%206.21482%2012.341%206.21482%2015.4207%208.62108%2017.9009%2011.7008%2017.9009%2013.6964%2017.9009%2014.8297%2017.0961%2015.5606%2016.3734%2016.1601%2015.7738%2016.5461%2014.9197%2016.6939%2013.7454h-4.9931V11.6512h7.0298C18.8045%2012.0207%2018.8456%2012.4724%2018.8456%2012.957%2018.8456%2014.5255%2018.4186%2016.4637%2017.0389%2017.8434%2015.692%2019.2395%2013.9838%2019.9868%2011.7008%2019.9868z%22%20fill%3D%22%234285F4%22/%3E%3Cpath%20d%3D%22M29.7192%2015.0594C29.7192%2017.8927%2027.5429%2019.9786%2024.8656%2019.9786%2022.1884%2019.9786%2020.0121%2017.8927%2020.0121%2015.0594%2020.0121%2012.2096%2022.1884%2010.1401%2024.8656%2010.1401%2027.5429%2010.1401%2029.7192%2012.2096%2029.7192%2015.0594zM27.5922%2015.0594C27.5922%2013.2855%2026.3274%2012.0782%2024.8656%2012.0782S22.1391%2013.2937%2022.1391%2015.0594C22.1391%2016.8086%2023.4038%2018.0405%2024.8656%2018.0405S27.5922%2016.8168%2027.5922%2015.0594z%22%20fill%3D%22%23E94235%22/%3E%3Cpath%20d%3D%22M40.5922%2015.0594C40.5922%2017.8927%2038.4159%2019.9786%2035.7387%2019.9786%2033.0696%2019.9786%2030.8851%2017.8927%2030.8851%2015.0594%2030.8851%2012.2096%2033.0614%2010.1401%2035.7387%2010.1401%2038.4159%2010.1401%2040.5922%2012.2096%2040.5922%2015.0594zM38.4734%2015.0594C38.4734%2013.2855%2037.2087%2012.0782%2035.7469%2012.0782%2034.2851%2012.0782%2033.0203%2013.2937%2033.0203%2015.0594%2033.0203%2016.8086%2034.2851%2018.0405%2035.7469%2018.0405%2037.2087%2018.0487%2038.4734%2016.8168%2038.4734%2015.0594z%22%20fill%3D%22%23FABB05%22/%3E%3Cpath%20d%3D%22M51.203%2010.4357v8.8366C51.203%2022.9105%2049.0595%2024.3969%2046.5219%2024.3969%2044.132%2024.3969%2042.7031%2022.7955%2042.161%2021.4897L44.0417%2020.7095C44.3784%2021.5143%2045.1997%2022.4588%2046.5219%2022.4588%2048.1479%2022.4588%2049.1499%2021.4487%2049.1499%2019.568V18.8617H49.0759C48.5914%2019.4612%2047.6552%2019.9786%2046.4808%2019.9786%2044.0171%2019.9786%2041.7668%2017.8352%2041.7668%2015.0758%2041.7668%2012.3%2044.0253%2010.1319%2046.4808%2010.1319%2047.6552%2010.1319%2048.5914%2010.6575%2049.0759%2011.2323H49.1499V10.4357H51.203zM49.2977%2015.084C49.2977%2013.3512%2048.1397%2012.0782%2046.6697%2012.0782%2045.175%2012.0782%2043.9267%2013.3429%2043.9267%2015.084%2043.9267%2016.8004%2045.175%2018.0487%2046.6697%2018.0487%2048.1397%2018.0487%2049.2977%2016.8004%2049.2977%2015.084z%22%20fill%3D%22%234285F4%22/%3E%3Cpath%20d%3D%22M54.9887%205.22083V19.6912H52.8288V5.220829999999999H54.9887z%22%20fill%3D%22%2334A853%22/%3E%3Cpath%20d%3D%22M63.4968%2016.6854L65.1722%2017.8023C64.6301%2018.6072%2063.3244%2019.9869%2061.0659%2019.9869%2058.2655%2019.9869%2056.2534%2017.827%2056.2534%2015.0676%2056.2534%2012.1439%2058.2901%2010.1483%2060.8278%2010.1483%2063.3818%2010.1483%2064.6301%2012.1768%2065.0408%2013.2773L65.2625%2013.8357%2058.6843%2016.5623C59.1853%2017.5478%2059.9737%2018.0569%2061.0741%2018.0569%2062.1746%2018.0569%2062.9384%2017.5067%2063.4968%2016.6854zM58.3312%2014.9115L62.7331%2013.0884C62.4867%2012.4724%2061.764%2012.0454%2060.9017%2012.0454%2059.8012%2012.0454%2058.2737%2013.0145%2058.3312%2014.9115z%22%20fill%3D%22%23E94235%22/%3E%3C/svg%3E)

























![](data:image/svg+xml,%3Csvg%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2016%2010%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M1.5%200C.671573%200%200%20.671573%200%201.5v7C0%209.32843.671573%2010%201.5%2010h13C15.3284%2010%2016%209.32843%2016%208.5v-7C16%20.671573%2015.3284%200%2014.5%200h-13zM5%207C4.44772%207%204%207.44772%204%208%204%208.55229%204.44772%209%205%209h6C11.5523%209%2012%208.55229%2012%208%2012%207.44772%2011.5523%207%2011%207H5zM1%204.25c0-.13807.11193-.25.25-.25h1.5c.13807%200%20.25.11193.25.25v1.5c0%20.13807-.11193.25-.25.25H1.5C1.22386%206%201%205.77614%201%205.5V4.25zM1.5%201c-.27614%200-.5.22386-.5.5v1.25c0%20.13807.11193.25.25.25h1.5c.13807%200%20.25-.11193.25-.25v-1.5C3%201.11193%202.88807%201%202.75%201H1.5zM4%204.25c0-.13807.11193-.25.25-.25h1.5c.13807%200%20.25.11193.25.25v1.5c0%20.13807-.11193.25-.25.25h-1.5C4.11193%206%204%205.88807%204%205.75v-1.5zM4.25%201c-.13807%200-.25.11193-.25.25v1.5c0%20.13807.11193.25.25.25h1.5c.13807%200%20.25-.11193.25-.25v-1.5C6%201.11193%205.88807%201%205.75%201h-1.5zM7%204.25c0-.13807.11193-.25.25-.25h1.5C8.88807%204%209%204.11193%209%204.25v1.5C9%205.88807%208.88807%206%208.75%206h-1.5C7.11193%206%207%205.88807%207%205.75v-1.5zM7.25%201c-.13807%200-.25.11193-.25.25v1.5c0%20.13807.11193.25.25.25h1.5C8.88807%203%209%202.88807%209%202.75v-1.5C9%201.11193%208.88807%201%208.75%201h-1.5zM10%204.25C10%204.11193%2010.1119%204%2010.25%204h1.5C11.8881%204%2012%204.11193%2012%204.25v1.5C12%205.88807%2011.8881%206%2011.75%206h-1.5C10.1119%206%2010%205.88807%2010%205.75v-1.5zM10.25%201C10.1119%201%2010%201.11193%2010%201.25v1.5C10%202.88807%2010.1119%203%2010.25%203h1.5C11.8881%203%2012%202.88807%2012%202.75v-1.5C12%201.11193%2011.8881%201%2011.75%201h-1.5zM13%204.25C13%204.11193%2013.1119%204%2013.25%204h1.5C14.8881%204%2015%204.11193%2015%204.25V5.5C15%205.77614%2014.7761%206%2014.5%206h-1.25C13.1119%206%2013%205.88807%2013%205.75v-1.5zM13.25%201C13.1119%201%2013%201.11193%2013%201.25v1.5C13%202.88807%2013.1119%203%2013.25%203h1.5C14.8881%203%2015%202.88807%2015%202.75V1.5C15%201.22386%2014.7761%201%2014.5%201h-1.25z%22%20fill%3D%22%233C4043%22/%3E%3C/svg%3E)























Map DataMap data ©2024 Google









Map data ©2024 Google














500 m




























Click to toggle between metric and imperial units















[Terms](https://www.google.com/intl/en_US/help/terms_maps.html)



















[Report a map error](https://www.google.com/maps/@37.7642198,-122.3942709,14z/data=!10m1!1e1!12b1?source=apiv3&rapsrc=apiv3 "Report errors in the road map or imagery to Google")

















https://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=1040+Mariposa+St+-+Suite+100+San+Francisco,+CA+94107&sll=37.0625,-95.677068&sspn=39.780156,78.662109&ie=UTF8&hq=&hnear=1040+Mariposa+St,+San+Francisco,+California+94107&ll=37.764201,-122.394304&spn=0.020356,0.025749&z=14&iwloc=A


* * *

|     |     |
| --- | --- |
|  | Unlike last year, we’re trying to organize this with [Meetup.com](https://meetup.com/), if you experience any difficulties RSVPing let us know |

* * *

- [general](https://www.jenkins.io/blog/tags/general/)
- [just for fun](https://www.jenkins.io/blog/tags/just%20for%20fun/)
- [meetup](https://www.jenkins.io/blog/tags/meetup/)
- [javaone](https://www.jenkins.io/blog/tags/javaone/)

## About the author [Anchor](https://www.jenkins.io/blog/2010/08/30/pre-javaone-hudson-meetup/\#about-the-author-1)

![R. Tyler Croy](https://www.jenkins.io/images/avatars/rtyler.jpeg)

[R. Tyler Croy](https://www.jenkins.io/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com/)[Back to blog](/blog/)

# JavaOne: Day One in Pictures [Anchor](\#javaone-day-one-in-pictures)

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 21, 2010
[Tweet](https://twitter.com/intent/tweet?text=JavaOne%3A+Day+One+in+Pictures&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F21%2Fjavaone-day-one-in-pictures%2F)

In case you haven’t been following the [frequently updated @hudsonci](https://twitter.com/hudsonci) Twitter stream. Here’s a collection of photos I’ve taken thus far.

</param> </param> </param></embed>

- [general](/blog/tags/general/)
- [javaone](/blog/tags/javaone/)

## About the author [Anchor](\#about-the-author-1)

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Hudson with Selenium and Sauce On-Demand Videos

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
July 21, 2010
[Tweet](https://twitter.com/intent/tweet?text=Hudson+with+Selenium+and+Sauce+On-Demand+Videos&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F07%2F21%2Fhudson-with-selenium-and-sauce-on-demand-videos%2F)

A few weeks ago, Kohsuke stopped by the [San Francisco Selenium Meetup](https://meetup.com/seleniumsanfrancisco) hosted by [Sauce Labs](https://saucelabs.com) to talk about all things Selenium and Hudson related (with a bit of Sauce in there too).

The good folks over at Sauce Labs have gotten around to posting some of the videos taken with Kohsuke.

Instead of embed the videos, I wanted to directly **[link to the post](https://saucelabs.com/blog/index.php/2010/07/sfse-meetup-videos-hudson-with-selenium-sauce-ondemand/)** and make sure that you all went over to check out Sauce Labs, they’re up to some interesting things over there.

- [general](/blog/tags/general/)
- [interview](/blog/tags/interview/)
- [meetup](/blog/tags/meetup/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)[Back to blog](/blog/)

# Subversion repository change notification: push vs pull

[![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)\\
Kohsuke Kawaguchi](/blog/authors/kohsuke/)
June 10, 2010
[Tweet](https://twitter.com/intent/tweet?text=Subversion+repository+change+notification%3A+push+vs+pull&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F06%2F10%2Fsubversion-repository-change-notification-push-vs-pull%2F)

People often configure [Hudson](https://en.wikipedia.org/wiki/Hudson%20%28software%29) to start a new build whenever a change is made to the repository. In fact, this is often considered central to the practice of continuous integration.

There are two ways to achieve this. One is the "pull" model, where Hudson periodically reaches out to a Subversion repository to see if there is any changes. The other is the "push" model, where you make the Subversion repository reach out to Hudson.

Both approaches have trade-offs. The pull model is easier to configure, since you can do this entirely from Hudson. But this comes at the expense of increased load to the Subversion server. Even though the overhead of Subversion polling is relatively low, as you add more projects to Hudson and increase the polling frequency, the overhead may get non-trivial (imagine the number of Hudson pollings that the poor [java.net](https://java.net) Subversion server gets, for example.) A more serious downside, in my opinion, is that this increases the delay from your commit to a build. For example, if your build just takes 5 mins, then even if you poll every minute, you pay on average 30 seconds delay before a build starts — a 10% overhead!

The push approach eliminates those two downsides, but it requires a post-commit hook configuration in the Subversion repository, which has to be done manually by the administrator, because those scripts are not exposed to external systems like Hudson.

With that said, if you do have an access to the Subversion repository post-commit hook, I highly recommend the push approach, and in Hudson we made it as easy as possible to configure the set up. Here’s the script you’ll need in your post-commit hook:

```
REPOS="$1" REV="$2" UUID=\`svnlook uuid $REPOS\` /usr/bin/wget \
       --header "Content-Type:text/plain;charset=UTF-8" \
       --post-data "\`svnlook changed --revision $REV $REPOS\`" \
       --output-document "-" \
       https://server/hudson/subversion/${UUID}/notifyCommit?rev=$REV
```

This script basically just tells Hudson that there was a change in a repository. Hudson will then check this information against all the jobs that have a polling configured, and schedule the builds accordingly. The beauty of this approach is two-folds:

- The script doesn’t change when you add/remove/rename jobs.

- The overhead is constant regardless of the number of jobs.


If you haven’t configured a push setup yet, now is the time to do so!

- [general](/blog/tags/general/)
- [jenkinsci](/blog/tags/jenkinsci/)

## About the author

![Kohsuke Kawaguchi](/images/avatars/kohsuke.jpeg)

[Kohsuke Kawaguchi](/blog/authors/kohsuke/)

Kohsuke is the creator of Jenkins.

- [GitHub](https://github.com/kohsuke)
- [Twitter](https://twitter.com/kohsukekawa)[Back to blog](/blog/)

# Tweet of the Day

[![R. Tyler Croy](/images/avatars/rtyler.jpeg)\\
R. Tyler Croy](/blog/authors/rtyler/)
September 20, 2010
[Tweet](https://twitter.com/intent/tweet?text=Tweet+of+the+Day&url=https%3A%2F%2Fwww.jenkins.io%2Fblog%2F2010%2F09%2F20%2Ftweet-of-the-day%2F)

Some of you may have been following all the photos posted to the [hudsonlabs Flickr account](https://www.flickr.com/photos/hudsonlabs/) from this year’s JavaOne conference in San Francisco.

[Alan O’Leary](https://twitter.com/a1o1) responded to this photo with one of the [funniest comments](https://twitter.com/a1o1/status/25032555850) of the day:

[![This way to JavaOne](https://farm5.static.flickr.com/4151/5008009575_52e7f18fdf.jpg)](https://www.flickr.com/photos/hudsonlabs/5008009575/)

**_"Java and Oracle - 'In Opposite Directions'"_**

- [general](/blog/tags/general/)
- [just for fun](/blog/tags/just for fun/)

## About the author

![R. Tyler Croy](/images/avatars/rtyler.jpeg)

[R. Tyler Croy](/blog/authors/rtyler/)

R. Tyler Croy has been part of the Jenkins project for the past seven years.
While avoiding contributing any Java code, Tyler is involved in many of the
other aspects of the project which keep it running, such as this website,
infrastructure, governance, etc.

- [GitHub](https://github.com/rtyler)
- [Twitter](https://twitter.com/agentdero)
- [Blog](http://unethicalblogger.com)
