#!/usr/bin/env ruby

require 'yaml'

HANDBOOK_DIR = 'content/doc/book'
OUTPUT_ADOC = ARGV.first

documents = []
chapters = YAML.load_file(File.open("#{HANDBOOK_DIR}/_book.yml", 'r'))


# Collect all our handbook chapters and sections into big long list of files
chapters['chapters'].each do |chapter|
  puts ">> Processing #{chapter}"
  documents << File.join(HANDBOOK_DIR, chapter, 'index.adoc')

  sections = YAML.load_file(File.open(File.join(HANDBOOK_DIR, chapter, '_chapter.yml'), 'r'))
  next unless sections['sections']

  sections['sections'].each do |section|
    documents << File.join(HANDBOOK_DIR, chapter, "#{section}.adoc")
  end
end

# read_adoc takes the given file path, prunes and YAML frontmatter, inline
# asciidoc document attributes and returns the "raw" asciidoc
def read_adoc(filepath)
  ouput = []
  buffer = File.open(filepath, 'r').readlines
  if buffer.first.match(/---(\s)?/)
    frontmatter_end = buffer[1 .. -1].find_index { |c| c.match(/---(\s)?/) }
    # Once we find the front-matter offset, move things out appropriately
    buffer = buffer[(frontmatter_end + 2) .. -1]
  end

  # Filter any document properties
  output = buffer.reject do |line|
    line.start_with?(':')
  end
  return output.join('')
end

File.open(OUTPUT_ADOC, 'w+') do |f|
  f.write <<-EOF
:description: Jenkins User Handbook
:doctype: book
:author: jenkinsci-docs@googlegroups.com
:email: jenkinsci-docs@googlegroups.com
:sectanchors:
:hide-uri-scheme:
:toc:
:imagesdir: doc/book/resources

= Jenkins User Handbook

EOF

  documents.each do |document|
    f.write read_adoc(document)
  end
end
